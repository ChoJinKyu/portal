PROCEDURE SP_SE_EVAL_SETUP_SAVE2_PROC (
    IN I_ETYPE TABLE(TENANT_ID NVARCHAR(10),
                     COMPANY_CODE NVARCHAR(10),
                     ORG_TYPE_CODE NVARCHAR(2),
                     ORG_CODE NVARCHAR(10),
                     EVALUATION_OPERATION_UNIT_CODE NVARCHAR(30),
                     EVALUATION_TYPE_CODE NVARCHAR(30),
                     EVALUATION_TYPE_NAME NVARCHAR(50),
                     EVALUATION_TYPE_DISTRB_SCORE_RATE DECIMAL,
                     USE_FLAG BOOLEAN)
   ,IN I_EGRAD TABLE(TRANSACTION_CODE NVARCHAR(1),
                     TENANT_ID NVARCHAR(10),
                     COMPANY_CODE NVARCHAR(10),
                     ORG_TYPE_CODE NVARCHAR(2),
                     ORG_CODE NVARCHAR(10),
                     EVALUATION_OPERATION_UNIT_CODE NVARCHAR(30),
                     EVALUATION_TYPE_CODE NVARCHAR(30),
                     EVALUATION_GRADE NVARCHAR(10),
                     EVALUATION_GRADE_START_SCORE DECIMAL(5,2),
                     EVALUATION_GRADE_END_SCORE DECIMAL(5,2),
                     INP_APPLY_CODE NVARCHAR(30))
   ,IN I_USER_ID NVARCHAR(255)
   ,OUT O_MSG TABLE(RETURN_CODE NVARCHAR(2),
                    RETURN_MSG NVARCHAR(1000))
)
LANGUAGE SQLSCRIPT
SQL SECURITY INVOKER 
AS
BEGIN

	DECLARE EXIT HANDLER FOR SQLEXCEPTION ROLLBACK;
    
    BEGIN
    	DECLARE EXIT HANDLER FOR SQLEXCEPTION
        BEGIN
            :O_MSG.INSERT(('NG', 'Evaluation type processing error. (' || ::SQL_ERROR_CODE||'-'||::SQL_ERROR_MESSAGE || ')'), 1);
            RESIGNAL;
        END;
    
        MERGE INTO SP_SE_EVAL_TYPE AS ET
        USING :I_ETYPE AS IET
        ON    ET.TENANT_ID = IET.TENANT_ID
        AND   ET.COMPANY_CODE = IET.COMPANY_CODE
        AND   ET.ORG_TYPE_CODE = IET.ORG_TYPE_CODE
        AND   ET.ORG_CODE = IET.ORG_CODE
        AND   ET.EVALUATION_OPERATION_UNIT_CODE = IET.EVALUATION_OPERATION_UNIT_CODE
        AND   ET.EVALUATION_TYPE_CODE = IET.EVALUATION_TYPE_CODE
        WHEN MATCHED THEN
            UPDATE 
            SET    ET.EVALUATION_TYPE_NAME = IET.EVALUATION_TYPE_NAME
                  ,ET.EVALUATION_TYPE_DISTRB_SCORE_RATE = IET.EVALUATION_TYPE_DISTRB_SCORE_RATE
                  ,USE_FLAG = IET.USE_FLAG
                  ,ET.LOCAL_UPDATE_DTM = NOW()
                  ,ET.UPDATE_USER_ID = :I_USER_ID
                  ,ET.SYSTEM_UPDATE_DTM = NOW()
        WHEN NOT MATCHED THEN
            INSERT (TENANT_ID
                   ,COMPANY_CODE
                   ,ORG_TYPE_CODE
                   ,ORG_CODE
                   ,EVALUATION_OPERATION_UNIT_CODE
                   ,EVALUATION_TYPE_CODE
                   ,EVALUATION_TYPE_NAME
                   ,EVALUATION_TYPE_DISTRB_SCORE_RATE
                   ,USE_FLAG
                   ,LOCAL_CREATE_DTM
                   ,LOCAL_UPDATE_DTM
                   ,CREATE_USER_ID
                   ,UPDATE_USER_ID
                   ,SYSTEM_CREATE_DTM
                   ,SYSTEM_UPDATE_DTM)
            VALUES (IET.TENANT_ID
                   ,IET.COMPANY_CODE
                   ,IET.ORG_TYPE_CODE
                   ,IET.ORG_CODE
                   ,IET.EVALUATION_OPERATION_UNIT_CODE
                   ,IET.EVALUATION_TYPE_CODE
                   ,IET.EVALUATION_TYPE_NAME
                   ,IET.EVALUATION_TYPE_DISTRB_SCORE_RATE
                   ,IET.USE_FLAG
                   ,NOW()
                   ,NOW()
                   ,:I_USER_ID
                   ,:I_USER_ID
                   ,NOW()
                   ,NOW())
        ;
    END;

    BEGIN
    	DECLARE EXIT HANDLER FOR SQLEXCEPTION
        BEGIN
            :O_MSG.INSERT(('NG', 'Evaluation grade processing error. (' || ::SQL_ERROR_CODE||'-'||::SQL_ERROR_MESSAGE || ')'), 1);
            RESIGNAL;
        END;
        
        DELETE FROM SP_SE_EVAL_GRADE
        WHERE  (TENANT_ID,
                COMPANY_CODE,
                ORG_TYPE_CODE,
                ORG_CODE,
                EVALUATION_OPERATION_UNIT_CODE,
                EVALUATION_TYPE_CODE,
                EVALUATION_GRADE) IN (SELECT TENANT_ID,
                                             COMPANY_CODE,
                                             ORG_TYPE_CODE,
                                             ORG_CODE,
                                             EVALUATION_OPERATION_UNIT_CODE,
                                             EVALUATION_TYPE_CODE,
                                             EVALUATION_GRADE
                                      FROM   :I_EGRAD
                                      WHERE  TRANSACTION_CODE = 'D')
        ;

        INSERT INTO SP_SE_EVAL_GRADE
            (TENANT_ID
            ,COMPANY_CODE
            ,ORG_TYPE_CODE
            ,ORG_CODE
            ,EVALUATION_OPERATION_UNIT_CODE
            ,EVALUATION_TYPE_CODE
            ,EVALUATION_GRADE
            ,EVALUATION_GRADE_START_SCORE
            ,EVALUATION_GRADE_END_SCORE
            ,INP_APPLY_CODE
            ,LOCAL_CREATE_DTM
            ,LOCAL_UPDATE_DTM
            ,CREATE_USER_ID
            ,UPDATE_USER_ID
            ,SYSTEM_CREATE_DTM
            ,SYSTEM_UPDATE_DTM) 
        SELECT TENANT_ID
              ,COMPANY_CODE
              ,ORG_TYPE_CODE
              ,ORG_CODE
              ,EVALUATION_OPERATION_UNIT_CODE
              ,EVALUATION_TYPE_CODE
              ,EVALUATION_GRADE
              ,EVALUATION_GRADE_START_SCORE
              ,EVALUATION_GRADE_END_SCORE
              ,INP_APPLY_CODE
              ,NOW()
              ,NOW()
              ,:I_USER_ID
              ,:I_USER_ID
              ,NOW()
              ,NOW()
        FROM   :I_EGRAD
        WHERE  TRANSACTION_CODE = 'I'
        ;
    
        MERGE INTO SP_SE_EVAL_GRADE AS GRA
        USING :I_EGRAD AS IGRA
        ON    GRA.TENANT_ID = IGRA.TENANT_ID
        AND   GRA.COMPANY_CODE = IGRA.COMPANY_CODE
        AND   GRA.ORG_TYPE_CODE = IGRA.ORG_TYPE_CODE
        AND   GRA.ORG_CODE = IGRA.ORG_CODE
        AND   GRA.EVALUATION_OPERATION_UNIT_CODE = IGRA.EVALUATION_OPERATION_UNIT_CODE
        AND   GRA.EVALUATION_TYPE_CODE = IGRA.EVALUATION_TYPE_CODE
        AND   GRA.EVALUATION_GRADE = IGRA.EVALUATION_GRADE
        AND   IGRA.TRANSACTION_CODE = 'U'
        WHEN MATCHED THEN
            UPDATE 
            SET    EVALUATION_GRADE_START_SCORE = IGRA.EVALUATION_GRADE_START_SCORE
                  ,EVALUATION_GRADE_END_SCORE = IGRA.EVALUATION_GRADE_END_SCORE
                  ,INP_APPLY_CODE = IGRA.INP_APPLY_CODE
                  ,LOCAL_UPDATE_DTM = NOW()
                  ,UPDATE_USER_ID = :I_USER_ID
                  ,SYSTEM_UPDATE_DTM = NOW()
        ;
    END;

    COMMIT;
    O_MSG = SELECT 'OK' RETURN_CODE, 'Successfully Saved.' RETURN_MSG FROM DUMMY;
END;