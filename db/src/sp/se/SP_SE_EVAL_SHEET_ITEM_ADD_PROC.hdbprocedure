PROCEDURE SP_SE_EVAL_SHEET_ITEM_ADD_PROC (
    IN I_ITEM_TYPE TABLE(TENANT_ID     NVARCHAR(5)                       /*테넌트ID*/
                        ,COMPANY_CODE  NVARCHAR(10)                      /*회사코드*/
                        ,ORG_TYPE_CODE NVARCHAR(2)                       /*조직유형코드*/
                        ,ORG_CODE      NVARCHAR(10)                      /*조직코드*/
                        ,EVALUATION_OPERATION_UNIT_CODE   NVARCHAR(30)   /*평가운영단위코드*/
                        ,EVALUATION_TYPE_CODE             NVARCHAR(30)   /*평가유형코드*/
                        ,EVALUATION_ARTICLE_CODE          NVARCHAR(15)   /*평가항목코드*/
                        ,REGULAR_EVALUATION_ID            NVARCHAR(100)  /*정기평가ID*/
                        )
   ,IN I_USER_ID NVARCHAR(255)
   ,OUT O_MSG TABLE(RETURN_CODE NVARCHAR(2),
                    RETURN_MSG NVARCHAR(1000))
)
LANGUAGE SQLSCRIPT
SQL SECURITY INVOKER
AS
BEGIN
    /*평가Sheet관리 - 평가항목추가*/
    DECLARE V_EXT_CNT INT = 0;

    DECLARE V_TENANT_ID     NVARCHAR(5);
    DECLARE V_COMPANY_CODE  NVARCHAR(10);
    DECLARE V_ORG_TYPE_CODE NVARCHAR(2);
    DECLARE V_ORG_CODE      NVARCHAR(10);
    DECLARE V_EVALUATION_OPERATION_UNIT_CODE   NVARCHAR(30);
    DECLARE V_EVALUATION_TYPE_CODE             NVARCHAR(30);
    DECLARE V_EVALUATION_ARTICLE_CODE          NVARCHAR(15);
    DECLARE V_REGULAR_EVALUATION_ID            NVARCHAR(100);
    DECLARE V_EVALUATION_ARTICLE_PATH_CODE     NVARCHAR(100);
    DECLARE VT_ITEM TABLE (EVALUATION_ARTICLE_CODE NVARCHAR(15));  
    
    DECLARE CURSOR CUR_ITEM FOR
    SELECT *
    FROM   :I_ITEM_TYPE;
   
    SELECT  IFNULL(:I_USER_ID, 'SYSTEM') INTO I_USER_ID FROM DUMMY;
    
    /* SQL Error 처리 */
    BEGIN
        DECLARE EXIT HANDLER FOR SQLEXCEPTION
        BEGIN
            ROLLBACK;
            :O_MSG.INSERT(('NG','Modify Evaluation Item Processing error. (' || ::SQL_ERROR_CODE || '-' || ::SQL_ERROR_MESSAGE  || ')'),1);
        END;
    END;
    
    FOR REC_ITEM AS CUR_ITEM DO

        V_TENANT_ID                       = REC_ITEM.TENANT_ID;
        V_COMPANY_CODE                    = REC_ITEM.COMPANY_CODE;
        V_ORG_TYPE_CODE                   = REC_ITEM.ORG_TYPE_CODE;
        V_ORG_CODE                        = REC_ITEM.ORG_CODE;
        V_EVALUATION_OPERATION_UNIT_CODE  = REC_ITEM.EVALUATION_OPERATION_UNIT_CODE;
        V_EVALUATION_TYPE_CODE            = REC_ITEM.EVALUATION_TYPE_CODE;
        V_EVALUATION_ARTICLE_CODE         = REC_ITEM.EVALUATION_ARTICLE_CODE;
        V_REGULAR_EVALUATION_ID           = REC_ITEM.REGULAR_EVALUATION_ID;
        /*Tabble 전체삭제*/
        :VT_ITEM.delete(); 
        
        BEGIN
            DECLARE EXIT HANDLER FOR SQLEXCEPTION
            BEGIN
                ROLLBACK;
                O_MSG = SELECT  'NG' RETURN_CODE, 'Modify Evaluation Item Sequnce Processing error. (' || ::SQL_ERROR_CODE || '-' || ::SQL_ERROR_MESSAGE  || ')' RETURN_MSG FROM  DUMMY;
            END;
            
            /*상위포함 확인*/
            SELECT A.EVALUATION_ARTICLE_PATH_CODE
            INTO   V_EVALUATION_ARTICLE_PATH_CODE
            FROM   SP_SE_EVAL_ITEM_EXPORT_TREE_VIEW A
            WHERE  A.TENANT_ID                      = :V_TENANT_ID
            AND    A.COMPANY_CODE                   = :V_COMPANY_CODE
            AND    A.ORG_TYPE_CODE                  = :V_ORG_TYPE_CODE
            AND    A.ORG_CODE                       = :V_ORG_CODE
            AND    A.EVALUATION_OPERATION_UNIT_CODE = :V_EVALUATION_OPERATION_UNIT_CODE
            AND    A.EVALUATION_TYPE_CODE           = :V_EVALUATION_TYPE_CODE
            AND    A.EVALUATION_ARTICLE_CODE        = :V_EVALUATION_ARTICLE_CODE;
            
            VT_ITEM = SELECT EVALUATION_ARTICLE_CODE
                      FROM   SP_SE_EVAL_ITEM_MST A
                      WHERE  TENANT_ID                      = :V_TENANT_ID
                      AND    COMPANY_CODE                   = :V_COMPANY_CODE
                      AND    ORG_TYPE_CODE                  = :V_ORG_TYPE_CODE
                      AND    ORG_CODE                       = :V_ORG_CODE
                      AND    EVALUATION_OPERATION_UNIT_CODE = :V_EVALUATION_OPERATION_UNIT_CODE
                      AND    EVALUATION_TYPE_CODE           = :V_EVALUATION_TYPE_CODE
                      AND    INSTR(V_EVALUATION_ARTICLE_PATH_CODE,EVALUATION_ARTICLE_CODE) > 0;
            
            /*입력*/
            INSERT INTO SP_SE_EVAL_SHEET_EVAL_ITEM
            (
             TENANT_ID                        /*테넌트ID*/	
            ,COMPANY_CODE                     /*회사코드*/	
            ,ORG_TYPE_CODE                    /*조직유형코드*/	
            ,ORG_CODE                         /*조직코드*/	
            ,EVALUATION_OPERATION_UNIT_CODE   /*평가운영단위코드*/	
            ,EVALUATION_TYPE_CODE             /*평가유형코드*/	
            ,REGULAR_EVALUATION_ID            /*정기평가ID*/	
            ,EVALUATION_ARTICLE_CODE          /*평가항목코드*/
            ,EVALUATION_ARTICLE_NAME          /*평가항목명*/
            ,PARENT_EVALUATION_ARTICLE_CODE   /*상위평가항목코드*/	
            ,EVALUATION_DISTRB_SCORE_WEIGHT   /*평가배점가중치*/	
            ,EVALUATION_EXECUTE_MODE_CODE     /*평가실행방식코드*/	
            ,EVALUATION_ARTICLE_TYPE_CODE     /*평가항목구분코드*/	
            ,EVALUATION_DISTRB_SCR_TYPE_CD    /*평가배점유형코드*/	
            ,EVALUATION_RESULT_INPUT_TYPE_CD  /*평가결과입력유형코드*/	
            ,QTTIVE_ITEM_UOM_CODE             /*정량항목측정단위코드*/	
            ,QTTIVE_EVAL_ARTICLE_CALC_FORMULA /*정량평가항목계산공식*/	
            ,EVALUATION_ARTICLE_DESC          /*평가항목설명*/	
            ,EVALUATION_ARTICLE_LVL_ATTR_CD   /*평가항목레벨속성코드*/
            ,SORT_SEQUENCE                    /*정렬항목*/
            ,LOCAL_CREATE_DTM
            ,LOCAL_UPDATE_DTM
            ,CREATE_USER_ID
            ,UPDATE_USER_ID
            ,SYSTEM_CREATE_DTM
            ,SYSTEM_UPDATE_DTM
            )
            SELECT TENANT_ID
                  ,COMPANY_CODE
                  ,ORG_TYPE_CODE
                  ,ORG_CODE
                  ,EVALUATION_OPERATION_UNIT_CODE
                  ,EVALUATION_TYPE_CODE
                  ,:V_REGULAR_EVALUATION_ID
                  ,EVALUATION_ARTICLE_CODE
                  ,EVALUATION_ARTICLE_NAME
                  ,PARENT_EVALUATION_ARTICLE_CODE
                  ,0 AS EVALUATION_DISTRB_SCORE_WEIGHT   /*최초입력시는 가중치가 없음*/
                  ,EVALUATION_EXECUTE_MODE_CODE
                  ,EVALUATION_ARTICLE_TYPE_CODE
                  ,EVALUATION_DISTRB_SCR_TYPE_CD
                  ,EVALUATION_RESULT_INPUT_TYPE_CD
                  ,QTTIVE_ITEM_UOM_CODE
                  ,QTTIVE_EVAL_ARTICLE_CALC_FORMULA
                  ,EVALUATION_ARTICLE_DESC
                  ,EVALUATION_ARTICLE_LVL_ATTR_CD
                  ,SORT_SEQUENCE
                  ,NOW()
                  ,NOW()
                  ,:I_USER_ID
                  ,:I_USER_ID
                  ,NOW()
                  ,NOW()
            FROM   SP_SE_EVAL_ITEM_MST EMI
            WHERE  EMI.TENANT_ID                      = :V_TENANT_ID
            AND    EMI.COMPANY_CODE                   = :V_COMPANY_CODE
            AND    EMI.ORG_TYPE_CODE                  = :V_ORG_TYPE_CODE
            AND    EMI.ORG_CODE                       = :V_ORG_CODE
            AND    EMI.EVALUATION_OPERATION_UNIT_CODE = :V_EVALUATION_OPERATION_UNIT_CODE
            AND    EMI.EVALUATION_TYPE_CODE           = :V_EVALUATION_TYPE_CODE
            AND    EXISTS (SELECT 1
                           FROM   :VT_ITEM VTI
                           WHERE  VTI.EVALUATION_ARTICLE_CODE = EMI.EVALUATION_ARTICLE_CODE
                          )
            AND    NOT EXISTS (SELECT 1
                               FROM   SP_SE_EVAL_SHEET_EVAL_ITEM ESEI
                               WHERE  ESEI.TENANT_ID     = EMI.TENANT_ID
                               AND    ESEI.COMPANY_CODE  = EMI.COMPANY_CODE
                               AND    ESEI.ORG_TYPE_CODE = EMI.ORG_TYPE_CODE
                               AND    ESEI.ORG_CODE      = EMI.ORG_CODE
                               AND    ESEI.EVALUATION_OPERATION_UNIT_CODE = EMI.EVALUATION_OPERATION_UNIT_CODE
                               AND    ESEI.EVALUATION_TYPE_CODE           = EMI.EVALUATION_TYPE_CODE
                               AND    ESEI.EVALUATION_ARTICLE_CODE        = EMI.EVALUATION_ARTICLE_CODE
                               AND    ESEI.REGULAR_EVALUATION_ID          = :V_REGULAR_EVALUATION_ID 
                              );
        END;
        
    END FOR;
    
    COMMIT;
    
    :O_MSG.INSERT(('OK','Successfully Saved.==>'||RECORD_COUNT(:I_ITEM_TYPE)),1);
END