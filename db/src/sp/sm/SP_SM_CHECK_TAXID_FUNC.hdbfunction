function sp_sm_check_taxid_func(
				tenant_id nvarchar(5),
				tax_id nvarchar(30)
)
returns table (
				tenant_id nvarchar(5),
				tax_id nvarchar(30),
				business_partner_code nvarchar(10),
				business_partner_local_name nvarchar(240),
				business_partner_english_name nvarchar(240),
				supplier_role nvarchar(1),
				maker_role nvarchar(1),
				message nvarchar(500)
)
language sqlscript
as
begin
    
    declare lv_tax_id nvarchar(30);

    select
			tax_id
    into    lv_tax_id default null
    from	sp_sm_supplier_mst
    where	tenant_id	= :tenant_id
    and     tax_id		= :tax_id
    ;

    if (lv_tax_id is null) then

        t_result = 
                select
						:tenant_id																	    as tenant_id,
						:tax_id																		    as tax_id,
						''																				as business_partner_code,
						''																				as business_partner_local_name,
						''																				as business_partner_english_name,
						'N'																				as supplier_role,
						'N'																				as maker_role,
						'There is no registered data with the verified business number. Register new!'	as message
				from    dummy
				;

	else

        t_result = 
				select
						tenant_id,
						tax_id,
						business_partner_code,
						business_partner_local_name,
						business_partner_english_name,
						supplier_role,
						maker_role,
						case	when supplier_role = 'N' and maker_role = 'N' then 'There is no registered data with the verified business number. Register new!'
                                when supplier_role = 'Y' and maker_role = 'N' then 'Supplier data is already registered. Apply for maker role using the same data.'
                                when supplier_role = 'N' and maker_role = 'Y' then 'Maker data is already registered. Apply for Supplier role using the same data.'
								when supplier_role = 'Y' and maker_role = 'Y' then 'There is already a registered maker code.'
								else '' end as message
				from
				(
					select
							mst.tenant_id				as tenant_id,
							mst.tax_id					as tax_id,
							mst.supplier_code			as business_partner_code,
							mst.supplier_local_name		as business_partner_local_name,
							mst.supplier_english_name	as business_partner_english_name,
							case when supplier_role.bp_role_code is not null	then 'Y' else 'N' end as supplier_role,
							case when maker_role.bp_role_code is not null		then 'Y' else 'N' end as maker_role
					from	sp_sm_supplier_mst as mst
					left outer join sp_sm_supplier_role as supplier_role
					on		mst.tenant_id				= supplier_role.tenant_id
					and		mst.supplier_code			= supplier_role.supplier_code
					and		supplier_role.bp_role_code	= '100001'
					left outer join sp_sm_supplier_role as maker_role
					on		mst.tenant_id			= maker_role.tenant_id
					and		mst.supplier_code		= maker_role.supplier_code
					and		maker_role.bp_role_code	= '100006'
					where	(trim(mst.tax_id) is not null and ascii(mst.tax_id) <> 0)
					and		mst.tenant_id	= :tenant_id
					and		mst.tax_id 		= :tax_id
					group by
							mst.tenant_id,
							mst.tax_id,
							mst.supplier_code,
							mst.supplier_local_name,
							mst.supplier_english_name,
							case when supplier_role.bp_role_code is not null	then 'Y' else 'N' end,
							case when maker_role.bp_role_code is not null		then 'Y' else 'N' end
				)
				group by
						tenant_id,
						tax_id,
						business_partner_code,
						business_partner_local_name,
						business_partner_english_name,
						supplier_role,
						maker_role
				order by
						tenant_id,
						tax_id,
						business_partner_code,
						business_partner_local_name,
						business_partner_english_name,
						supplier_role,
						maker_role
					;
	end if;
	
	return select * from :t_result;
	
end
;