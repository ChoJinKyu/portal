VIEW  PG_TM_SAC_FOREIGN_PO_CREATION_DELAY_VIEW  AS  
--	외자PO생성지연
/*	마감 PROCESS 확정 전 임시 기준년월 계산 */
WITH  SETTLEMENT_DATE  AS  (
	SELECT
			 BASE_YYYY_MM
			,TO_CHAR(ADD_MONTHS(BASE_YYYY_MM||'-01',  -11),  'YYYY-MM-DD')			AS  ACTUAL_START_DATE
			,LAST_DAY(BASE_YYYY_MM||'-01')											AS	ACTUAL_END_DATE
	FROM	(
				SELECT
						 '2020-01'  AS  BASE_YYYY_MM
				FROM DUMMY
			)
	)
SELECT	 
		 M1.BASE_YYYY_MM									AS	"DATE"					--	기준년월
		,A1.COMPANY_CODE||'_'||(CASE  WHEN  A3.ORG_TYPE_CODE  =  'BU'  THEN  A1.ORG_CODE  ELSE  A3.BIZUNIT_CODE  END)||'_3'	AS  MONITORING_SCENARIO		--	모니터링 시나리오 Logic 구성 예정
		,A1.TENANT_ID										AS	"TENANT"
		,A1.COMPANY_CODE									AS	COMPANY
		,CASE  WHEN  A3.ORG_TYPE_CODE  =  'BU'  THEN  A1.ORG_CODE  ELSE  A3.BIZUNIT_CODE  END  AS	BIZUNIT
		,A1.PURCHASING_GROUP_CODE							AS	PURCHASING_GROUP
		,A1.SUPPLIER_CODE									AS	SUPPLIER
		,A1.MATERIAL_CODE									AS	MATERIAL
		,A1.PLANT_CODE										AS	PLANT
		,A5.SHIPPING_COUNTRY_CODE							AS	ORIGIN
		,A4.IMPORT_DECLARE_TYPE_CODE						AS	IMPORT_DECLARE_TYPE
		,'abc'	AS	DELAY_PROCESS_STEP		--	LOGIC 
		,A1.PO_NUMBER										AS	PO
		,A1.PO_ITEM_NUMBER									AS	PO_ITEM_NUMBER
		,A1.PO_TYPE_CODE									AS	PO_TYPE
		,''		AS	PURCHASING_TYPE			--	LOGIC
		,A1.PO_PRICE_UNIT									AS	PO_PRICE_UNIT
		,A1.PO_UNIT											AS	PO_QUANTITY_UNIT
		,A1.PO_DOC_DATE										AS	PO_CREATE_DATE
		,A1.BUYER_EMPNO										AS	PO_CREATOR
		,A1.BUYER_NAME										AS	PO_CREATOR_NAME
		,A1.PO_CURRENCY_CODE								AS	PO_CURRENCY
		,A4.BL_NUMBER										AS	BL_NUMBER
		,A4.BL_ITEM_NUMBER									AS	BL_ITEM_NUMBER
		,A4.BL_PUBLISH_DATE									AS	BL_CREATE_DATE
		,A4.BL_AMOUNT_CURRENCY_CODE							AS	BL_CURRENCY
		,A4.HOUSE_BL_NUMBER									AS	HOUSE_BL_NUMBER
		,A4.BL_PRICE_UNIT									AS	BL_PRICE_UNIT
		,A4.ETA												AS	ETA
		,A4.ETD												AS	ETD
		,A5.DECLARE_ACCEPT_DATE								AS	IMPORT_DECLARE_DATE
		,A2.DOCUMENT_DOC_DATE								AS	RECEIPT_DATE
		-- ,''		AS	EXPLAIN_TARGET_FLAG
		-- ,''		AS	CONFIRMED_FLAG
		-- ,''		AS	EXPLAIN_TYPE
		,A2.BASE_UNIT_CODE									AS	RECEIPT_QUANTITY_UNIT
		,1													AS	BASE_COUNT
		,0		AS	PO_PROGRESS_DAYS
		,CAST(ROUND(A1.PO_EXRATE,  7)  AS  DECIMAL(20, 7))              AS  PO_EXRATE
		,CAST(ROUND(A1.PO_AMOUNT,  7)  AS  DECIMAL(27, 7))              AS  PO_AMOUNT
		,CAST(ROUND(A1.PURCHASING_QUANTITY,  7)  AS  DECIMAL(27, 7))	AS	PO_QUANTITY
		,CAST(ROUND(A1.PO_NET_PRICE,  7)  AS  DECIMAL(27, 7))			AS	PO_PRICE
		,CAST(ROUND(A4.BL_AMOUNT,  7)  AS  DECIMAL(27, 7))				AS	BL_AMOUNT
		,CAST(ROUND(A4.BL_QUANTITY,  7)  AS  DECIMAL(27, 7))			AS	BL_QUANTITY
		,CAST(ROUND(A2.RECEIPT_QUANTITY,  7)  AS  DECIMAL(27, 7))		AS	RECEIPT_QUANTITY
FROM	PG_IT_TXN_PO_DOC  A1									
		LEFT JOIN  (
						SELECT	 TENANT_ID
								,COMPANY_CODE
								,ORG_TYPE_CODE
								,ORG_CODE
								,PO_NUMBER
								,PO_ITEM_NUMBER
								,BASE_UNIT_CODE
								,MAX(DOCUMENT_DOC_DATE)		AS	DOCUMENT_DOC_DATE
								,SUM(RECEIPT_QUANTITY)  	AS  RECEIPT_QUANTITY
						FROM	PG_IT_TXN_MATERIAL_DOC
						GROUP BY TENANT_ID
								,COMPANY_CODE
								,ORG_TYPE_CODE
								,ORG_CODE
								,PO_NUMBER
								,PO_ITEM_NUMBER
								,BASE_UNIT_CODE
					)  A2
			ON  A1.TENANT_ID       =  A2.TENANT_ID
			AND A1.COMPANY_CODE    =  A2.COMPANY_CODE
			AND A1.ORG_TYPE_CODE   =  A2.ORG_TYPE_CODE
			AND A1.ORG_CODE        =  A2.ORG_CODE
			AND A1.PO_NUMBER       =  A2.PO_NUMBER
			AND A1.PO_ITEM_NUMBER  =  A2.PO_ITEM_NUMBER
		INNER JOIN CM_PUR_OPERATION_ORG  A3
			ON  A1.TENANT_ID      =  A3.TENANT_ID
			AND A1.COMPANY_CODE   =  A3.COMPANY_CODE
			AND A1.ORG_TYPE_CODE  =  A3.ORG_TYPE_CODE
			AND A1.ORG_CODE       =  A3.ORG_CODE
		INNER JOIN (
						SELECT
								 TENANT_ID
								,COMPANY_CODE
								,ORG_TYPE_CODE
								,ORG_CODE
								,BL_NUMBER
								,BL_ITEM_NUMBER
								,PO_NUMBER
								,PO_ITEM_NUMBER
								,BL_PUBLISH_DATE
								,BL_AMOUNT_CURRENCY_CODE
								,HOUSE_BL_NUMBER
								,BL_PRICE_UNIT
								,W_EXCH_FLAG
								,ETA
								,ETD
								,IMPORT_DECLARE_TYPE_CODE
								,BL_AMOUNT
								,BL_QUANTITY
						FROM	PG_IT_TXN_BL_DOC
								CROSS JOIN SETTLEMENT_DATE  M1
						WHERE	PO_NUMBER IS NOT NULL
						AND		ATA  BETWEEN  M1.BASE_YYYY_MM||'-01'  AND  M1.ACTUAL_END_DATE  --M1.BASE_YYYY_MM||'-01'  AND  M1.ACTUAL_END_DATE
						AND		W_EXCH_FLAG  <>  'N'		--	B/L의 유환여부가 무환이 아닌 것 ( ZTBL-ZFPOYN NE ‘N’ )
					)  A4
			ON	A1.TENANT_ID       =  A4.TENANT_ID
			AND A1.COMPANY_CODE    =  A4.COMPANY_CODE
			AND A1.ORG_TYPE_CODE   =  A4.ORG_TYPE_CODE
			AND A1.ORG_CODE        =  A4.ORG_CODE
			AND A1.PO_NUMBER       =  A4.PO_NUMBER
			AND A1.PO_ITEM_NUMBER  =  A4.PO_ITEM_NUMBER
		INNER JOIN (
						SELECT	 DISTINCT
								 TENANT_ID
								,COMPANY_CODE
								,ORG_TYPE_CODE
								,ORG_CODE
								,BL_NUMBER
								,BL_ITEM_NUMBER
								,PO_NUMBER
								,PO_ITEM_NUMBER
								,SHIPPING_COUNTRY_CODE
								,DECLARE_ACCEPT_DATE
						FROM	PG_IT_TXN_IMP_CLEARANCE
					)  A5
			ON	A1.TENANT_ID       =  A5.TENANT_ID
			AND A1.COMPANY_CODE    =  A5.COMPANY_CODE
			AND A1.ORG_TYPE_CODE   =  A5.ORG_TYPE_CODE
			AND A1.ORG_CODE        =  A5.ORG_CODE
			AND A1.PO_NUMBER       =  A5.PO_NUMBER
			AND A1.PO_ITEM_NUMBER  =  A5.PO_ITEM_NUMBER
			AND A4.BL_NUMBER       =  A5.BL_NUMBER
			AND A4.BL_ITEM_NUMBER  =  A5.BL_ITEM_NUMBER
		CROSS JOIN SETTLEMENT_DATE  M1
WHERE	A1.PO_DOC_DATE  BETWEEN  M1.BASE_YYYY_MM||'-01'  AND  M1.ACTUAL_END_DATE		/* 기준년월 기준 구매오더 생성일 1개월 분 또는 실입항일 1개월 분
     기준년월이 2020년 9월 인 경우
       PO생성일 : EKKO-BEDAT  2020.09.01 ~ 2020.09.30 / 실입항일 : ZTBL-ZFRETA 2020.09.01 ~ 2020.09.30  */
AND		A1.PO_TYPE_CODE  NOT IN  ('ZT', 'UB')		--	구매오더유형 법인간 거래유형 제외 ( EKKO-BSART NE ‘ZT’, EKKO-BSART NE ‘UB’ )
AND		A4.BL_QUANTITY > 0							--	B/L 수량이 0보다 큰 것 ( ZTBLIT-BLMENGE > 0 )

-- AND		사업부별 모수 기준필드는 사업부 기준마스터 Table ( ZMMPRDNMST10 참조 )
-- AND		
-- AND		공급업체 계정그룹 법인간거래 는 제외 ( EKKO-LIFNR / LFA1-KTOKK <> ‘AFFI’ )
-- AND		구매오더 생성일이 구매오더 진행기준필드 보다 이전일자 인 경우
		 -- 1< = 구매오더 진행기준필드 일자 – 구매오더생성일 <= 구매오더진행 기준일수 이면 대상 ( 단 ZTBL-ZFCARC ‘KR’, ‘JP’, ‘CN’ 은 제외 )
-- 구매오더 생성일이 구매오더 진행기준필드 보다 이후일자인 경우
		 -- 무조건 대상
-- AND		적용대상 평가클래스가 아닌 것은 제외 ( ZMMPRDNMST20 참조 )
;