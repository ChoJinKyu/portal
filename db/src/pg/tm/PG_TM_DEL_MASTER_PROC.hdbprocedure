procedure pg_tm_del_master_proc (
    in  i_table_parameters   table(
                                    tenant_id         nvarchar(5),
                                    scenario_number   bigint
                            ),
    out o_table_message     pg_tm_proc_out_type
)
language sqlscript
sql security invoker

as
begin

    declare lv_tenant_id        nvarchar(5);
    declare lv_scenario_number  bigint;
    declare lv_recodecount      integer default 0;
    declare initial             integer;
-- rollback message
	declare exit handler for sqlexception
		begin
			rollback;
			o_table_message = select 'NG' as returncode, ::sql_error_code||'-'||::sql_error_message as returnmessage from dummy;
        end;

    select  count(*) 
    into    lv_recodecount
    from    :i_table_parameters
    ;

    o_table_parameters =
        select  row_number() over() as num_row,
                tenant_id,
                scenario_number
        from    :i_table_parameters
        ;
    
    for initial in 1..lv_recodecount do

        select  tenant_id
        into    lv_tenant_id
        from    :o_table_parameters
        where   num_row = initial
        ;

        select  scenario_number
        into    lv_scenario_number
        from    :o_table_parameters
        where   num_row = initial
        ;
    
-- delete table: master        
		delete from pg_tm_master
		where tenant_id = lv_tenant_id
		and scenario_number = lv_scenario_number
		;
-- delete table: scenario        
		delete from pg_tm_scenario_number_lng
		where tenant_id = lv_tenant_id
		and scenario_number = lv_scenario_number
		;
-- delete table: company        
		delete from pg_tm_comp_code
		where tenant_id = lv_tenant_id
		and scenario_number = lv_scenario_number
		;
-- delete table: bizunit
		delete from pg_tm_bizunit_code
		where tenant_id = lv_tenant_id
		and scenario_number = lv_scenario_number
		;
-- delete table: manager
		delete from pg_tm_manager_dtl
		where tenant_id = lv_tenant_id
		and scenario_number = lv_scenario_number
		;
-- delete table: operation
		delete from pg_tm_operation_mode_code_lng
		where tenant_id = lv_tenant_id
		and scenario_number = lv_scenario_number
		;
-- delete table: cycle
		delete from pg_tm_cycle_code_lng
		where tenant_id = lv_tenant_id
		and scenario_number = lv_scenario_number
		;
-- delete table: purchasing type
		delete from pg_tm_purchasing_type_code_lng
		where tenant_id = lv_tenant_id
		and scenario_number = lv_scenario_number
		;
-- delete table: type
		delete from pg_tm_type_code_lng
		where tenant_id = lv_tenant_id
		and scenario_number = lv_scenario_number
		;
	end for
	;

-- commit message	
	commit;
	o_table_message =  select 'OK' as returncode, 'Success Saved!' as returnmessage from dummy;

end
;