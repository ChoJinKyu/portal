VIEW  PG_MI_SAC_LATEST_MI_PRICE_VIEW  AS
    -- 시황자재별 최근 시황금액 - 현재시점(최근시황일 기준)
    SELECT
    		 'Actual'							AS	"VERSION"
            ,A.TENANT_ID						AS	"TENANT"
            ,'#'								AS	BIZUNIT
            ,'#'								AS	VENDOR_POOL
            ,'#'								AS	MATERIAL
            ,'#'								AS	SUPPLIER
            ,TO_CHAR(CURRENT_DATE,  'YYYYMM')	AS  "DATE"
            ,'20200101'							AS	LATEST_MI_DATE
            ,'20200101'							AS	LATEST_NET_PRICE_CFM_DATE
            ,A.CURRENCY_UNIT					AS  SOURCE_CURRENCY
            ,'#'								AS	TARGET_CURRENCY
            ,A.QUANTITY_UNIT					AS	UOM
            ,A.MI_MATERIAL_CODE					AS	MI_MATERIAL
            ,A.TERMSDELV						AS  MI_INCOTERMS
            ,A.EXCHANGE							AS	EXCHANGE
            ,'LATEST'							AS  NET_PRICE_CONFIRMED_TYPE
            ,'#'								AS	PLANT
            ,'PG0102_00030' 					AS  MI_MEASURE
            ,A.PRICE							AS	"VALUE"
    FROM	 PG_MI_MATERIAL_PRICE_MANAGEMENT  A
    		INNER  JOIN  (
    			SELECT
    					 B.TENANT_ID
    					,B.MI_MATERIAL_CODE
    					,MAX(B.MI_DATE)  AS  MI_DATE
    			FROM	 PG_MI_MATERIAL_PRICE_MANAGEMENT  B
    			GROUP BY B.TENANT_ID
    					,B.MI_MATERIAL_CODE
    					)  C
    			ON  A.TENANT_ID  =  C.TENANT_ID
    			AND A.MI_MATERIAL_CODE  =  C.MI_MATERIAL_CODE
    			AND A.MI_DATE  =  C.MI_DATE

    UNION  ALL

    -- 시황자재별 최근 시황금액 - 단가결정시점  2021.01.14 By.한성완책임님
    -- NET_PRICE_DUCUMENT_TYPE(단가문서유형코드) : I (InfoRecord)
    -- NET_PRICE_SOURCE_CODE(단가출처코드) : 조건 없음
    -- MARKET_CODE(납선코드) : 화학은 구분이 없지만 전자의 경우 수출과 내수의 가격에 차이가 있을 수 있음.. 일단 화학은 조건없이 
    SELECT
    		 'Actual'							AS	"VERSION"
            ,A.TENANT_ID						AS	"TENANT"
            ,'#'								AS	BIZUNIT
            ,'#'								AS	VENDOR_POOL
            ,B.MATERIAL_CODE					AS	MATERIAL
            ,'#'								AS	SUPPLIER
            ,TO_CHAR(CURRENT_DATE,  'YYYYMM')	AS  "DATE"
            ,'202001'							AS	LATEST_MI_DATE
            ,'202001'							AS	LATEST_NET_PRICE_CFM_DATE
            ,A.CURRENCY_UNIT					AS  SOURCE_CURRENCY
            ,'#'								AS	TARGET_CURRENCY
            ,A.QUANTITY_UNIT					AS	UOM
            ,A.MI_MATERIAL_CODE					AS	MI_MATERIAL
            ,A.TERMSDELV						AS  MI_INCOTERMS
            ,A.EXCHANGE							AS	EXCHANGE
            ,'SPECIFIC'							AS  NET_PRICE_CONFIRMED_TYPE
            ,'#'								AS	PLANT
            ,'PG0102_00030' 					AS  MI_MEASURE
            ,A.PRICE							AS	"VALUE"
    FROM	 PG_MI_MATERIAL_PRICE_MANAGEMENT  A
    		INNER  JOIN  (
    			SELECT
    					 C.TENANT_ID
    					,C.MATERIAL_CODE
    					,C.MI_MATERIAL_CODE
    					,D.EFFECTIVE_START_DATE
    					,MAX(E.MI_DATE)  AS  MI_DATE
    			FROM	(
    						SELECT	 DISTINCT
    								 C1.TENANT_ID
    								,C1.MATERIAL_CODE
    								,C2.MI_MATERIAL_CODE
    						FROM	PG_MI_MATERIAL_CODE_BOM_MNGT_HEADER  C1
    								INNER  JOIN  PG_MI_MATERIAL_CODE_BOM_MNGT_ITEM  C2
    									ON  C1.TENANT_ID  =  C2.TENANT_ID
    									AND C1.MI_BOM_ID  =  C2.MI_BOM_ID
    						)  C
    					LEFT  OUTER  JOIN  (
    						SELECT
    								 D.TENANT_ID
    								,D.MATERIAL_CODE
    								,TO_CHAR(MAX(D.EFFECTIVE_START_DATE),  'YYYY-MM-DD')  AS  EFFECTIVE_START_DATE
    						FROM	 SP_NP_NET_PRICE_MST  D
    						WHERE    D.NET_PRICE_DOCUMENT_TYPE_CODE  =  'I'  /*단가문서유형코드는 InfoRecord만을 대상으로 선택*/
    						GROUP BY D.TENANT_ID
    								,D.MATERIAL_CODE
    						)  D
    						ON  C.TENANT_ID  =  D.TENANT_ID
    						AND C.MATERIAL_CODE  =  D.MATERIAL_CODE
    					LEFT  OUTER  JOIN  (
    						SELECT	 DISTINCT
    								 E.TENANT_ID
    								,E.MI_MATERIAL_CODE
    								,E.MI_DATE
    						FROM	PG_MI_MATERIAL_PRICE_MANAGEMENT  E
    						)  E
    						ON  C.TENANT_ID  =  E.TENANT_ID
    						AND C.MI_MATERIAL_CODE  =  E.MI_MATERIAL_CODE
    			WHERE	E.MI_DATE <= D.EFFECTIVE_START_DATE	
    			GROUP BY  C.TENANT_ID
    					,C.MATERIAL_CODE
    					,C.MI_MATERIAL_CODE
    					,D.EFFECTIVE_START_DATE
    		)  B
    			ON  A.TENANT_ID  =  B.TENANT_ID
    			AND A.MI_MATERIAL_CODE  =  B.MI_MATERIAL_CODE
    			AND A.MI_DATE  =  B.MI_DATE
    ;