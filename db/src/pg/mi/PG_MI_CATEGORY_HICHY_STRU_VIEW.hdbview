view pg_MI_Cateogry_Hichy_Stru_View as
select
		hier.tenant_id				as tenant_id,
		hier.node_id				as node_id,
		hier.hierarchy_level		as hierarchy_level,
		hier.category_code			as category_code,
		hier.category_name			as category_name,
		hier.parent_node_id			as parent_node_id,
		hier.parent_category_code	as parent_category_code,
		hier.sort_sequence			as sort_sequence,
		hier.drillstate				as drillstate,
		str.use_flag 				as use_flag,
		hier.local_create_dtm		as local_create_dtm,
		hier.local_update_dtm		as local_update_dtm,
		hier.create_user_id			as create_user_id,
		hier.update_user_id			as update_user_id,
		hier.system_create_dtm		as system_create_dtm,
		hier.system_update_dtm		as system_update_dtm,
		hier.start_rank				as start_rank,
		hier.path_code				as path_code,
		hier.path_text				as path_text
from
(
	select
			max(tenant_id)															as tenant_id,
			node_id,
			max(hier_level)															as hierarchy_level,
			max(category_code)														as category_code,
			max(category_name)														as category_name,
			max(parent_id)															as parent_node_id,
			max(parent_category_code)												as parent_category_code,
			max(sort_sequence)														as sort_sequence,
			max(drillstate)															as drillstate,
			max(local_create_dtm)													as local_create_dtm,
			max(local_update_dtm)													as local_update_dtm,
			max(create_user_id)														as create_user_id,
			max(update_user_id)														as update_user_id,
			max(system_create_dtm)													as system_create_dtm,
			max(system_update_dtm)													as system_update_dtm,
			max(start_rank)															as start_rank,
			max(case when parent_id is null then path_code else category_code end)	as path_code,
			max(case when parent_id is null then path_text else category_name end)	as path_text
	from
	(
			select
					tenant_id,
					node_id,
					hier_level,
					category_code,
					category_name,
					parent_id,
					parent_category_code,
					sort_sequence,
					drillstate,
					local_create_dtm,
					local_update_dtm,
					create_user_id,
					update_user_id,
					system_create_dtm,
					system_update_dtm,
					start_rank,
					path_code,
					path_text
			from	hierarchy_ancestors_aggregate
			(
					source hierarchy
					(
							source
							(
									select
											master.tenant_id			as tenant_id,
											master.node_id				as node_id,
											master.hierarchy_level		as hier_level,
											master.category_code		as category_code,
											text.category_name			as category_name,
											master.parent_node_id		as parent_id,
											master.parent_category_code	as parent_category_code,
											master.sort_sequence		as sort_sequence,
											master.drillstate			as drillstate,
											master.local_create_dtm		as local_create_dtm,
											master.local_update_dtm		as local_update_dtm,
											master.create_user_id		as create_user_id,
											master.update_user_id		as update_user_id,
											master.system_create_dtm	as system_create_dtm,
											master.system_update_dtm	as system_update_dtm
									from pg_mi_category_hichy_stru as master
									left join pg_mi_category_lng as text
										on	master.tenant_id		= text.tenant_id
										and	master.category_code	= text.category_code
										and text.language_code		= upper(substring(session_context('LOCALE'),1,2))
							)
							start where master.parent_node_id is null
							sibling order by parent_id
					)
					measures
					(
						string_agg(category_code, '/') as path_code,
						string_agg(category_name, '/') as path_text
					)
			)
			union all
			select
					null 																as tenant_id,
					sub_start_rank 														as node_id,
					null 																as hier_level,
					null 																as category_code,
					null 																as category_name,
					null 																as parent_id,
					null 																as parent_category_code,
					null 																as sort_sequence,
					null 																as drillstate,
					null 																as local_create_dtm,
					null 																as local_update_dtm,
					null 																as create_user_id,
					null 																as update_user_id,
					null 																as system_create_dtm,
					null 																as system_update_dtm,
					null																as start_rank,
					substr_before(path_code, '/')||'/'||string_agg(category_code, '/')	as path_code,
					substr_before(path_text, '/')||'/'||string_agg(category_name, '/')	as path_text
			from
			(
					select
							tenant_id,
							node_id,
							hier_level,
							category_code,
							category_name,
							parent_id,
							parent_category_code,
							sort_sequence,
							drillstate,
							local_create_dtm,
							local_update_dtm,
							create_user_id,
							update_user_id,
							system_create_dtm,
							system_update_dtm,
							start_rank,
							case when parent_id is null then node_id else parent_id end as sub_start_rank,
							path_code,
							path_text
					from	hierarchy_ancestors_aggregate
					(
							source hierarchy
							(
									source
									(
											select
													master.tenant_id			as tenant_id,
													master.node_id				as node_id,
													master.hierarchy_level		as hier_level,
													master.category_code		as category_code,
													text.category_name			as category_name,
													master.parent_node_id		as parent_id,
													master.parent_category_code	as parent_category_code,
													master.sort_sequence		as sort_sequence,
													master.drillstate			as drillstate,
													master.local_create_dtm		as local_create_dtm,
													master.local_update_dtm		as local_update_dtm,
													master.create_user_id		as create_user_id,
													master.update_user_id		as update_user_id,
													master.system_create_dtm	as system_create_dtm,
													master.system_update_dtm	as system_update_dtm
											from pg_mi_category_hichy_stru as master
											left join pg_mi_category_lng as text
												on	master.tenant_id		= text.tenant_id
												and	master.category_code	= text.category_code
												and text.language_code		= upper(substring(session_context('LOCALE'),1,2))
									)
									start where master.parent_node_id is null
									sibling order by parent_id
							)
							measures
							(
								string_agg(category_code, '/') as path_code,
								string_agg(category_name, '/') as path_text
							)
					)
			)
		where	1 = 1
		and		parent_id is not null
		group by
				sub_start_rank,
				substr_before(path_code, '/'),
				substr_before(path_text, '/')
	)
	group by
		node_id
) as hier
left join pg_mi_category_hichy_stru as str
	on	hier.tenant_id 		= str.tenant_id
	and	hier.category_code	= str.category_code
order by
	hier.node_id
;