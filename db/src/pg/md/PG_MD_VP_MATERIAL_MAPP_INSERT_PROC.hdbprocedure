/* Vendor Pool별 Material/Supplier 매핑 Data 일괄 등록처리 */
PROCEDURE PG_MD_VP_MATERIAL_MAPP_INSERT_PROC (
                              IN TENANT_ID NVARCHAR(5) 
							, IN COMPANY_CODE NVARCHAR(10)
							, IN ORG_TYPE_CODE NVARCHAR(30)
                            , IN ORG_CODE NVARCHAR(10)

                            , OUT O_TABLE TABLE (
								  RETURN_CODE NVARCHAR(5)
								, RETURN_MSG NVARCHAR(4000)
							)
)
LANGUAGE SQLSCRIPT
SQL SECURITY INVOKER 
AS
BEGIN
	DECLARE i INT;

	DECLARE v_tenant_id NVARCHAR(5);
	DECLARE v_company_code NVARCHAR(10);
	DECLARE v_org_type_code NVARCHAR(30);
	DECLARE v_org_code NVARCHAR(10);
	DECLARE v_vendor_pool_code NVARCHAR(20);
	DECLARE v_material_code NVARCHAR(40);
	DECLARE v_supplier_code NVARCHAR(10);
    DECLARE v_update_user_id NVARCHAR(255);
    
    DECLARE v_supp_all_del_tbl TABLE (
	                              TENANT_ID NVARCHAR(5) 
								, COMPANY_CODE NVARCHAR(10)
								, ORG_TYPE_CODE NVARCHAR(30)
	                            , ORG_CODE NVARCHAR(10)
	                            , VENDOR_POOL_CODE NVARCHAR(20)
	                            , MATERIAL_CODE NVARCHAR(40)
	                            , SUPPLIER_CODE NVARCHAR(10)
							);
			
	/* 사용자 정의  Error코드 */
	DECLARE v_usr_errcd CONDITION FOR SQL_ERROR_CODE 10000;

	/* VP Metrail/Supplier Mapping대상 조회 */
	DECLARE CURSOR curList FOR
		SELECT 
			MVIM.TENANT_ID
			, MVIM.COMPANY_CODE
			, MVIM.ORG_TYPE_CODE
			, MVIM.ORG_CODE
			, MVIM.VENDOR_POOL_CODE
			, MSMST.MATERIAL_CODE
			, MSMST.SUPPLIER_CODE
		FROM PG_MD_VP_ITEM_MAPPING MVIM
		JOIN (	SELECT 
					DISTINCT VVPID.TENANT_ID
					--VVPID.TENANT_ID
					, VVPID.VENDOR_POOL_CODE
					, VVPID.MATERIAL_CODE
					, IFNULL(NNPM.SUPPLIER_CODE, '*') AS SUPPLIER_CODE
				FROM PG_VP_VENDOR_POOL_ITEM_DTL VVPID
				LEFT OUTER JOIN SP_NP_NET_PRICE_MST NNPM ON (
												NNPM.TENANT_ID = VVPID.TENANT_ID
												AND NNPM.MATERIAL_CODE = VVPID.MATERIAL_CODE
											)
				WHERE IFNULL(VVPID.VENDOR_POOL_MAPPING_USE_FLAG, TRUE) = TRUE
			) MSMST ON (
				MSMST.VENDOR_POOL_CODE = MVIM.VENDOR_POOL_CODE
			)
		WHERE MVIM.CONFIRMED_STATUS_CODE = '300'  /* VP별 Item특성 매핑 확정된 상태  */
		;

	/* SQL Error 처리 */
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		ROLLBACK;

		--SELECT ::SQL_ERROR_CODE||'-'||::SQL_ERROR_MESSAGE INTO O_RTN_MESG FROM DUMMY;
		:O_TABLE.insert((::SQL_ERROR_CODE, 'SQLEXCEPTION-[1]: '||::SQL_ERROR_MESSAGE));
	END;

	:O_TABLE.insert(('LOG', 'STEP-1 [Procedure Start]'));
	
	:O_TABLE.insert(('LOG', 'STEP-2 [Pass]'));
	
        /* 커서 시작 */
	FOR curRow AS curList DO   

        -- TODO : 테스트로 1건만 셋팅 조건 최종 삭제대상 => IF (curList::rowcount = 3) THEN
        IF (curList::rowcount = 3) THEN
			:O_TABLE.insert(('LOG', 'STEP-3 ['||curList::rowcount||'] ['||curRow.VENDOR_POOL_CODE||'] ['||curRow.MATERIAL_CODE||'] ['||curRow.SUPPLIER_CODE||']'));
							
			/* Mapping대상 Supplier코드:'*'로 기등록된 Value값 조회 */
			v_supp_all_value_tbl =	SELECT 
										*
									FROM PG_MD_MATERIAL_ITEM_VALUE MMIV
									WHERE MMIV.TENANT_ID = 'L2100'
									AND MMIV.COMPANY_CODE = '*'
									AND MMIV.ORG_TYPE_CODE = 'BU'
									AND MMIV.ORG_CODE = 'BIZ00200'
									AND MMIV.VENDOR_POOL_CODE = 'VP201701160001'
									AND MMIV.MATERIAL_CODE = 'PAOEMA0008'
									AND MMIV.SUPPLIER_CODE = 'KR00070400'    /* Supplier전체로 등록된 값이 있는경우 */
									--AND MMIV.USE_FLAG = TRUE        /* 사용가능한 값이 있는 경우 */
									--AND MMIV.MAPPING_FLAG = TRUE    /* 저장된 값이 있는 경우 */
									
        -- TODO : 테스트로 1건만 강제 조회 조건 최종 삭제대상 => 위 Where절 포함 삭제
                                    /*
                                        TOP 1 *
									FROM PG_MD_MATERIAL_ITEM_VALUE MMIV
									WHERE MMIV.TENANT_ID = curRow.TENANT_ID
									AND MMIV.COMPANY_CODE = curRow.COMPANY_CODE
									AND MMIV.ORG_TYPE_CODE = curRow.ORG_TYPE_CODE
									AND MMIV.ORG_CODE = curRow.ORG_CODE
									AND MMIV.VENDOR_POOL_CODE = curRow.VENDOR_POOL_CODE
									AND MMIV.MATERIAL_CODE = curRow.MATERIAL_CODE
									AND MMIV.SUPPLIER_CODE = '*'    -- Supplier전체로 등록된 값이 있는경우 
									AND MMIV.USE_FLAG = TRUE        -- 사용가능한 값이 있는 경우 
									AND MMIV.MAPPING_FLAG = TRUE    -- 저장된 값이 있는 경우 
									*/
			;

			:O_TABLE.insert(('LOG', 'STEP-4 ['||RECORD_COUNT( :v_supp_all_value_tbl )||']'));

			/* VP Mapping대상 Supplier코드:'*'로 기등록된 Value값이 있는 경우 복제해서 등록 */
			IF (NOT IS_EMPTY(:v_supp_all_value_tbl)) THEN

				:O_TABLE.insert(('LOG', 'STEP-5 변경전 ['||:v_supp_all_value_tbl.SUPPLIER_CODE[1]||'] ['||:v_supp_all_value_tbl.UPDATE_USER_ID[1]||']'));

				
        -- TODO : 테스트로 1건만 값 변경 셋팅 최종 삭제대상 => 아래 값변경 삭제
				v_supp_all_value_tbl.TENANT_ID[1] = '#1';
				v_supp_all_value_tbl.COMPANY_CODE[1] = '#2';
				v_supp_all_value_tbl.ORG_TYPE_CODE[1] = '#3';
				v_supp_all_value_tbl.ORG_CODE[1] = '#4';
				v_supp_all_value_tbl.VENDOR_POOL_CODE[1] = '#5';
                v_supp_all_value_tbl.MATERIAL_CODE[1] = '#6';
                v_supp_all_value_tbl.SUPPLIER_CODE[1] = '33333333';

		-- TODO: 신규 SUPPLIER_CODE로 대체 => 아래 SUPPLIER_CODE 값 변경 주석 테스트 후 해제
				--v_supp_all_value_tbl.SUPPLIER_CODE[1] = curRow.SUPPLIER_CODE;
				v_supp_all_value_tbl.LOCAL_CREATE_DTM[1] = CURRENT_TIMESTAMP;
				v_supp_all_value_tbl.LOCAL_UPDATE_DTM[1] = CURRENT_TIMESTAMP;
				v_supp_all_value_tbl.CREATE_USER_ID[1] = 'BATCH';
				v_supp_all_value_tbl.UPDATE_USER_ID[1] = 'BATCH';
				v_supp_all_value_tbl.SYSTEM_CREATE_DTM[1] = CURRENT_TIMESTAMP;
				v_supp_all_value_tbl.SYSTEM_UPDATE_DTM[1] = CURRENT_TIMESTAMP;

				:O_TABLE.insert(('LOG', 'STEP-6 변경후 ['||:v_supp_all_value_tbl.SUPPLIER_CODE[1]||'] ['||:v_supp_all_value_tbl.UPDATE_USER_ID[1]||']'));
				v_supplier_code = :v_supp_all_value_tbl.SUPPLIER_CODE[1];

				/* Supplier코드로 기등록된 Value값 체크 */
				v_supp_chk_tbl =	SELECT 
										TENANT_ID
										, COMPANY_CODE
										, ORG_TYPE_CODE
										, ORG_CODE
										, VENDOR_POOL_CODE
										, MATERIAL_CODE
										, SUPPLIER_CODE
									FROM PG_MD_MATERIAL_ITEM_VALUE MMIV
									WHERE MMIV.TENANT_ID = curRow.TENANT_ID
									AND MMIV.COMPANY_CODE = curRow.COMPANY_CODE
									AND MMIV.ORG_TYPE_CODE = curRow.ORG_TYPE_CODE
									AND MMIV.ORG_CODE = curRow.ORG_CODE
									AND MMIV.VENDOR_POOL_CODE = curRow.VENDOR_POOL_CODE
									AND MMIV.MATERIAL_CODE = curRow.MATERIAL_CODE
									AND MMIV.SUPPLIER_CODE = v_supplier_code
									--AND MMIV.USE_FLAG = TRUE         -- 사용가능한 값이 있는 경우
									--AND MMIV.MAPPING_FLAG = FALSE    -- Keyin 저장되지 않은 경우
				;

				:O_TABLE.insert(('LOG', 'STEP-7 ['||RECORD_COUNT( :v_supp_chk_tbl )||']'));

				-- Value 테이블에 Data Record가 없다면 Data복제 등록 처리
				IF ( IS_EMPTY(:v_supp_chk_tbl) ) THEN

					:O_TABLE.insert(('LOG', 'STEP-8 ['||:v_supp_all_value_tbl.TENANT_ID[1]||'] ['||:v_supp_all_value_tbl.COMPANY_CODE[1]||'] ['||:v_supp_all_value_tbl.ORG_TYPE_CODE[1]||'] ['||:v_supp_all_value_tbl.ORG_CODE[1]||'] ['||:v_supp_all_value_tbl.VENDOR_POOL_CODE[1]||'] ['||:v_supp_all_value_tbl.MATERIAL_CODE[1]||'] ['||:v_supp_all_value_tbl.SUPPLIER_CODE[1]||']'));

					SELECT * FROM :v_supp_all_value_tbl
					INTO PG_MD_MATERIAL_ITEM_VALUE;

                END IF;
                
                -- Supplier코드:'*'로 기등록된 USE_FLAG=FALSE 처리용 등록
                :v_supp_all_del_tbl.insert((curRow.TENANT_ID, curRow.COMPANY_CODE, curRow.ORG_TYPE_CODE, curRow.ORG_CODE, curRow.VENDOR_POOL_CODE, curRow.MATERIAL_CODE, '*'));

			    :O_TABLE.insert(('LOG', 'STEP-9 [Pass]'));

			ELSE
	
				:O_TABLE.insert(('LOG', 'STEP-10 [Pass]'));
			
				/* [STEP-1] Material/Supplier 매핑체크 및 신규등록 Update 안함. */ 
				MERGE INTO PG_MD_MATERIAL_ITEM_VALUE AS VIM
					USING DUMMY
					ON ( 
						VIM.TENANT_ID = curRow.TENANT_ID
						AND VIM.COMPANY_CODE = curRow.COMPANY_CODE
						AND VIM.ORG_TYPE_CODE = curRow.ORG_TYPE_CODE
						AND VIM.ORG_CODE = curRow.ORG_CODE
						AND VIM.VENDOR_POOL_CODE = curRow.VENDOR_POOL_CODE
						AND VIM.MATERIAL_CODE = curRow.MATERIAL_CODE
						AND VIM.SUPPLIER_CODE = curRow.SUPPLIER_CODE
					)
				WHEN MATCHED THEN						
					UPDATE SET 
						LOCAL_UPDATE_DTM = CURRENT_TIMESTAMP
						, UPDATE_USER_ID = 'BATCH'
						, SYSTEM_UPDATE_DTM = CURRENT_TIMESTAMP
				WHEN NOT MATCHED THEN
					INSERT (
						TENANT_ID, COMPANY_CODE, ORG_TYPE_CODE, ORG_CODE, VENDOR_POOL_CODE, MATERIAL_CODE, SUPPLIER_CODE, USE_FLAG, MAPPING_FLAG
						, LOCAL_CREATE_DTM, LOCAL_UPDATE_DTM, CREATE_USER_ID, UPDATE_USER_ID, SYSTEM_CREATE_DTM, SYSTEM_UPDATE_DTM
					)
					VALUES (
						curRow.TENANT_ID, curRow.COMPANY_CODE, curRow.ORG_TYPE_CODE, curRow.ORG_CODE, curRow.VENDOR_POOL_CODE, curRow.MATERIAL_CODE, curRow.SUPPLIER_CODE, TRUE, FALSE
						, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'BATCH', 'BATCH', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP
					)
				;

			END IF;	
			
		END IF;
        
        
    END FOR;
    
    :O_TABLE.insert(('LOG', 'STEP-11 [Pass]'));

	:O_TABLE.insert(('LOG', 'STEP-12 ['||RECORD_COUNT( :v_supp_all_del_tbl )||']'));

	IF ( NOT IS_EMPTY(:v_supp_all_del_tbl) ) THEN

		:O_TABLE.insert(('LOG', 'STEP-13 ['||:v_supp_all_del_tbl.TENANT_ID[1]||'] ['||:v_supp_all_del_tbl.COMPANY_CODE[1]||'] ['||:v_supp_all_del_tbl.ORG_TYPE_CODE[1]||'] ['||:v_supp_all_del_tbl.ORG_CODE[1]||'] ['||:v_supp_all_del_tbl.VENDOR_POOL_CODE[1]||'] ['||:v_supp_all_del_tbl.MATERIAL_CODE[1]||'] ['||:v_supp_all_del_tbl.SUPPLIER_CODE[1]||']'));
	
	    -- Supplier코드 (*)로 기등록된 Record건 미사용처리
	    UPDATE PG_MD_MATERIAL_ITEM_VALUE SET 
	        USE_FLAG = FALSE
	        , UPDATE_USER_ID = 'BATCH'
	        , LOCAL_UPDATE_DTM = CURRENT_TIMESTAMP
	        , SYSTEM_UPDATE_DTM = CURRENT_TIMESTAMP
	    WHERE USE_FLAG = TRUE        /* 사용가능한 값이 있는 경우 */
	    AND MAPPING_FLAG = TRUE    /* 저장된 값이 있는 경우 */
	    AND (TENANT_ID, COMPANY_CODE, ORG_TYPE_CODE, ORG_CODE, VENDOR_POOL_CODE, MATERIAL_CODE, SUPPLIER_CODE) = (
																						                SELECT  
																						                    distinct TENANT_ID
																						                    , COMPANY_CODE
																						                    , ORG_TYPE_CODE
																						                    , ORG_CODE
																						                    , VENDOR_POOL_CODE
																						                    , MATERIAL_CODE
																						                    , SUPPLIER_CODE
																						                FROM :v_supp_all_del_tbl
																						        )
	    ;

    END IF;
    
    :O_TABLE.insert(('LOG', 'STEP-14 [Pass]'));
    
	--:O_TABLE.delete();
	:O_TABLE.insert(('00000', 'Procedure Success...'));
END;