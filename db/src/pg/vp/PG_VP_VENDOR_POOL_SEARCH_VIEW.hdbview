VIEW PG_VP_VENDOR_POOL_SEARCH_VIEW AS 
SELECT M.TENANT_ID,
       M.COMPANY_CODE,
       M.ORG_TYPE_CODE,
       M.ORG_CODE,
       LNG.CODE LANGUAGE_CD,
       M.OPERATION_UNIT_CODE,
       (SELECT CODE_NAME
       	FROM   CM_CODE_LNG CD
       	WHERE  CD.TENANT_ID = M.TENANT_ID
       	AND    CD.GROUP_CODE = 'SP_SM_SUPPLIER_TYPE'
       	AND    CD.LANGUAGE_CD = LNG.CODE
       	AND    CD.CODE = M.OPERATION_UNIT_CODE) OPERATION_UNIT_NAME,       
       M.VENDOR_POOL_CODE,
       M.VENDOR_POOL_LOCAL_NAME,
       M.VENDOR_POOL_ENGLISH_NAME,
       M.VENDOR_POOL_LEVEL1_NAME,
       M.VENDOR_POOL_LEVEL2_NAME,
       M.VENDOR_POOL_LEVEL3_NAME,
       M.VENDOR_POOL_LEVEL4_NAME,
       M.VENDOR_POOL_LEVEL5_NAME,
       MAP(M.HIERARCHY_LEVEL, 1, NULL, 
                              2, M.VENDOR_POOL_LEVEL1_NAME, 
                              3, M.VENDOR_POOL_LEVEL1_NAME || ' > ' || M.VENDOR_POOL_LEVEL2_NAME, 
       	                      4, M.VENDOR_POOL_LEVEL1_NAME || ' > ' || M.VENDOR_POOL_LEVEL2_NAME || ' > ' || M.VENDOR_POOL_LEVEL3_NAME,
       	                      M.VENDOR_POOL_LEVEL1_NAME || ' > ' || M.VENDOR_POOL_LEVEL2_NAME || ' > ' || M.VENDOR_POOL_LEVEL3_NAME || ' > ' || M.VENDOR_POOL_LEVEL4_NAME) HIGHER_LEVEL_PATH,
       MAP(M.HIERARCHY_LEVEL, 1, M.VENDOR_POOL_LEVEL1_NAME, 
                              2, M.VENDOR_POOL_LEVEL1_NAME || ' > ' || M.VENDOR_POOL_LEVEL2_NAME, 
       	                      3, M.VENDOR_POOL_LEVEL1_NAME || ' > ' || M.VENDOR_POOL_LEVEL2_NAME || ' > ' || M.VENDOR_POOL_LEVEL3_NAME,
       	                      M.VENDOR_POOL_LEVEL1_NAME || ' > ' || M.VENDOR_POOL_LEVEL2_NAME || ' > ' || M.VENDOR_POOL_LEVEL3_NAME || ' > ' || M.VENDOR_POOL_LEVEL4_NAME) LEVEL_PATH,
       M.INFO_CHANGE_STATUS,
       M.INP_TYPE_CODE, 
       (SELECT CODE_NAME
       	FROM   CM_CODE_LNG CD
       	WHERE  CD.TENANT_ID = M.TENANT_ID
       	AND    CD.GROUP_CODE = 'PG_VP_INP_TYPE_CODE'
       	AND    CD.LANGUAGE_CD = LNG.CODE
       	AND    CD.CODE = M.INP_TYPE_CODE) INP_TYPE_NAME, /* Code */
       M.EQUIPMENT_GRADE_CODE,
       (SELECT CODE_NAME
       	FROM   CM_CODE_LNG CD
       	WHERE  CD.TENANT_ID = M.TENANT_ID
       	AND    CD.GROUP_CODE = 'PG_VP_EQUIPMENT_GRADE_CODE'
       	AND    CD.LANGUAGE_CD = LNG.CODE
       	AND    CD.CODE = M.EQUIPMENT_GRADE_CODE) EQUIPMENT_GRADE_NAME,
       M.EQUIPMENT_TYPE_CODE,
       (SELECT CODE_NAME
       	FROM   CM_CODE_LNG CD
       	WHERE  CD.TENANT_ID = M.TENANT_ID
       	AND    CD.GROUP_CODE = 'PG_VP_EQUIPMENT_TYPE_CODE'
       	AND    CD.LANGUAGE_CD = LNG.CODE
       	AND    CD.CODE = M.EQUIPMENT_TYPE_CODE) EQUIPMENT_TYPE_NAME,
       (SELECT COUNT(1)
       	FROM   PG_VP_VENDOR_POOL_SUPPLIER_DTL
       	WHERE  TENANT_ID = M.TENANT_ID
       	AND    COMPANY_CODE = M.COMPANY_CODE
       	AND    ORG_TYPE_CODE = M.ORG_TYPE_CODE
       	AND    ORG_CODE = M.ORG_CODE
       	AND    VENDOR_POOL_CODE = M.VENDOR_POOL_CODE
       	AND    VENDOR_POOL_MAPPING_USE_FLAG = TRUE) SUPPLIER_QUANTITY,
       S.SUPPLIER_CODE,
       SM.SUPPLIER_LOCAL_NAME, 
       SM.SUPPLIER_ENGLISH_NAME,
       SM.COMPANY_CODE SUPPLIER_COMPANY_CODE,
       SM.COMPANY_NAME SUPPLIER_COMPANY_NAME, 
       SM.SUPPLIER_REGISTER_STATUS_NAME AS  SUPPLIER_TYPE_NAME,
       CASE WHEN SM.SUPPLIER_FLAG = 'Y' THEN TRUE
            WHEN SM.SUPPLIER_FLAG = 'N' THEN FALSE 
            ELSE NULL
       END SUPPLIER_FLAG,
       CASE WHEN SM.MAKER_FLAG = 'Y' THEN TRUE
            WHEN SM.MAKER_FLAG = 'N' THEN FALSE
            ELSE NULL                       -- 20210107 수정
       END MAKER_FLAG,
       SM.INACTIVE_STATUS_NAME SUPPLIER_STATUS_NAME,
       (SELECT MAP(COUNT(1), 0, 'N', MAP(MAX(APPROVAL_NUMBER), NULL, 'Y', 'N'))
        FROM   PG_VP_VENDOR_POOL_SUPPLIER_TMP
        WHERE  TENANT_ID = M.TENANT_ID
       	AND    COMPANY_CODE = M.COMPANY_CODE
       	AND    ORG_TYPE_CODE = M.ORG_TYPE_CODE
       	AND    ORG_CODE = M.ORG_CODE
       	AND    VENDOR_POOL_CODE = M.VENDOR_POOL_CODE) TEMP_TYPE,
       /*-------------------
       Supplier Master 정보
       -------------------*/
       S.SUPEVAL_CONTROL_FLAG,
       TO_CHAR(TO_DATE(S.SUPEVAL_CONTROL_START_DATE), 'YYYY-MM-DD') AS SUPEVAL_CONTROL_START_DATE,
       TO_CHAR(TO_DATE(S.SUPEVAL_CONTROL_END_DATE), 'YYYY-MM-DD') AS SUPEVAL_CONTROL_END_DATE,
       S.SUPPLIER_RM_CONTROL_FLAG,
       M.SD_EXCEPTION_FLAG,
       M.VENDOR_POOL_APPLY_EXCEPTION_FLAG,
       M.MAKER_MATERIAL_CODE_MNGT_FLAG,
       M.REPR_DEPARTMENT_CODE,
       (SELECT DEPARTMENT_LOCAL_NAME
        FROM   CM_HR_DEPARTMENT
        WHERE  TENANT_ID = M.TENANT_ID
        AND    DEPARTMENT_ID = M.REPR_DEPARTMENT_CODE) REPR_DEPARTMENT_NAME,
       STRING_AGG(EMP.USER_LOCAL_NAME, ',') AS MANAGERS_NAME,
       M.HIERARCHY_RANK,
       M.VENDOR_POOL_PATH_NAME,
       M.VENDOR_POOL_PATH_CODE
FROM   PG_VP_VENDOR_POOL_EXPORT_MST_VIEW AS M
LEFT OUTER  JOIN PG_VP_VENDOR_POOL_SUPPLIER_DTL AS S
ON     M.TENANT_ID = S.TENANT_ID
AND    M.COMPANY_CODE = S.COMPANY_CODE
AND    M.ORG_TYPE_CODE = S.ORG_TYPE_CODE
--AND    M.ORG_CODE = S.ORG_CODE
AND    M.VENDOR_POOL_CODE = S.VENDOR_POOL_CODE
LEFT OUTER  JOIN PG_VP_VENDOR_POOL_MANAGER_DTL AS MG
ON     M.TENANT_ID = MG.TENANT_ID
AND    M.COMPANY_CODE = MG.COMPANY_CODE
AND    M.ORG_TYPE_CODE = MG.ORG_TYPE_CODE
AND    M.ORG_CODE = MG.ORG_CODE
AND    M.VENDOR_POOL_CODE = MG.VENDOR_POOL_CODE
LEFT OUTER JOIN CM_HR_EMPLOYEE EMP
ON     MG.TENANT_ID = EMP.TENANT_ID
AND    MG.VENDOR_POOL_PERSON_EMPNO = EMP.EMPLOYEE_NUMBER
LEFT OUTER JOIN PG_VP_SUPPLIER_MST_VIEW SM
ON     SM.TENANT_ID = M.TENANT_ID
AND    SM.BIZUNIT_CODE = M.ORG_CODE
AND    SM.SUPPLIER_CODE = S.SUPPLIER_CODE
AND    SM.SUPPLIER_TYPE_CODE = M.OPERATION_UNIT_CODE
LEFT OUTER JOIN (
    SELECT TENANT_ID,
           CODE
    FROM   CM_CODE_DTL
    WHERE  GROUP_CODE = 'CM_LANG_CODE'
    AND    NOW() BETWEEN START_DATE AND END_DATE) LNG
on   M.TENANT_ID = LNG.TENANT_ID
WHERE  IFNULL(SM.LANGUAGE_CD, LNG.CODE) = LNG.CODE
AND    IFNULL(EMP.USER_STATUS_CODE, 'C') = 'C'
AND    M.VENDOR_POOL_USE_FLAG = true
AND    'leaf' = IFNULL((SELECT 'leaf'
		       	       FROM   CM_ORG_CODE_LNG CD
		       	       WHERE  CD.TENANT_ID = M.TENANT_ID
		       	       AND    CD.GROUP_CODE = 'VP_VENDOR_POOL_MAX_LEVEL'
                       AND    CD.ORG_CODE = M.ORG_CODE
		       	       AND    CD.LANGUAGE_CD = 'EN'
		       	       AND    CD.CODE = M.OPERATION_UNIT_CODE
		       	       AND    CD.CODE_NAME = M.HIERARCHY_LEVEL), 'expanded') 
GROUP BY M.TENANT_ID,
       M.COMPANY_CODE,
       M.ORG_TYPE_CODE,
       M.ORG_CODE,
       M.OPERATION_UNIT_CODE,
       M.VENDOR_POOL_CODE,
       M.VENDOR_POOL_LOCAL_NAME,
       M.VENDOR_POOL_ENGLISH_NAME,
       M.VENDOR_POOL_LEVEL1_NAME,
       M.VENDOR_POOL_LEVEL2_NAME,
       M.VENDOR_POOL_LEVEL3_NAME,
       M.VENDOR_POOL_LEVEL4_NAME,
       M.VENDOR_POOL_LEVEL5_NAME,
       M.INFO_CHANGE_STATUS,
       M.INP_TYPE_CODE,
       M.EQUIPMENT_GRADE_CODE,
       M.EQUIPMENT_TYPE_CODE,
       S.SUPPLIER_CODE,
       SM.SUPPLIER_LOCAL_NAME, 
       SM.SUPPLIER_ENGLISH_NAME, 
       SM.COMPANY_CODE,
       SM.COMPANY_NAME, 
       SM.SUPPLIER_REGISTER_STATUS_NAME,
       SM.SUPPLIER_FLAG, 
       SM.MAKER_FLAG,
       SM.INACTIVE_STATUS_NAME,
       /*-------------------
       Supplier Master 정보
       -------------------*/
       S.SUPEVAL_CONTROL_FLAG,
       S.SUPEVAL_CONTROL_START_DATE,
       S.SUPEVAL_CONTROL_END_DATE,
       S.SUPPLIER_RM_CONTROL_FLAG,
       M.SD_EXCEPTION_FLAG,
       M.VENDOR_POOL_APPLY_EXCEPTION_FLAG,
       M.MAKER_MATERIAL_CODE_MNGT_FLAG,
       M.REPR_DEPARTMENT_CODE,
       S.SUPEVAL_CONTROL_FLAG,
       S.SUPEVAL_CONTROL_START_DATE,
       S.SUPEVAL_CONTROL_END_DATE,
       S.SUPPLIER_RM_CONTROL_FLAG,
       M.HIERARCHY_RANK,
       M.VENDOR_POOL_PATH_NAME,
       M.VENDOR_POOL_PATH_CODE,
       M.HIERARCHY_LEVEL,
       M.PARENT_VENDOR_POOL_CODE,
       LNG.CODE
ORDER BY MAP(OPERATION_UNIT_CODE, 'RAW_MATERIAL', 1, 2), OPERATION_UNIT_CODE, VENDOR_POOL_PATH_NAME NULLS FIRST
;