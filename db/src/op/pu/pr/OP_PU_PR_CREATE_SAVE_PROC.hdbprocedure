/* PR 신규생성 */
PROCEDURE OP_PU_PR_CREATE_SAVE_PROC (
        IN I_PR_NUMBER NVARCHAR(50), 
        IN I_M_TABLE TABLE( TENANT_ID NVARCHAR(5), 
							COMPANY_CODE NVARCHAR(10), 
							PR_NUMBER NVARCHAR(50), 
							PR_TYPE_CODE NVARCHAR(30), 
							PR_TYPE_CODE_2 NVARCHAR(30), 
							PR_TYPE_CODE_3 NVARCHAR(30), 
							PR_TEMPLATE_NUMBER NVARCHAR(10), 
							PR_CREATE_SYSTEM_CODE NVARCHAR(30),
                            PR_DESC NVARCHAR(100),
                            REQUESTOR_EMPNO NVARCHAR(30),
                            REQUESTOR_NAME NVARCHAR(50),
                            REQUESTOR_DEPARTMENT_CODE NVARCHAR(50),
                            REQUESTOR_DEPARTMENT_NAME NVARCHAR(240),
                            REQUEST_DATE NVARCHAR(10), 
                            PR_CREATE_STATUS_CODE NVARCHAR(30),
                            PR_HEADER_TEXT NVARCHAR(200),
                            APPROVAL_CONTENTS NCLOB,
							UPDATE_USER_ID NVARCHAR(255)
        ),
        IN I_D_TABLE TABLE( PR_ITEM_NUMBER NVARCHAR(10), 
							ORG_TYPE_CODE NVARCHAR(2), 
							ORG_CODE NVARCHAR(10), 
							MATERIAL_CODE NVARCHAR(40), 
							MATERIAL_GROUP_CODE NVARCHAR(10),
							PR_DESC NVARCHAR(100),
							PR_QUANTITY DECIMAL(30,10),
							PR_UNIT NVARCHAR(3),
                            REQUESTOR_EMPNO NVARCHAR(30),
                            REQUESTOR_NAME NVARCHAR(50),
                            DELIVERY_REQUEST_DATE NVARCHAR(10), 
                            BUYER_EMPNO NVARCHAR(30),
                            BUYER_DEPARTMENT_CODE NVARCHAR(30),
                            PURCHASING_GROUP_CODE NVARCHAR(3),
                            ESTIMATED_PRICE DECIMAL(30,10),
                            CURRENCY_CODE NVARCHAR(3),
                            PRICE_UNIT DECIMAL(5,0),
                            PR_PROGRESS_STATUS_CODE NVARCHAR(30),
                            REMARK NVARCHAR(3000),
                            SLOC_CODE NVARCHAR(3),
                            SUPPLIER_CODE NVARCHAR(10),
                            ITEM_CATEGORY_CODE NVARCHAR(2),
                            ACCOUNT_ASSIGNMENT_CATEGORY_CODE NVARCHAR(2),
                            ACCOUNT_CODE NVARCHAR(40),
                            CCTR_CODE NVARCHAR(10),
                            WBS_CODE NVARCHAR(30),
                            ASSET_NUMBER NVARCHAR(30),
                            ORDER_NUMBER NVARCHAR(30),
							UPDATE_USER_ID NVARCHAR(255)
        ),
        OUT O_RTN_MSG TABLE( RETURN_CODE NVARCHAR(4),
						    RETURN_MSG NVARCHAR(4000)
        )
)
LANGUAGE SQLSCRIPT
SQL SECURITY INVOKER 
AS
BEGIN
    DECLARE V_SQL_EXEC_STR NVARCHAR(4000);
    DECLARE V_IDX INT := 0;
    
	DECLARE V_TENANT_ID NVARCHAR(5);
	DECLARE V_COMPANY_CODE NVARCHAR(10);
	DECLARE V_PR_NUMBER NVARCHAR(50);
    DECLARE V_PR_NUMBER_SEQNO BIGINT;
    DECLARE V_REQUEST_DATE DATE;
    DECLARE V_PR_CREATE_STATUS_CODE NVARCHAR(30);

    /* 상세자료 cursor */
    /*
    DECLARE CURSOR curDtlList FOR
        SELECT 	PR_ITEM_NUMBER ,
				ORG_TYPE_CODE ,
				ORG_CODE ,
				MATERIAL_CODE,
				MATERIAL_GROUP_CODE,
				PR_DESC,
				PR_QUANTITY,
				PR_UNIT,
                REQUESTOR_EMPNO ,
                REQUESTOR_NAME ,
                DELIVERY_REQUEST_DATE,
                BUYER_EMPNO ,
                PURCHASING_GROUP_CODE,
                ESTIMATED_PRICE ,
                CURRENCY_CODE ,
                PRICE_UNIT ,
                PR_PROGRESS_STATUS_CODE ,
                REMARK ,
                SLOC_CODE,   
                SUPPLIER_CODE,
                ITEM_CATEGORY_CODE,
                ACCOUNT_ASSIGNMENT_CATEGORY_CODE,                          
                ACCOUNT_CODE,
                CCTR_CODE ,
                WBS_CODE ,
                ASSET_NUMBER ,
                ORDER_NUMBER ,
				UPDATE_USER_ID 
        FROM :I_D_TABLE DTL;
    */

    /* SQL Error 처리 */
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		ROLLBACK;
		O_RTN_MSG = SELECT ::SQL_ERROR_CODE RETURN_CODE, ::SQL_ERROR_MESSAGE RETURN_MSG FROM DUMMY;
    END;
        
    /* PR Key value setting */
    V_TENANT_ID = :I_M_TABLE.TENANT_ID[1];
    V_COMPANY_CODE = :I_M_TABLE.COMPANY_CODE[1];
    V_REQUEST_DATE = TO_DATE(:I_M_TABLE.REQUEST_DATE[1]);
    V_PR_CREATE_STATUS_CODE = :I_M_TABLE.PR_CREATE_STATUS_CODE[1];

	
	/* 구매요청번호 채번 */
    IF (:I_PR_NUMBER IS NULL OR :I_PR_NUMBER = '' OR :I_PR_NUMBER = 'NEW') THEN        
        SELECT 'PR' || LPAD(OP_PU_PR_MST_PR_NUMBER_SEQ.NEXTVAL, 10, '0') 
        INTO V_PR_NUMBER
        FROM DUMMY;
    ELSE
        V_PR_NUMBER = :I_PR_NUMBER;
    END IF;


    /* 구매요청 마스터 등록 */
	S_TABLE_MST =
			SELECT
					M.TENANT_ID,
					M.COMPANY_CODE,
					M.PR_NUMBER,
					M.PR_TYPE_CODE,
					M.PR_TYPE_CODE_2,
					M.PR_TYPE_CODE_3,
					M.PR_TEMPLATE_NUMBER,
					M.PR_CREATE_SYSTEM_CODE,
                    M.PR_DESC,
                    M.REQUESTOR_EMPNO ,
                    M.REQUESTOR_NAME ,
                    M.REQUESTOR_DEPARTMENT_CODE ,
                    M.REQUESTOR_DEPARTMENT_NAME ,
                    M.REQUEST_DATE,
                    M.PR_CREATE_STATUS_CODE,
                    M.PR_HEADER_TEXT ,
                    M.APPROVAL_CONTENTS,
					M.UPDATE_USER_ID
			FROM	:I_M_TABLE M
			;


	MERGE INTO	OP_PU_PR_MST	AS T_MST
		USING	:S_TABLE_MST	AS S_MST
		ON		T_MST.TENANT_ID		= S_MST.TENANT_ID
		AND		T_MST.COMPANY_CODE	= S_MST.COMPANY_CODE
		AND		T_MST.PR_NUMBER		= S_MST.PR_NUMBER
	WHEN MATCHED THEN
		UPDATE SET
			T_MST.PR_TYPE_CODE			= S_MST.PR_TYPE_CODE,
			T_MST.PR_TYPE_CODE_2		= S_MST.PR_TYPE_CODE_2,
			T_MST.PR_TYPE_CODE_3		= S_MST.PR_TYPE_CODE_3,
			T_MST.PR_TEMPLATE_NUMBER	= S_MST.PR_TEMPLATE_NUMBER,
			T_MST.PR_CREATE_SYSTEM_CODE	= S_MST.PR_CREATE_SYSTEM_CODE,
            T_MST.PR_CREATE_STATUS_CODE	= S_MST.PR_CREATE_STATUS_CODE,
            T_MST.PR_DESC	            = S_MST.PR_DESC,
            T_MST.REQUESTOR_EMPNO	    = S_MST.REQUESTOR_EMPNO,
            T_MST.REQUESTOR_NAME	    = S_MST.REQUESTOR_NAME,
            T_MST.REQUESTOR_DEPARTMENT_CODE	= S_MST.REQUESTOR_DEPARTMENT_CODE,
            T_MST.REQUESTOR_DEPARTMENT_NAME	= S_MST.REQUESTOR_DEPARTMENT_NAME,
            T_MST.REQUEST_DATE	        = TO_DATE(S_MST.REQUEST_DATE),
            T_MST.PR_HEADER_TEXT	    = S_MST.PR_HEADER_TEXT,
            T_MST.APPROVAL_CONTENTS	    = S_MST.APPROVAL_CONTENTS,
			T_MST.LOCAL_UPDATE_DTM		= CURRENT_TIMESTAMP,
			T_MST.UPDATE_USER_ID		= S_MST.UPDATE_USER_ID,
			T_MST.SYSTEM_UPDATE_DTM		= CURRENT_TIMESTAMP
	WHEN NOT MATCHED THEN
		INSERT
		(
			TENANT_ID,
			COMPANY_CODE,
			PR_NUMBER,
			PR_TYPE_CODE,
			PR_TYPE_CODE_2,
			PR_TYPE_CODE_3,
			PR_TEMPLATE_NUMBER,
			PR_CREATE_SYSTEM_CODE,
            PR_CREATE_STATUS_CODE,
            PR_DESC,
            REQUESTOR_EMPNO ,
            REQUESTOR_NAME ,
            REQUESTOR_DEPARTMENT_CODE ,
            REQUESTOR_DEPARTMENT_NAME ,
            REQUEST_DATE,
            PR_HEADER_TEXT ,
            APPROVAL_CONTENTS,
            APPROVAL_FLAG,
            ERP_INTERFACE_FLAG,
			LOCAL_CREATE_DTM,
			LOCAL_UPDATE_DTM,
			CREATE_USER_ID,
			UPDATE_USER_ID,
			SYSTEM_CREATE_DTM,
			SYSTEM_UPDATE_DTM
		)
		VALUES
		(
            S_MST.TENANT_ID,
            S_MST.COMPANY_CODE,
            V_PR_NUMBER,
            S_MST.PR_TYPE_CODE,
            S_MST.PR_TYPE_CODE_2,
            S_MST.PR_TYPE_CODE_3,
            S_MST.PR_TEMPLATE_NUMBER,
            S_MST.PR_CREATE_SYSTEM_CODE,
            S_MST.PR_CREATE_STATUS_CODE,
            S_MST.PR_DESC,
            S_MST.REQUESTOR_EMPNO ,
            S_MST.REQUESTOR_NAME ,
            S_MST.REQUESTOR_DEPARTMENT_CODE ,
            S_MST.REQUESTOR_DEPARTMENT_NAME ,
            TO_DATE(S_MST.REQUEST_DATE),
            S_MST.PR_HEADER_TEXT ,
            S_MST.APPROVAL_CONTENTS,
            FALSE,
            FALSE,
			CURRENT_TIMESTAMP,
			CURRENT_TIMESTAMP,
			S_MST.UPDATE_USER_ID,
			S_MST.UPDATE_USER_ID,
			CURRENT_TIMESTAMP,
			CURRENT_TIMESTAMP
		)
	;	

    --=================================================
    -- 구매요청 Detail 
    ---------------------------------------------------
    -- 품목정보는 삭제 후 등록 처리
    --=================================================

	/* 품목 삭제 */
	DELETE FROM OP_PU_PR_DTL
	WHERE 	TENANT_ID 		= :V_TENANT_ID
	AND		COMPANY_CODE	= :V_COMPANY_CODE
	AND		PR_NUMBER		= :V_PR_NUMBER
    ;

	DELETE FROM OP_PU_PR_ACCOUNT
	WHERE 	TENANT_ID 		= :V_TENANT_ID
	AND		COMPANY_CODE	= :V_COMPANY_CODE
	AND		PR_NUMBER		= :V_PR_NUMBER
    ;

    DELETE FROM OP_PU_PR_SERVICE
	WHERE 	TENANT_ID 		= :V_TENANT_ID
	AND		COMPANY_CODE	= :V_COMPANY_CODE
	AND		PR_NUMBER		= :V_PR_NUMBER
    ;
    
	
    /* Cursor 실행 */
    /*
	FOR curDtl AS curDtlList DO
		INSERT INTO OP_PU_PR_DTL (
			TENANT_ID  ,
			COMPANY_CODE,
			PR_NUMBER ,
			PR_ITEM_NUMBER ,
			ORG_TYPE_CODE ,
			ORG_CODE ,
			MATERIAL_CODE,
			MATERIAL_GROUP_CODE,
			PR_DESC,
			PR_QUANTITY,
			PR_UNIT,
            REQUESTOR_EMPNO ,
            REQUESTOR_NAME ,
            REQUEST_DATE,
            DELIVERY_REQUEST_DATE,
            CONFIRMED_DATE,
            BUYER_EMPNO ,
            PURCHASING_GROUP_CODE,
            ESTIMATED_PRICE ,
            CURRENCY_CODE ,
            PRICE_UNIT ,
            PR_PROGRESS_STATUS_CODE ,
            REMARK ,
            SLOC_CODE, 
            SUPPLIER_CODE,
            ITEM_CATEGORY_CODE,
            ACCOUNT_ASSIGNMENT_CATEGORY_CODE,
            DELETE_FLAG,
            CLOSING_FLAG,
            LOCAL_CREATE_DTM,
            LOCAL_UPDATE_DTM,
            CREATE_USER_ID,
            UPDATE_USER_ID,
            SYSTEM_CREATE_DTM,
            SYSTEM_UPDATE_DTM
		) VALUES (
			:V_TENANT_ID , 
			:V_COMPANY_CODE,
			:V_PR_NUMBER ,
			curDtl.PR_ITEM_NUMBER,
			curDtl.ORG_TYPE_CODE ,
			curDtl.ORG_CODE ,
			curDtl.MATERIAL_CODE,
			curDtl.MATERIAL_GROUP_CODE,
			curDtl.PR_DESC,
			curDtl.PR_QUANTITY,
			curDtl.PR_UNIT,
            curDtl.REQUESTOR_EMPNO,
            curDtl.REQUESTOR_NAME,
            V_REQUEST_DATE,
            TO_DATE(curDtl.DELIVERY_REQUEST_DATE),
            CURRENT_TIMESTAMP,
            curDtl.BUYER_EMPNO,
            curDtl.PURCHASING_GROUP_CODE,
            curDtl.ESTIMATED_PRICE ,
            curDtl.CURRENCY_CODE ,
            curDtl.PRICE_UNIT ,
            curDtl.PR_PROGRESS_STATUS_CODE ,
            curDtl.REMARK ,
            curDtl.SLOC_CODE,
            curDtl.SUPPLIER_CODE,
            curDtl.ITEM_CATEGORY_CODE,
            curDtl.ACCOUNT_ASSIGNMENT_CATEGORY_CODE,
            FALSE ,
            FALSE ,       
            CURRENT_TIMESTAMP,
            CURRENT_TIMESTAMP,
            curDtl.UPDATE_USER_ID,
            curDtl.UPDATE_USER_ID,
            CURRENT_TIMESTAMP,
            CURRENT_TIMESTAMP
        );
    END FOR;
    */

    /* 품목정보 등록 */
    INSERT INTO OP_PU_PR_DTL (
			TENANT_ID  ,
			COMPANY_CODE,
			PR_NUMBER ,
			PR_ITEM_NUMBER ,
			ORG_TYPE_CODE ,
			ORG_CODE ,
			MATERIAL_CODE,
			MATERIAL_GROUP_CODE,
			PR_DESC,
			PR_QUANTITY,
			PR_UNIT,
            REQUESTOR_EMPNO ,
            REQUESTOR_NAME ,
            REQUEST_DATE,
            DELIVERY_REQUEST_DATE,
            CONFIRMED_DATE,
            BUYER_EMPNO ,
            BUYER_DEPARTMENT_CODE,
            PURCHASING_GROUP_CODE,
            ESTIMATED_PRICE ,
            CURRENCY_CODE ,
            PRICE_UNIT ,
            PR_PROGRESS_STATUS_CODE ,
            REMARK ,
            SLOC_CODE, 
            SUPPLIER_CODE,
            ITEM_CATEGORY_CODE,
            ACCOUNT_ASSIGNMENT_CATEGORY_CODE,
            DELETE_FLAG,
            CLOSING_FLAG,
            LOCAL_CREATE_DTM,
            LOCAL_UPDATE_DTM,
            CREATE_USER_ID,
            UPDATE_USER_ID,
            SYSTEM_CREATE_DTM,
            SYSTEM_UPDATE_DTM
    )
    SELECT  :V_TENANT_ID , 
            :V_COMPANY_CODE,
            :V_PR_NUMBER ,
            TMP_D.PR_ITEM_NUMBER,
            TMP_D.ORG_TYPE_CODE ,
            TMP_D.ORG_CODE ,
            TMP_D.MATERIAL_CODE,
            TMP_D.MATERIAL_GROUP_CODE,
            TMP_D.PR_DESC,
            TMP_D.PR_QUANTITY,
            TMP_D.PR_UNIT,
            TMP_D.REQUESTOR_EMPNO,
            TMP_D.REQUESTOR_NAME,
            :V_REQUEST_DATE,
            TO_DATE(TMP_D.DELIVERY_REQUEST_DATE),
            CASE WHEN :V_PR_CREATE_STATUS_CODE IS NOT NULL AND :V_PR_CREATE_STATUS_CODE = '50' THEN CURRENT_TIMESTAMP ELSE NULL END,
            TMP_D.BUYER_EMPNO,
            TMP_D.BUYER_DEPARTMENT_CODE,
            TMP_D.PURCHASING_GROUP_CODE,
            TMP_D.ESTIMATED_PRICE ,
            TMP_D.CURRENCY_CODE ,
            TMP_D.PRICE_UNIT ,
            TMP_D.PR_PROGRESS_STATUS_CODE ,
            TMP_D.REMARK ,
            TMP_D.SLOC_CODE,
            TMP_D.SUPPLIER_CODE,
            TMP_D.ITEM_CATEGORY_CODE,
            TMP_D.ACCOUNT_ASSIGNMENT_CATEGORY_CODE,
            FALSE ,
            FALSE ,       
            CURRENT_TIMESTAMP,
            CURRENT_TIMESTAMP,
            TMP_D.UPDATE_USER_ID,
            TMP_D.UPDATE_USER_ID,
            CURRENT_TIMESTAMP,
            CURRENT_TIMESTAMP
    FROM :I_D_TABLE TMP_D;

   
    /* 계정정보 등록 */
    INSERT INTO OP_PU_PR_ACCOUNT (
        TENANT_ID  ,
        COMPANY_CODE,
        PR_NUMBER ,
        PR_ITEM_NUMBER ,
        ACCOUNT_SEQUENCE ,
        SERVICE_SEQUENCE ,
        ACCOUNT_CODE,
        CCTR_CODE,
        WBS_CODE,
        ASSET_NUMBER,
        ORDER_NUMBER,
        PR_QUANTITY ,
        DISTRB_RATE ,
        LOCAL_CREATE_DTM,
        LOCAL_UPDATE_DTM,
        CREATE_USER_ID,
        UPDATE_USER_ID,
        SYSTEM_CREATE_DTM,
        SYSTEM_UPDATE_DTM
    )
    SELECT 
        :V_TENANT_ID , 
        :V_COMPANY_CODE,
        :V_PR_NUMBER ,
        TMP_D.PR_ITEM_NUMBER,
        1 ,
        10 ,
        TMP_D.ACCOUNT_CODE,
        TMP_D.CCTR_CODE,
        TMP_D.WBS_CODE,
        TMP_D.ASSET_NUMBER,
        TMP_D.ORDER_NUMBER,
        TMP_D.PR_QUANTITY,
        NULL,
        CURRENT_TIMESTAMP,
        CURRENT_TIMESTAMP,
        TMP_D.UPDATE_USER_ID,
        TMP_D.UPDATE_USER_ID,
        CURRENT_TIMESTAMP,
        CURRENT_TIMESTAMP
    FROM :I_D_TABLE TMP_D
    WHERE ( (TMP_D.ACCOUNT_CODE IS NOT NULL AND TMP_D.ACCOUNT_CODE != '')
            OR (TMP_D.CCTR_CODE IS NOT NULL AND TMP_D.CCTR_CODE != '')
            OR (TMP_D.WBS_CODE IS NOT NULL AND TMP_D.WBS_CODE != '')
            OR (TMP_D.ORDER_NUMBER IS NOT NULL AND TMP_D.ORDER_NUMBER != '') );


    /* 거래유형이 공사이면, SERVICE 등록 */
    IF (:I_M_TABLE.PR_TYPE_CODE_2[1] IS NOT NULL AND :I_M_TABLE.PR_TYPE_CODE_2[1] = 'TC20003') THEN
        INSERT INTO OP_PU_PR_SERVICE (
                TENANT_ID  ,
                COMPANY_CODE,
                PR_NUMBER ,
                PR_ITEM_NUMBER ,
                SERVICE_SEQUENCE ,
                SERVICE_DESC,
                PR_QUANTITY,
                UNIT,
                NET_PRICE,
                GROSS_AMOUNT,
                CURRENCY_CODE ,
                LOCAL_CREATE_DTM,
                LOCAL_UPDATE_DTM,
                CREATE_USER_ID,
                UPDATE_USER_ID,
                SYSTEM_CREATE_DTM,
                SYSTEM_UPDATE_DTM
        )
        SELECT  :V_TENANT_ID , 
                :V_COMPANY_CODE,
                :V_PR_NUMBER ,
                PR_ITEM_NUMBER,
                1 ,
                PR_DESC,
                PR_QUANTITY,
                PR_UNIT,
                ESTIMATED_PRICE,
                IFNULL(ESTIMATED_PRICE, 0) * IFNULL(PR_QUANTITY, 0)  
                    / CASE WHEN PRICE_UNIT IS NULL OR PRICE_UNIT = 0 THEN 1 ELSE PRICE_UNIT END,
                CURRENCY_CODE,
                CURRENT_TIMESTAMP,
                CURRENT_TIMESTAMP,
                UPDATE_USER_ID,
                UPDATE_USER_ID,
                CURRENT_TIMESTAMP,
                CURRENT_TIMESTAMP
        FROM :I_D_TABLE DTL;
    END IF;

	--COMMIT;
    O_RTN_MSG = SELECT '0000' RETURN_CODE, 'Successfully Saved.' RETURN_MSG FROM DUMMY;
END;