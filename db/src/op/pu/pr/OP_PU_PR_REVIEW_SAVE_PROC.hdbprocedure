PROCEDURE OP_PU_PR_REVIEW_SAVE_PROC (
                                     IN I_JOB_TYPE NVARCHAR(30)
                                    ,IN I_PR_ITEM_TBL TABLE(TRANSACTION_CODE NVARCHAR(1)  -- I:신규, U:수정, D:삭제(화면에서 체크된거만 받아서 사용안함)
                                                           ,TENANT_ID NVARCHAR(5)
                                                           ,COMPANY_CODE NVARCHAR(10)
                                                           ,PR_NUMBER NVARCHAR(50)
                                                           ,PR_ITEM_NUMBER NVARCHAR(10)
                                                           )
                                    ,IN I_BUYER_EMPNO NVARCHAR(30)  -- 구매담당자변경 일때 사용
                                    ,IN I_BUYER_DEPARTMENT_CODE NVARCHAR(30)  -- 구매담당자변경 일때 사용
                                    ,IN I_PROCESSED_REASON NVARCHAR(1000)  -- 처리사유
                                    ,IN I_EMPLOYEE_NUMBER NVARCHAR(30)  -- 처리자(session)
                                    ,OUT O_MSG_TBL TABLE(
                                                         RETURN_CODE NVARCHAR(2)
                                                        ,RETURN_MSG NVARCHAR(1000)
                                                        )
                                    )
LANGUAGE SQLSCRIPT
SQL SECURITY INVOKER
/***************************************************************************************************
Scrum        : OP/구매요청 검토/접수
Program Name : OP_PU_PR_REVIEW_SAVE_PROC
Creator      : dokim
Description  : 구매요청 검토/접수 화면에서 재작성요청(REWRITE), 마감(CLOSING), 마감취소(CLOSING_CANCEL), 구매담당자변경(CHANGE), RFQ작성(RFQ), 입찰작성(BIDDING) 처리를 한다.
History      : 2021-01-25 - 최초적성
               2021-02-09 - 이 Procedure에서 Validation을 체크하지만 우선 OP_PU_PR_REVIEW_VALIDATION_PROC에서 체크해서 넘어오기 때문에 체크할 필요가 있을가?
****************************************************************************************************/
AS

BEGIN
    DECLARE v_sql_rowcnt INT = 0;

    DECLARE v_tenant_id NVARCHAR(5);
	DECLARE v_user_department_code NVARCHAR(50);
	DECLARE v_buyer_department_code NVARCHAR(50);
    DECLARE v_remain_quantity DECIMAL = 0;

	DECLARE v_pr_number NVARCHAR(50);
	DECLARE v_pr_item_number NVARCHAR(10);
    DECLARE v_local_dtm SECONDDATE;
    DECLARE v_system_dtm SECONDDATE;

    /* History 관리 변수 - Start */
    DECLARE v_insert_idx INT = 0;
	DECLARE v_bf_pr_progress_status_code NVARCHAR(50);
    DECLARE v_history_tmp TABLE(TENANT_ID NVARCHAR(5)
                               ,COMPANY_CODE NVARCHAR(10)
                               ,PR_NUMBER NVARCHAR(50)
                               ,PR_ITEM_NUMBER NVARCHAR(10)
                               ,JOB_TYPE_CODE NVARCHAR(30)
                               ,BEFORE_DESC NVARCHAR(50)
                               ,AFTER_DESC NVARCHAR(50)
                               ,REMARK NVARCHAR(3000)
                               ,EMPLOYEE_NUMBER NVARCHAR(30)
                               ,LOCAL_DTM SECONDDATE
                               ,SYSTEM_DTM SECONDDATE
                               );
    DECLARE v_history_tbl TABLE(TENANT_ID NVARCHAR(5)
                               ,COMPANY_CODE NVARCHAR(10)
                               ,PR_NUMBER NVARCHAR(50)
                               ,PR_ITEM_NUMBER NVARCHAR(10)
                               ,JOB_TYPE_CODE NVARCHAR(30)
                               ,BEFORE_DESC NVARCHAR(50)
                               ,AFTER_DESC NVARCHAR(50)
                               ,REMARK NVARCHAR(3000)
                               ,EMPLOYEE_NUMBER NVARCHAR(30)
                               ,LOCAL_DTM SECONDDATE
                               ,SYSTEM_DTM SECONDDATE
                               );
    /* History 관리 변수 - End */

    -- Cursor 선언
    DECLARE CURSOR c_pr_item FOR
        SELECT *
        FROM   :I_PR_ITEM_TBL
        ORDER BY TENANT_ID, COMPANY_CODE, PR_NUMBER, PR_ITEM_NUMBER
        ;

    DECLARE status_check CONDITION FOR SQL_ERROR_CODE 10000;
    DECLARE param_error  CONDITION FOR SQL_ERROR_CODE 10001;
    DECLARE txn_error    CONDITION FOR SQL_ERROR_CODE 10002;

    -- SQL Error 처리
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
        BEGIN
            --ROLLBACK;
            --O_MSG_TBL = SELECT 'NG' AS RETURN_CODE, ::SQL_ERROR_CODE || '-' || ::SQL_ERROR_MESSAGE AS RETURN_MSG FROM DUMMY;
            O_MSG_TBL = SELECT 'NG' AS RETURN_CODE, ::SQL_ERROR_MESSAGE || '(PR:' || :v_pr_number || ', Item:' || :v_pr_item_number || ')' AS RETURN_MSG FROM DUMMY;
        END;

    /**** Check Input Value - Start ****/
    -- Job Type별 Check - 재작성요청(REWRITE), 마감(CLOSING), 마감취소(CLOSING_CANCEL), 구매담당자변경(CHANGE), RFQ작성(RFQ), 입찰작성(BIDDING)

    /* Input Table 건수 체크 - 화면에서 제어해서 안해도 된다. */
    SELECT COUNT(*)
    INTO   v_sql_rowcnt
    FROM   :I_PR_ITEM_TBL;

    IF  v_sql_rowcnt = 0 THEN
        --SIGNAL param_error SET MESSAGE_TEXT = 'EPG00017' || '-[Required Value Exception]-@-' || 'Param Error.(Please Check Master Data Count)';  --협력사 Pool Master 정보가 없습니다.
        SIGNAL param_error SET MESSAGE_TEXT = '구매요청 품목 데이터를 선택해 주세요.';  -- NOP00015
    END IF;

    /* Input Job Type 체크 - 화면에서 넣어서 안해도 된다. */
    IF IFNULL(:I_JOB_TYPE, '-1') = '-1' OR TRIM(' ' FROM :I_JOB_TYPE ) = '' THEN
        SIGNAL param_error SET MESSAGE_TEXT = '작업유형을 확인해 주세요.';  -- NOP00016
    END IF;

    v_tenant_id = :I_PR_ITEM_TBL.TENANT_ID[1];

    -- Employee Number Check
    IF IFNULL(:I_EMPLOYEE_NUMBER, '-1') = '-1' OR TRIM(' ' FROM :I_EMPLOYEE_NUMBER ) = '' THEN
        SELECT IFNULL(:I_EMPLOYEE_NUMBER, '100000')  -- 임시 by dokim
        INTO   I_EMPLOYEE_NUMBER
        FROM   DUMMY
        ;
    END IF;

    -- I_EMPLOYEE_NUMBER로 v_user_department_code 조회
    SELECT HR.DEPARTMENT_CODE
    INTO   v_user_department_code
    FROM   CM_HR_EMPLOYEE HR
    WHERE  HR.TENANT_ID        = :v_tenant_id
    AND    HR.USER_STATUS_CODE = 'C'
    AND    HR.EMPLOYEE_NUMBER  = :I_EMPLOYEE_NUMBER
    ;

    -- 구매담당자변경일때 Buyer정보가 있어야 한다.
    IF (:I_JOB_TYPE = 'CHANGE') THEN
        IF IFNULL(:I_BUYER_EMPNO, '-1') = '-1' OR TRIM(' ' FROM :I_BUYER_EMPNO ) = '' THEN
            SIGNAL param_error SET MESSAGE_TEXT = '구매담당자를 선택해주세요.';  -- NOP00017
        END IF;

        -- I_BUYER_EMPNO로 v_buyer_department_code 조회
        SELECT HR.DEPARTMENT_CODE
        INTO   v_buyer_department_code
        FROM   CM_HR_EMPLOYEE HR
        WHERE  HR.TENANT_ID = :v_tenant_id
        AND    HR.EMPLOYEE_NUMBER = :I_BUYER_EMPNO
        ;
    END IF;

    /**** Check Input Value - End ****/


    /**** Business Logic - Start ****/

    -- Cursor 실행
    FOR l_pr_item AS c_pr_item DO
        v_pr_number      = l_pr_item.PR_NUMBER;
        v_pr_item_number = l_pr_item.PR_ITEM_NUMBER;
        v_local_dtm      = NOW();
        v_system_dtm     = NOW();

        /* 공통 Check - Start */
        /* 구매요청검토 화면의 모든 작업은 구매요청생성상태코드(pr_create_status_code)가 결재완료(30), 생성완료(50) 상태에서만 가능하다. */
        SELECT COUNT(*)
        INTO   v_sql_rowcnt
        FROM   OP_PU_PR_MST PM
        WHERE  PM.TENANT_ID      = l_pr_item.TENANT_ID
        AND    PM.COMPANY_CODE   = l_pr_item.COMPANY_CODE
        AND    PM.PR_NUMBER      = l_pr_item.PR_NUMBER
        AND    PM.PR_CREATE_STATUS_CODE NOT IN ('30', '50') 
        ;

        IF v_sql_rowcnt > 0 THEN
            SIGNAL status_check SET MESSAGE_TEXT = '결재완료, 생성완료 상태만 진행 할 수 있습니다.';  -- NOP00018
        END IF;

        /* 구매담당자 본인꺼만 작업 진행이 가능하지만 구매담당자변경(CHANGE))과 RFQ작성(RFQ), 입찰작성(BIDDING) (자동으로 본인을 담당자로 변경 후 진행)은 제외 */
        SELECT COUNT(*)
        INTO   v_sql_rowcnt
        FROM   OP_PU_PR_DTL PD
        WHERE  PD.TENANT_ID      = l_pr_item.TENANT_ID
        AND    PD.COMPANY_CODE   = l_pr_item.COMPANY_CODE
        AND    PD.PR_NUMBER      = l_pr_item.PR_NUMBER
        AND    PD.PR_ITEM_NUMBER = TO_BIGINT(l_pr_item.PR_ITEM_NUMBER)
        AND    PD.BUYER_EMPNO    = :I_EMPLOYEE_NUMBER
        ;

        IF v_sql_rowcnt = 0 AND (:I_JOB_TYPE != 'CHANGE' AND :I_JOB_TYPE != 'RFQ' AND :I_JOB_TYPE != 'BIDDING') THEN
            SIGNAL status_check SET MESSAGE_TEXT = '자신의 담당 품목이 아닙니다. 구매담당자 변경(지정) 후 진행해주세요.';  -- NOP00024
        END IF;

        /* 마감된 구매요청건은 마감취소 외 다른 작업을 못한다. */
        SELECT COUNT(*)
        INTO   v_sql_rowcnt
        FROM   OP_PU_PR_DTL PD
        WHERE  PD.TENANT_ID      = l_pr_item.TENANT_ID
        AND    PD.COMPANY_CODE   = l_pr_item.COMPANY_CODE
        AND    PD.PR_NUMBER      = l_pr_item.PR_NUMBER
        AND    PD.PR_ITEM_NUMBER = TO_BIGINT(l_pr_item.PR_ITEM_NUMBER)
        AND    PD.CLOSING_FLAG   = TRUE
        ;

        IF v_sql_rowcnt > 0 AND :I_JOB_TYPE != 'CLOSING_CANCEL' THEN
            SIGNAL status_check SET MESSAGE_TEXT = '마감된 구매요청건은 진행 할 수 없습니다.';  -- NOP00020
        END IF;
        /* 공통 Check - End */

        /* 이력정보를 가지고 있다가 작업 종료시 Update 함. - Start */
        v_insert_idx = :v_insert_idx + 1;

        /* RFQ작성(RFQ), 입찰작성(BIDDING)의 경우 담당자를 변경 했을 경우 담당자 변경으로 이력 추가 - Start  */
        IF :I_JOB_TYPE = 'RFQ' OR :I_JOB_TYPE = 'BIDDING' THEN

            SELECT CASE WHEN PD.BUYER_EMPNO = :I_EMPLOYEE_NUMBER THEN 0 ELSE 1 END
            INTO   v_sql_rowcnt
            FROM   OP_PU_PR_DTL PD
            WHERE  PD.TENANT_ID      = l_pr_item.TENANT_ID
            AND    PD.COMPANY_CODE   = l_pr_item.COMPANY_CODE
            AND    PD.PR_NUMBER      = l_pr_item.PR_NUMBER
            AND    PD.PR_ITEM_NUMBER = TO_BIGINT(l_pr_item.PR_ITEM_NUMBER)
            ;

            IF v_sql_rowcnt > 0 THEN
                v_history_tmp = SELECT PD.TENANT_ID
                                      ,PD.COMPANY_CODE
                                      ,PD.PR_NUMBER
                                      ,PD.PR_ITEM_NUMBER
                                      ,'CHANGE' AS JOB_TYPE_CODE
                                      ,CASE WHEN NULLIF(PD.BUYER_EMPNO, '') IS NULL THEN NULL
                                            ELSE PD.BUYER_EMPNO || '/' || CM_GET_EMP_NAME_FUNC(PD.TENANT_ID, PD.BUYER_EMPNO)
                                       END AS BEFORE_DESC
                                      ,:I_EMPLOYEE_NUMBER || '/' || CM_GET_EMP_NAME_FUNC(PD.TENANT_ID, :I_EMPLOYEE_NUMBER) AS AFTER_DESC
                                      ,'Automatically change buyer.' AS REMARK  -- 구매담당자를 자동 변경
                                      ,:I_EMPLOYEE_NUMBER AS EMPLOYEE_NUMBER
                                      ,:v_local_dtm AS LOCAL_DTM
                                      ,:v_system_dtm AS SYSTEM_DTM
                                FROM   OP_PU_PR_DTL PD
                                WHERE  PD.TENANT_ID      = l_pr_item.TENANT_ID
                                AND    PD.COMPANY_CODE   = l_pr_item.COMPANY_CODE
                                AND    PD.PR_NUMBER      = l_pr_item.PR_NUMBER
                                AND    PD.PR_ITEM_NUMBER = TO_BIGINT(l_pr_item.PR_ITEM_NUMBER)
                                ;

                :v_history_tbl.INSERT(:v_history_tmp, :v_insert_idx);
                v_insert_idx = :v_insert_idx + 1;
            END IF;
        END IF;
        /* RFQ작성(RFQ), 입찰작성(BIDDING)의 경우 담당자를 변경 했을 경우 담당자 변경으로 이력 추가 - End  */

        v_history_tmp = SELECT PD.TENANT_ID
                               ,PD.COMPANY_CODE
                               ,PD.PR_NUMBER
                               ,PD.PR_ITEM_NUMBER
                               ,:I_JOB_TYPE AS JOB_TYPE_CODE
                               ,CASE WHEN :I_JOB_TYPE IN ('CHANGE') THEN PD.BUYER_EMPNO || '/' || CM_GET_EMP_NAME_FUNC(PD.TENANT_ID, PD.BUYER_EMPNO)
                                     WHEN :I_JOB_TYPE IN ('RFQ', 'BIDDING') THEN NULL
                                     WHEN :I_JOB_TYPE IN ('CLOSING', 'REWRITE') THEN PD.PR_PROGRESS_STATUS_CODE  -- 마감취소시 마감할때의 상태값을 알기위해 진행상태코드를 저장함.
                                     WHEN :I_JOB_TYPE IN ('CLOSING_CANCEL') THEN 'CLOSING'
                                     ELSE CM_GET_CODE_NAME_FUNC(PD.TENANT_ID, 'OP_PR_REVIEW_JOB_TYPE_CODE', :I_JOB_TYPE, 'KO')
                                END AS BEFORE_DESC
                               ,CASE WHEN :I_JOB_TYPE IN ('CHANGE') THEN :I_BUYER_EMPNO || '/' || CM_GET_EMP_NAME_FUNC(PD.TENANT_ID, :I_BUYER_EMPNO)
                                     WHEN :I_JOB_TYPE IN ('RFQ', 'BIDDING') THEN NULL
                                     --WHEN :I_JOB_TYPE IN ('CLOSING', 'CLOSING_CANCEL') THEN CM_GET_CODE_NAME_FUNC(PD.TENANT_ID, 'OP_PR_REVIEW_JOB_TYPE_CODE', :I_JOB_TYPE, 'KO')
                                     ELSE CM_GET_CODE_NAME_FUNC(PD.TENANT_ID, 'OP_PR_REVIEW_JOB_TYPE_CODE', :I_JOB_TYPE, 'KO')
                                END AS AFTER_DESC
                               ,:I_PROCESSED_REASON AS REMARK
                               ,:I_EMPLOYEE_NUMBER AS EMPLOYEE_NUMBER
                               ,:v_local_dtm AS LOCAL_DTM
                               ,:v_system_dtm AS SYSTEM_DTM
                         FROM   OP_PU_PR_DTL PD
                         WHERE  PD.TENANT_ID      = l_pr_item.TENANT_ID
                         AND    PD.COMPANY_CODE   = l_pr_item.COMPANY_CODE
                         AND    PD.PR_NUMBER      = l_pr_item.PR_NUMBER
                         AND    PD.PR_ITEM_NUMBER = TO_BIGINT(l_pr_item.PR_ITEM_NUMBER)
                         ;

        :v_history_tbl.INSERT(:v_history_tmp, :v_insert_idx);
        /* 이력정보를 가지고 있다가 작업 종료시 Update 함. - End */
        
        --IF (l_pr_item.TRANSACTION_CODE = 'U') THEN  -- I:신규, U:수정, D:삭제  -- TRANSACTION_CODE 사용안함.

                IF (:I_JOB_TYPE = 'REWRITE') THEN

                    /* 같은 PR_NUMBER 중 PR_ITEM_NUMBER 별로 1건이라도 진행된게 있으면 재작성요청을 못한다. */
                    SELECT COUNT(*)
                    INTO   v_sql_rowcnt
                    FROM   OP_PU_PR_DTL PD
                    WHERE  PD.TENANT_ID      = l_pr_item.TENANT_ID
                    AND    PD.COMPANY_CODE   = l_pr_item.COMPANY_CODE
                    AND    PD.PR_NUMBER      = l_pr_item.PR_NUMBER
                    AND    PD.PR_PROGRESS_STATUS_CODE = 'RUN'
                    ;

                    IF v_sql_rowcnt > 0 THEN
                        SIGNAL status_check SET MESSAGE_TEXT = '다른 진행중인 요청건이 존재해서 재작성 요청을 할 수 없습니다.';  -- NOP00019
                    END IF;

                    BEGIN
                        DECLARE EXIT HANDLER FOR SQLEXCEPTION
                        BEGIN
                            SIGNAL txn_error SET MESSAGE_TEXT = 'PR Review Processing error.(REWRITE)';  -- NOP00034
                        END;

                        -- PR_NUMBER로 한번에 Update 하자.
                        UPDATE OP_PU_PR_MST PM
                        SET    PM.PR_CREATE_STATUS_CODE = '15'  -- 임시저장상태로 변경
                              ,PM.LOCAL_UPDATE_DTM  = :v_local_dtm
                              ,PM.UPDATE_USER_ID    = :I_EMPLOYEE_NUMBER
                              ,PM.SYSTEM_UPDATE_DTM = :v_system_dtm
                        WHERE  PM.TENANT_ID      = l_pr_item.TENANT_ID
                        AND    PM.COMPANY_CODE   = l_pr_item.COMPANY_CODE
                        AND    PM.PR_NUMBER      = l_pr_item.PR_NUMBER
                        ;
                        
                        /*
                        -- DTL은 Update 할 필요가 있을까? 어차피 INIT상태에서만 재작성 요청이 가능하므로 Update 안함.
                        -- 재작성 상태로 바꾸면서 approval_date, confirmed_date를 변경해야 하나?  -- by dokim
                        UPDATE OP_PU_PR_DTL PD
                        SET    PD.PR_PROGRESS_STATUS_CODE = 'INIT'
                              ,PD.APPROVAL_DATE = NULL
                              ,PD.CONFIRMED_DATE = NULL
                              ,PD.LOCAL_UPDATE_DTM  = :v_local_dtm
                              ,PD.UPDATE_USER_ID    = :I_EMPLOYEE_NUMBER
                              ,PD.SYSTEM_UPDATE_DTM = :v_system_dtm
                        WHERE  PD.TENANT_ID      = l_pr_item.TENANT_ID
                        AND    PD.COMPANY_CODE   = l_pr_item.COMPANY_CODE
                        AND    PD.PR_NUMBER      = l_pr_item.PR_NUMBER
                        ;
                        */
                    END;

                ELSEIF (:I_JOB_TYPE = 'CLOSING') THEN

                    /* 마감 안된 상태만 마감 가능 */
                    SELECT COUNT(*)
                    INTO   v_sql_rowcnt
                    FROM   OP_PU_PR_DTL PD
                    WHERE  PD.TENANT_ID      = l_pr_item.TENANT_ID
                    AND    PD.COMPANY_CODE   = l_pr_item.COMPANY_CODE
                    AND    PD.PR_NUMBER      = l_pr_item.PR_NUMBER
                    AND    PD.PR_ITEM_NUMBER = TO_BIGINT(l_pr_item.PR_ITEM_NUMBER)
                    AND    PD.CLOSING_FLAG   = TRUE
                    ;

                    IF v_sql_rowcnt > 0 THEN
                        SIGNAL status_check SET MESSAGE_TEXT = '마감된 구매요청건이 존재합니다.';  -- NOP00021
                    END IF;

                    /* 진행중인 구매요청건도 일부 마감을 할 수 있으므로 가능하게 하자. 그래서 주석처리
                    SELECT COUNT(*)
                    INTO   v_sql_rowcnt
                    FROM   OP_PU_PR_DTL PD
                    WHERE  PD.TENANT_ID      = l_pr_item.TENANT_ID
                    AND    PD.COMPANY_CODE   = l_pr_item.COMPANY_CODE
                    AND    PD.PR_NUMBER      = l_pr_item.PR_NUMBER
                    AND    PD.PR_ITEM_NUMBER = TO_BIGINT(l_pr_item.PR_ITEM_NUMBER)
                    AND    PD.PR_PROGRESS_STATUS_CODE = 'RUN'
                    ;

                    IF v_sql_rowcnt > 0 THEN
                        SIGNAL status_check SET MESSAGE_TEXT = '진행중인 구매요청건은 마감을 할 수 없습니다.';  -- NOP00029
                    END IF;
                    */

                    BEGIN
                        DECLARE EXIT HANDLER FOR SQLEXCEPTION
                        BEGIN
                            SIGNAL txn_error SET MESSAGE_TEXT = 'PR Review Processing error.(CLOSING)';  -- NOP00032
                        END;

                        UPDATE OP_PU_PR_DTL PD
                        SET  PD.CLOSING_FLAG            = TRUE
                            ,PD.PR_PROGRESS_STATUS_CODE = 'CLOSING'
                            ,PD.CLOSING_QUANTITY        = PD.PR_QUANTITY  -- 우선 마감수량은 요청수량으로 하자.  -- by dokim
                            ,PD.LOCAL_UPDATE_DTM        = :v_local_dtm
                            ,PD.UPDATE_USER_ID          = :I_EMPLOYEE_NUMBER
                            ,PD.SYSTEM_UPDATE_DTM       = :v_system_dtm
                        WHERE  PD.TENANT_ID      = l_pr_item.TENANT_ID
                        AND    PD.COMPANY_CODE   = l_pr_item.COMPANY_CODE
                        AND    PD.PR_NUMBER      = l_pr_item.PR_NUMBER
                        AND    PD.PR_ITEM_NUMBER = TO_BIGINT(l_pr_item.PR_ITEM_NUMBER)
                        ;
                    END;

                ELSEIF (:I_JOB_TYPE = 'CLOSING_CANCEL') THEN

                    /* 마감된 상태만 취소 가능함 */
                    SELECT COUNT(*)
                    INTO   v_sql_rowcnt
                    FROM   OP_PU_PR_DTL PD
                    WHERE  PD.TENANT_ID      = l_pr_item.TENANT_ID
                    AND    PD.COMPANY_CODE   = l_pr_item.COMPANY_CODE
                    AND    PD.PR_NUMBER      = l_pr_item.PR_NUMBER
                    AND    PD.PR_ITEM_NUMBER = TO_BIGINT(l_pr_item.PR_ITEM_NUMBER)
                    AND    PD.CLOSING_FLAG   = FALSE
                    ;

                    IF v_sql_rowcnt > 0 THEN
                        SIGNAL status_check SET MESSAGE_TEXT = '마감된 상태만 취소 가능합니다.';  -- NOP00022
                    END IF;

                    -- 마감취소시 마감전의 진행상태 가져오기
                    -- 마감취소(CLOSING_CANCEL)를 하려면 이전(최종) 작업이 마감(CANCEL)이어야한다. 그래서 MAX의 이전내역(BEFORE_DESC)이 마감전의 진행상태이다.
                    SELECT IFNULL(NULLIF(PH.BEFORE_DESC, ''), 'INIT')
                    INTO   v_bf_pr_progress_status_code
                    FROM   OP_PU_PR_DTL_HIS PH
                    WHERE  PH.TENANT_ID      = l_pr_item.TENANT_ID
                    AND    PH.COMPANY_CODE   = l_pr_item.COMPANY_CODE
                    AND    PH.PR_NUMBER      = l_pr_item.PR_NUMBER
                    AND    PH.PR_ITEM_NUMBER = TO_BIGINT(l_pr_item.PR_ITEM_NUMBER)
                    AND    PH.SEQUENCE = (
                                          SELECT MAX(H.SEQUENCE)
                                          FROM   OP_PU_PR_DTL_HIS H
                                          WHERE  H.TENANT_ID      = PH.TENANT_ID
                                          AND    H.COMPANY_CODE   = PH.COMPANY_CODE
                                          AND    H.PR_NUMBER      = PH.PR_NUMBER
                                          AND    H.PR_ITEM_NUMBER = PH.PR_ITEM_NUMBER
                                          AND    H.JOB_TYPE_CODE  = 'CLOSING'
                                         )
                    ;

                    BEGIN
                        DECLARE EXIT HANDLER FOR SQLEXCEPTION
                        BEGIN
                            SIGNAL txn_error SET MESSAGE_TEXT = 'PR Review Processing error.(CLOSING_CANCEL)';  -- NOP00033
                        END;

                        UPDATE OP_PU_PR_DTL PD
                        SET  PD.CLOSING_FLAG            = FALSE
                            ,PD.PR_PROGRESS_STATUS_CODE = :v_bf_pr_progress_status_code
                            ,PD.CLOSING_QUANTITY        = 0  -- 우선 마감수량은 0으로 초기화하자.  -- by dokim
                            ,PD.LOCAL_UPDATE_DTM        = :v_local_dtm
                            ,PD.UPDATE_USER_ID          = :I_EMPLOYEE_NUMBER
                            ,PD.SYSTEM_UPDATE_DTM       = :v_system_dtm
                        WHERE  PD.TENANT_ID      = l_pr_item.TENANT_ID
                        AND    PD.COMPANY_CODE   = l_pr_item.COMPANY_CODE
                        AND    PD.PR_NUMBER      = l_pr_item.PR_NUMBER
                        AND    PD.PR_ITEM_NUMBER = TO_BIGINT(l_pr_item.PR_ITEM_NUMBER)
                        ;
                    END;

                ELSEIF (:I_JOB_TYPE = 'CHANGE') THEN

                    /* 진행중인 구매요청건은 구매담당자 변경을 못한다. */
                    SELECT COUNT(*)
                    INTO   v_sql_rowcnt
                    FROM   OP_PU_PR_DTL PD
                    WHERE  PD.TENANT_ID      = l_pr_item.TENANT_ID
                    AND    PD.COMPANY_CODE   = l_pr_item.COMPANY_CODE
                    AND    PD.PR_NUMBER      = l_pr_item.PR_NUMBER
                    AND    PD.PR_ITEM_NUMBER = TO_BIGINT(l_pr_item.PR_ITEM_NUMBER)
                    AND    PD.PR_PROGRESS_STATUS_CODE = 'RUN'
                    ;

                    IF v_sql_rowcnt > 0 THEN
                        SIGNAL status_check SET MESSAGE_TEXT = '진행중인 구매요청건은 구매담당자 변경을 할 수 없습니다.';  -- NOP00028
                    END IF;

                    /* 본인과 본인 부서 또는 담당자 지정이 안된 구매요청건만 변경가능 - 무조건 변경 할 수 있도록 요청함.
                    SELECT COUNT(*)
                    INTO   v_sql_rowcnt
                    FROM   OP_PU_PR_DTL PD
                    WHERE  PD.TENANT_ID      = l_pr_item.TENANT_ID
                    AND    PD.COMPANY_CODE   = l_pr_item.COMPANY_CODE
                    AND    PD.PR_NUMBER      = l_pr_item.PR_NUMBER
                    AND    PD.PR_ITEM_NUMBER = TO_BIGINT(l_pr_item.PR_ITEM_NUMBER)
                    AND    (PD.BUYER_EMPNO = :I_EMPLOYEE_NUMBER OR PD.BUYER_DEPARTMENT_CODE = :v_user_department_code OR NULLIF(PD.BUYER_EMPNO, '') IS NULL)
                    ;

                    IF v_sql_rowcnt = 0 THEN
                        SIGNAL status_check SET MESSAGE_TEXT = '본인과 본인 부서 또는 담당자 지정이 안된 구매요청건만 변경가능합니다.';  -- NOP00023
                    END IF;
                    */

                    BEGIN
                        DECLARE EXIT HANDLER FOR SQLEXCEPTION
                        BEGIN
                            SIGNAL txn_error SET MESSAGE_TEXT = 'PR Review Processing error.(CHANGE)';  -- NOP00031
                        END;

                        UPDATE OP_PU_PR_DTL PD
                        SET  PD.BUYER_EMPNO           = :I_BUYER_EMPNO
                            ,PD.BUYER_DEPARTMENT_CODE = :v_buyer_department_code
                            ,PD.LOCAL_UPDATE_DTM      = :v_local_dtm
                            ,PD.UPDATE_USER_ID        = :I_EMPLOYEE_NUMBER
                            ,PD.SYSTEM_UPDATE_DTM     = :v_system_dtm
                        WHERE  PD.TENANT_ID      = l_pr_item.TENANT_ID
                        AND    PD.COMPANY_CODE   = l_pr_item.COMPANY_CODE
                        AND    PD.PR_NUMBER      = l_pr_item.PR_NUMBER
                        AND    PD.PR_ITEM_NUMBER = TO_BIGINT(l_pr_item.PR_ITEM_NUMBER)
                        ;
                    END;

                ELSEIF (:I_JOB_TYPE = 'RFQ') THEN

                    /* 진행중인 구매요청건은 RFQ작성을 못한다. */ 
                    SELECT COUNT(*)
                    INTO   v_sql_rowcnt
                    FROM   OP_PU_PR_DTL PD
                    WHERE  PD.TENANT_ID      = l_pr_item.TENANT_ID
                    AND    PD.COMPANY_CODE   = l_pr_item.COMPANY_CODE
                    AND    PD.PR_NUMBER      = l_pr_item.PR_NUMBER
                    AND    PD.PR_ITEM_NUMBER = TO_BIGINT(l_pr_item.PR_ITEM_NUMBER)
                    AND    PD.PR_PROGRESS_STATUS_CODE = 'RUN'
                    ;

                    IF v_sql_rowcnt > 0 THEN
                        SIGNAL status_check SET MESSAGE_TEXT = '진행중인 구매요청건은 RFQ작성을 할 수 없습니다.';  -- NOP00027
                    END IF;

                    /* 잔량이 없는 구매요청건은 진행이 불가능하다 */
                    SELECT CASE WHEN PD.CLOSING_FLAG = TRUE THEN 0 ELSE IFNULL(PD.PR_QUANTITY, 0) END
                    INTO   v_remain_quantity
                    FROM   OP_PU_PR_DTL PD
                    WHERE  PD.TENANT_ID      = l_pr_item.TENANT_ID
                    AND    PD.COMPANY_CODE   = l_pr_item.COMPANY_CODE
                    AND    PD.PR_NUMBER      = l_pr_item.PR_NUMBER
                    AND    PD.PR_ITEM_NUMBER = TO_BIGINT(l_pr_item.PR_ITEM_NUMBER)
                    ;

                    IF v_remain_quantity = 0 THEN
                        SIGNAL status_check SET MESSAGE_TEXT = '잔량이 없는 구매요청건은 RFQ작성을 진행 할 수 없습니다.';  -- NOP00025
                    END IF;

                    /* 구매 담당자를 자신으로 Update 한다. */
                    BEGIN
                        DECLARE EXIT HANDLER FOR SQLEXCEPTION
                        BEGIN
                            SIGNAL txn_error SET MESSAGE_TEXT = 'PR Review Processing error.(RFQ)';  -- NOP00035
                        END;

                        UPDATE OP_PU_PR_DTL PD
                        SET  PD.PR_PROGRESS_STATUS_CODE = 'RUN'
                            ,PD.BUYER_EMPNO             = :I_EMPLOYEE_NUMBER
                            ,PD.BUYER_DEPARTMENT_CODE   = :v_user_department_code
                            ,PD.LOCAL_UPDATE_DTM        = :v_local_dtm
                            ,PD.UPDATE_USER_ID          = :I_EMPLOYEE_NUMBER
                            ,PD.SYSTEM_UPDATE_DTM       = :v_system_dtm
                        WHERE  PD.TENANT_ID      = l_pr_item.TENANT_ID
                        AND    PD.COMPANY_CODE   = l_pr_item.COMPANY_CODE
                        AND    PD.PR_NUMBER      = l_pr_item.PR_NUMBER
                        AND    PD.PR_ITEM_NUMBER = TO_BIGINT(l_pr_item.PR_ITEM_NUMBER)
                        ;
                    END;

                ELSEIF (:I_JOB_TYPE = 'BIDDING') THEN

                    /* 진행중인 구매요청건은 BIDDING작성을 못한다. */ 
                    SELECT COUNT(*)
                    INTO   v_sql_rowcnt
                    FROM   OP_PU_PR_DTL PD
                    WHERE  PD.TENANT_ID      = l_pr_item.TENANT_ID
                    AND    PD.COMPANY_CODE   = l_pr_item.COMPANY_CODE
                    AND    PD.PR_NUMBER      = l_pr_item.PR_NUMBER
                    AND    PD.PR_ITEM_NUMBER = TO_BIGINT(l_pr_item.PR_ITEM_NUMBER)
                    AND    PD.PR_PROGRESS_STATUS_CODE = 'RUN'
                    ;

                    IF v_sql_rowcnt > 0 THEN
                        SIGNAL status_check SET MESSAGE_TEXT = '진행중인 구매요청건은 입찰작성을 할 수 없습니다.';  -- NOP00030
                    END IF;

                    /* 잔량이 없는 구매요청건은 진행이 불가능하다 */
                    SELECT CASE WHEN PD.CLOSING_FLAG = TRUE THEN 0 ELSE IFNULL(PD.PR_QUANTITY, 0) END
                    INTO   v_remain_quantity
                    FROM   OP_PU_PR_DTL PD
                    WHERE  PD.TENANT_ID      = l_pr_item.TENANT_ID
                    AND    PD.COMPANY_CODE   = l_pr_item.COMPANY_CODE
                    AND    PD.PR_NUMBER      = l_pr_item.PR_NUMBER
                    AND    PD.PR_ITEM_NUMBER = TO_BIGINT(l_pr_item.PR_ITEM_NUMBER)
                    ;

                    IF v_remain_quantity = 0 THEN
                        SIGNAL status_check SET MESSAGE_TEXT = '잔량이 없는 구매요청건은 입찰작성을 진행 할 수 없습니다.';  -- NOP00026
                    END IF;

                    /* 구매 담당자를 자신으로 Update 한다. */
                    BEGIN
                        DECLARE EXIT HANDLER FOR SQLEXCEPTION
                        BEGIN
                            SIGNAL txn_error SET MESSAGE_TEXT = 'PR Review Processing error.(BIDDING)';  -- NOP00036
                        END;

                        UPDATE OP_PU_PR_DTL PD
                        SET  PD.PR_PROGRESS_STATUS_CODE = 'RUN'
                            ,PD.BUYER_EMPNO             = :I_EMPLOYEE_NUMBER
                            ,PD.BUYER_DEPARTMENT_CODE   = :v_user_department_code
                            ,PD.LOCAL_UPDATE_DTM        = :v_local_dtm
                            ,PD.UPDATE_USER_ID          = :I_EMPLOYEE_NUMBER
                            ,PD.SYSTEM_UPDATE_DTM       = :v_system_dtm
                        WHERE  PD.TENANT_ID      = l_pr_item.TENANT_ID
                        AND    PD.COMPANY_CODE   = l_pr_item.COMPANY_CODE
                        AND    PD.PR_NUMBER      = l_pr_item.PR_NUMBER
                        AND    PD.PR_ITEM_NUMBER = TO_BIGINT(l_pr_item.PR_ITEM_NUMBER)
                        ;
                    END;

                ELSE
                    SIGNAL param_error SET MESSAGE_TEXT = 'PR Review Processing error.(Please Check Job Type)';  -- NOP00037
                END IF;

        --END IF;

    END FOR;

    /* 이력정보 Update. - Start */
    CALL OP_PU_PR_REVIEW_HIS_SAVE_PROC(:v_history_tbl);
    /* 이력정보 Update. - Start */

    /**** Business Logic - End ****/

    --COMMIT;
    O_MSG_TBL = SELECT 'OK' AS RETURN_CODE, 'It has been processed successfully.' AS RETURN_MSG FROM DUMMY;  -- NOP00038

END;