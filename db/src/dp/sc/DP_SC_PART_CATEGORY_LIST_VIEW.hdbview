VIEW DP_SC_PART_CATEGORY_LIST_VIEW AS
SELECT ca.hierarchy_rank,            /*현재node의 순번(sibling order by에 의한)*/
      ca.hierarchy_level,           /*현재node의 Level*/
      ca.category_code,
      ca.parent_category_code,
      ca.seq,
      ca.category_name,
      ca.status_code,
      STRING_AGG( au.auth_code, ',') as auth_name
       FROM HIERARCHY (
				    SOURCE (
				        SELECT  tenant_id,
                                org_type_code,
                                org_code,
                                category_code,
                                parent_category_code,
                                seq,
                                category_name,
                                status_code,                        
                                HIERARCHY_COMPOSITE_ID(tenant_id,org_type_code,org_code,parent_category_code) as parent_id, 
                                HIERARCHY_COMPOSITE_ID(tenant_id,org_type_code,org_code,category_code) as node_id
				        FROM dp_sc_part_category
				    )
				    START WHERE parent_category_code = '@TOP'
            ) ca
            LEFT JOIN DP_SC_PART_CATEGORY_AUTH au ON ( ca.tenant_id = au.tenant_id AND ca.org_type_code = au.org_type_code AND ca.org_code = au.org_code AND ca.category_code = au.category_code )
GROUP BY ca.hierarchy_rank, ca.hierarchy_level,ca.category_code,ca.parent_category_code,ca.seq,ca.category_name,ca.status_code
ORDER BY ca.HIERARCHY_RANK
;