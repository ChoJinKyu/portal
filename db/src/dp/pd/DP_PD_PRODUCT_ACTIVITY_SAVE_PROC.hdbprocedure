PROCEDURE DP_PD_PRODUCT_ACTIVITY_SAVE_PROC (
    IN  I_TABLE DP_PD_PRODUCT_ACTIVITY_TEMPLATE_TYPE,
	OUT O_RTN_MESG NVARCHAR(4000)
)
LANGUAGE SQLSCRIPT
SQL SECURITY INVOKER 

AS
BEGIN

	/* SQL Error 처리 */
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		ROLLBACK;
        O_RTN_MESG := ::SQL_ERROR_CODE||'-'||::SQL_ERROR_MESSAGE;
		--SELECT ::SQL_ERROR_CODE||'-'||::SQL_ERROR_MESSAGE INTO O_RTN_MESG FROM DUMMY;
	END;

    MERGE INTO DP_PD_PRODUCT_ACTIVITY_TEMPLATE PAT
        USING :I_TABLE 
        ON ( PAT.TENANT_ID = :I_TABLE.TENANT_ID
             AND PAT.COMPANY_CODE = :I_TABLE.COMPANY_CODE
             AND PAT.ORG_TYPE_CODE = :I_TABLE.ORG_TYPE_CODE
             AND PAT.ORG_CODE = :I_TABLE.ORG_CODE
             AND PAT.PRODUCT_ACTIVITY_CODE = :I_TABLE.PRODUCT_ACTIVITY_CODE
             AND :I_TABLE.CRUD_TYPE_CODE <> 'D' )

    WHEN MATCHED THEN
        UPDATE 
        SET  PAT.PRODUCT_ACTIVITY_CODE = IFNULL(:I_TABLE.UPDATE_PRODUCT_ACTIVITY_CODE, PAT.PRODUCT_ACTIVITY_CODE)
            ,PAT.DEVELOPE_EVENT_CODE = :I_TABLE.DEVELOPE_EVENT_CODE
            ,PAT.SEQUENCE = :I_TABLE.SEQUENCE
            ,PAT.PRODUCT_ACTIVITY_NAME = :I_TABLE.PRODUCT_ACTIVITY_NAME
            ,PAT.PRODUCT_ACTIVITY_ENGLISH_NAME = :I_TABLE.PRODUCT_ACTIVITY_ENGLISH_NAME
            ,PAT.MILESTONE_FLAG = :I_TABLE.MILESTONE_FLAG
            ,PAT.ACTIVE_FLAG = :I_TABLE.ACTIVE_FLAG
            ,PAT.LOCAL_UPDATE_DTM = NOW()
            ,PAT.UPDATE_USER_ID = :I_TABLE.UPDATE_USER_ID
            ,PAT.SYSTEM_UPDATE_DTM = NOW()

    WHEN NOT MATCHED THEN
        INSERT ( TENANT_ID
                ,COMPANY_CODE
                ,ORG_TYPE_CODE
                ,ORG_CODE
                ,PRODUCT_ACTIVITY_CODE
                ,DEVELOPE_EVENT_CODE
                ,SEQUENCE
                ,PRODUCT_ACTIVITY_NAME
                ,PRODUCT_ACTIVITY_ENGLISH_NAME
                ,MILESTONE_FLAG
                ,ACTIVE_FLAG
                ,LOCAL_CREATE_DTM
                ,LOCAL_UPDATE_DTM
                ,CREATE_USER_ID
                ,UPDATE_USER_ID
                ,SYSTEM_CREATE_DTM
                ,SYSTEM_UPDATE_DTM
               )
        VALUES ( :I_TABLE.TENANT_ID
                ,:I_TABLE.COMPANY_CODE
                ,:I_TABLE.ORG_TYPE_CODE
                ,:I_TABLE.ORG_CODE
                ,:I_TABLE.PRODUCT_ACTIVITY_CODE
                ,:I_TABLE.DEVELOPE_EVENT_CODE
                ,:I_TABLE.SEQUENCE
                ,:I_TABLE.PRODUCT_ACTIVITY_NAME
                ,:I_TABLE.PRODUCT_ACTIVITY_ENGLISH_NAME
                ,:I_TABLE.MILESTONE_FLAG
                ,:I_TABLE.ACTIVE_FLAG
                ,NOW()
                ,NOW()
                ,:I_TABLE.UPDATE_USER_ID
                ,:I_TABLE.UPDATE_USER_ID
                ,NOW()
                ,NOW()
               )
    ;

    MERGE INTO DP_PD_PRODUCT_ACTIVITY_TEMPLATE PAT
        USING :I_TABLE 
        ON ( PAT.TENANT_ID = :I_TABLE.TENANT_ID
             AND PAT.COMPANY_CODE = :I_TABLE.COMPANY_CODE
             AND PAT.ORG_TYPE_CODE = :I_TABLE.ORG_TYPE_CODE
             AND PAT.ORG_CODE = :I_TABLE.ORG_CODE
             AND PAT.PRODUCT_ACTIVITY_CODE = :I_TABLE.PRODUCT_ACTIVITY_CODE
             AND :I_TABLE.CRUD_TYPE_CODE = 'D' )

    WHEN MATCHED THEN
        DELETE
    ;
    
	COMMIT;
	O_RTN_MESG := '0000-SUCCESS';
END;