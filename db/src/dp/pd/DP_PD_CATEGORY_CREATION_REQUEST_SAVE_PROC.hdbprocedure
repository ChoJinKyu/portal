PROCEDURE DP_PD_CATEGORY_CREATION_REQUEST_SAVE_PROC (		
    IN  CRUD_TYPE NVARCHAR(1),
    IN  I_M TABLE ( TENANT_ID NVARCHAR(5), 
                    REQUEST_NUMBER NVARCHAR(30),
                    CATEGORY_GROUP_CODE NVARCHAR(30),
                    APPROVAL_NUMBER NVARCHAR(50),
                    REQUEST_TITLE NVARCHAR(50),
                    REQUEST_CATEGORY_NAME NVARCHAR(50),
                    SIMILAR_CATEGORY_CODE NVARCHAR(40),
                    REQUESTOR_EMPNO NVARCHAR(30),
                    REQUEST_DATE_TIME TIMESTAMP,
                    REQUEST_DESC BLOB,
                    ATTCH_GROUP_NUMBER NVARCHAR(100),
                    PROGRESS_STATUS_CODE NVARCHAR(30),
                    CREATOR_EMPNO NVARCHAR(30),
                    CREATE_CATEGORY_CODE NVARCHAR(40),
                    UPDATE_USER_ID NVARCHAR(255),
                    CRUD_TYPE NVARCHAR(1) ),
    IN  I_D TABLE ( TENANT_ID NVARCHAR(5),
                    REQUEST_NUMBER NVARCHAR(30),
                    APPROVE_SEQUENCE DECIMAL,
                    APPROVAL_NUMBER NVARCHAR(50),
                    REQUESTOR_EMPNO NVARCHAR(30),
                    TF_FLAG BOOLEAN,
                    APPROVAL_COMMENT NVARCHAR(500),
                    APPROVE_DATE_TIME TIMESTAMP,
                    UPDATE_USER_ID NVARCHAR(255),
                    CRUD_TYPE NVARCHAR(1) ),
    OUT O_MSG TABLE(RETURN_CODE NVARCHAR(2), RETURN_MSG NVARCHAR(5000) )
)
LANGUAGE SQLSCRIPT		
SQL SECURITY INVOKER

AS
BEGIN
    DECLARE V_D_CNT INT;
    DECLARE CREATE_CATEGORY_CODE NVARCHAR(40);
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
		ROLLBACK;

/* CRUD_TYPE_CODE가 'D' 인 Data 삭제 */
    IF CRUD_TYPE = 'D' THEN
      BEGIN
        DECLARE EXIT HANDLER FOR SQLEXCEPTION
        BEGIN
            O_MSG = SELECT  'NG' RETURN_CODE, ::SQL_ERROR_CODE||'-'||::SQL_ERROR_MESSAGE RETURN_MSG FROM  DUMMY;
            RESIGNAL;
        END;

        DELETE FROM DP_PD_PART_CATEGORY_APPROVAL D
        WHERE (D.TENANT_ID, D.REQUEST_NUMBER, D.APPROVE_SEQUENCE ) IN
            ( SELECT TENANT_ID, REQUEST_NUMBER, APPROVE_SEQUENCE FROM :I_D )
        ;
/*
        IF ::rowcount = 0 THEN
            SIGNAL SQL_ERROR_CODE 10001 set ;
        END IF;
*/
        DELETE FROM DP_PD_PART_CATEGORY_CREATION_REQUEST M
        WHERE (M.TENANT_ID, M.REQUEST_NUMBER, M.CATEGORY_GROUP_CODE ) IN
            ( SELECT TENANT_ID, REQUEST_NUMBER, CATEGORY_GROUP_CODE FROM :I_M )
        ;
      END;
    ELSE
        IF CRUD_TYPE = 'U' THEN
            UPDATE DP_PD_PART_CATEGORY_CREATION_REQUEST M
            SET ( APPROVAL_NUMBER
                  ,REQUEST_TITLE	
                  ,REQUEST_CATEGORY_NAME	
                  ,SIMILAR_CATEGORY_CODE	
                  ,REQUESTOR_EMPNO	
                  ,REQUEST_DATE_TIME	
                  ,REQUEST_DESC	
                  ,ATTCH_GROUP_NUMBER	
                  ,PROGRESS_STATUS_CODE	
                  ,CREATOR_EMPNO	
                  ,CREATE_CATEGORY_CODE
                  ,LOCAL_UPDATE_DTM
                  ,UPDATE_USER_ID
                ) =
                ( SELECT APPROVAL_NUMBER
                        ,REQUEST_TITLE	
                        ,REQUEST_CATEGORY_NAME	
                        ,SIMILAR_CATEGORY_CODE	
                        ,REQUESTOR_EMPNO	
                        ,REQUEST_DATE_TIME	
                        ,REQUEST_DESC	
                        ,ATTCH_GROUP_NUMBER	
                        ,PROGRESS_STATUS_CODE	
                        ,CREATOR_EMPNO	
                        ,CREATE_CATEGORY_CODE
                        ,NOW() AS LOCAL_UPDATE_DTM
                        ,UPDATE_USER_ID
                    FROM :I_M
                   WHERE TENANT_ID = M.TENANT_ID
                     AND REQUEST_NUMBER = M.REQUEST_NUMBER
                     AND CATEGORY_GROUP_CODE = M.CATEGORY_GROUP_CODE
                )
                WHERE (M.TENANT_ID, M.REQUEST_NUMBER, M.CATEGORY_GROUP_CODE ) IN
                ( SELECT TENANT_ID, REQUEST_NUMBER, CATEGORY_GROUP_CODE FROM :I_M )
            ;
        ELSE
            INSERT INTO DP_PD_PART_CATEGORY_CREATION_REQUEST M
                      ( TENANT_ID
                        ,REQUEST_NUMBER	
                        ,CATEGORY_GROUP_CODE	
                        ,APPROVAL_NUMBER	
                        ,REQUEST_TITLE	
                        ,REQUEST_CATEGORY_NAME	
                        ,SIMILAR_CATEGORY_CODE	
                        ,REQUESTOR_EMPNO	
                        ,REQUEST_DATE_TIME	
                        ,REQUEST_DESC	
                        ,ATTCH_GROUP_NUMBER	
                        ,PROGRESS_STATUS_CODE	
                        ,CREATOR_EMPNO	
                        ,CREATE_CATEGORY_CODE	
                        ,LOCAL_CREATE_DTM
                        ,LOCAL_UPDATE_DTM
                        ,CREATE_USER_ID
                        ,UPDATE_USER_ID
                        ,SYSTEM_CREATE_DTM
                        ,SYSTEM_UPDATE_DTM
                      )
                 SELECT TENANT_ID
                        ,REQUEST_NUMBER	
                        ,CATEGORY_GROUP_CODE	
                        ,APPROVAL_NUMBER	
                        ,REQUEST_TITLE	
                        ,REQUEST_CATEGORY_NAME	
                        ,SIMILAR_CATEGORY_CODE	
                        ,REQUESTOR_EMPNO	
                        ,REQUEST_DATE_TIME	
                        ,REQUEST_DESC	
                        ,ATTCH_GROUP_NUMBER	
                        ,PROGRESS_STATUS_CODE	
                        ,CREATOR_EMPNO	
                        ,CREATE_CATEGORY_CODE
                        ,NOW()
                        ,NOW()
                        ,UPDATE_USER_ID
                        ,UPDATE_USER_ID
                        ,NOW()
                        ,NOW()
                FROM :I_M 
            ;                

        END IF;

        /*  I_D Table의 Data 일괄 삭제 */
        SELECT COUNT(1) INTO V_D_CNT FROM :I_D;

        IF V_D_CNT > 0 THEN
            DELETE FROM DP_PD_PART_CATEGORY_APPROVAL D
            WHERE (D.TENANT_ID, D.REQUEST_NUMBER, D.APPROVE_SEQUENCE ) IN
                ( SELECT TENANT_ID, REQUEST_NUMBER, APPROVE_SEQUENCE
                    FROM :I_D id
                WHERE id.CRUD_TYPE = 'D'
                )
            ;

            /*  I_D Table의 Data 일괄 추가,수정 */
            MERGE INTO DP_PD_PART_CATEGORY_APPROVAL D
                USING ( SELECT * FROM :I_D WHERE :I_D.CRUD_TYPE IN ('C','U')  ) id
                ON ( D.TENANT_ID = id.TENANT_ID
                    AND D.REQUEST_NUMBER = id.REQUEST_NUMBER
                    AND D.APPROVE_SEQUENCE = id.APPROVE_SEQUENCE )
            WHEN MATCHED THEN
                UPDATE
                SET  D.APPROVAL_NUMBER = id.APPROVAL_NUMBER
                    ,D.REQUESTOR_EMPNO = id.REQUESTOR_EMPNO
                    ,D.TF_FLAG = id.TF_FLAG
                    ,D.APPROVAL_COMMENT = id.APPROVAL_COMMENT
                    ,D.APPROVE_DATE_TIME = id.APPROVE_DATE_TIME
                    ,D.LOCAL_UPDATE_DTM = NOW()
                    ,D.UPDATE_USER_ID = id.UPDATE_USER_ID
            WHEN NOT MATCHED THEN
                INSERT ( TENANT_ID
                        ,REQUEST_NUMBER
                        ,APPROVE_SEQUENCE
                        ,APPROVAL_NUMBER
                        ,REQUESTOR_EMPNO
                        ,TF_FLAG
                        ,APPROVAL_COMMENT
                        ,APPROVE_DATE_TIME
                        ,LOCAL_CREATE_DTM
                        ,LOCAL_UPDATE_DTM
                        ,CREATE_USER_ID
                        ,UPDATE_USER_ID
                        ,SYSTEM_CREATE_DTM
                        ,SYSTEM_UPDATE_DTM
                    )
                VALUES ( id.TENANT_ID
                        ,id.REQUEST_NUMBER
                        ,id.APPROVE_SEQUENCE
                        ,id.APPROVAL_NUMBER
                        ,id.REQUESTOR_EMPNO
                        ,id.TF_FLAG
                        ,id.APPROVAL_COMMENT
                        ,id.APPROVE_DATE_TIME
                        ,NOW()
                        ,NOW()
                        ,id.UPDATE_USER_ID
                        ,id.UPDATE_USER_ID
                        ,NOW()
                        ,NOW()
                    )
            ;
        END IF;
    END IF;
    
    COMMIT;
    O_MSG = SELECT 'OK' RETURN_CODE, 'Successfully Saved.' RETURN_MSG FROM DUMMY;
END;