PROCEDURE DP_PD_PART_BASE_ACTIVITY_SAVE_PROC (		
    IN  CRUD_TYPE NVARCHAR(1),
    IN  I_M TABLE ( TENANT_ID NVARCHAR(5), 
                    ACTIVITY_CODE NVARCHAR(40), 
                    SEQUENCE DECIMAL, 
                    DESCRIPTION NVARCHAR(240), 
                    ACTIVE_FLAG BOOLEAN,
                    UPDATE_USER_ID NVARCHAR(255),
                    CRUD_TYPE NVARCHAR(1) ),
    IN  I_D TABLE ( TENANT_ID NVARCHAR(5), 
                    ACTIVITY_CODE NVARCHAR(40), 
                    LANGUAGE_CD NVARCHAR(30), 
                    CODE_NAME NVARCHAR(240),
                    UPDATE_USER_ID NVARCHAR(255),
                    CRUD_TYPE NVARCHAR(1) ),
    OUT O_MSG TABLE(RETURN_CODE NVARCHAR(2), RETURN_MSG NVARCHAR(5000) )
)
LANGUAGE SQLSCRIPT		
SQL SECURITY INVOKER

AS
BEGIN

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		ROLLBACK;
		O_MSG = SELECT  'NG' RETURN_CODE, ::SQL_ERROR_CODE||'-'||::SQL_ERROR_MESSAGE RETURN_MSG FROM  DUMMY;
	END;

/*  CRUD_TYPE_CODE가 'D' 인 Data 삭제 */
    IF CRUD_TYPE = 'D' THEN
        DELETE FROM DP_PD_PART_BASE_ACTIVITY_LNG D
        WHERE (D.TENANT_ID, D.ACTIVITY_CODE ) IN
            ( SELECT TENANT_ID,ACTIVITY_CODE FROM :I_M )
        ;

        DELETE FROM DP_PD_PART_BASE_ACTIVITY M
        WHERE (M.TENANT_ID, M.ACTIVITY_CODE ) IN
            ( SELECT TENANT_ID,ACTIVITY_CODE FROM :I_M )
        ;

    ELSE

        IF CRUD_TYPE = 'U' THEN
            UPDATE DP_PD_PART_BASE_ACTIVITY M
               SET (M.DESCRIPTION, M.ACTIVE_FLAG, M.LOCAL_UPDATE_DTM, M.UPDATE_USER_ID, M.SYSTEM_UPDATE_DTM) =
                   ( SELECT DESCRIPTION, ACTIVE_FLAG, NOW(), UPDATE_USER_ID, NOW()
                       FROM :I_M
                      WHERE TENANT_ID = M.TENANT_ID 
                        AND ACTIVITY_CODE = M.ACTIVITY_CODE
                   )
            WHERE   (M.TENANT_ID, M.ACTIVITY_CODE ) IN
                    ( SELECT TENANT_ID,ACTIVITY_CODE FROM :I_M )
            ;
        ELSE
            INSERT INTO DP_PD_PART_BASE_ACTIVITY M
                      ( TENANT_ID
                        ,ACTIVITY_CODE
                        ,DESCRIPTION
                        ,ACTIVE_FLAG
                        ,LOCAL_CREATE_DTM
                        ,LOCAL_UPDATE_DTM
                        ,CREATE_USER_ID
                        ,UPDATE_USER_ID
                        ,SYSTEM_CREATE_DTM
                        ,SYSTEM_UPDATE_DTM
                      )
                 SELECT TENANT_ID
                        ,ACTIVITY_CODE
                        ,DESCRIPTION
                        ,ACTIVE_FLAG
                        ,NOW()
                        ,NOW()
                        ,UPDATE_USER_ID
                        ,UPDATE_USER_ID
                        ,NOW()
                        ,NOW()
                FROM :I_M 
            ;                

        END IF;

        /*  I_D Table의 Data 일괄 삭제 */
        DELETE FROM DP_PD_PART_BASE_ACTIVITY_LNG D
        WHERE ( D.TENANT_ID,D.ACTIVITY_CODE,D.LANGUAGE_CD ) IN
            ( SELECT id.TENANT_ID, id.ACTIVITY_CODE, id.LANGUAGE_CD
                FROM :I_D id
               WHERE id.CRUD_TYPE = 'D'
            )
        ;

        /*  I_D Table의 Data 일괄 추가,수정 */
        MERGE INTO DP_PD_PART_BASE_ACTIVITY_LNG D
            USING ( SELECT * FROM :I_D WHERE :I_D.CRUD_TYPE IN ('C','U')  ) id
            ON ( D.TENANT_ID = id.TENANT_ID
                AND D.ACTIVITY_CODE = id.ACTIVITY_CODE
                AND D.LANGUAGE_CD = id.LANGUAGE_CD
                AND id.CRUD_TYPE IN ('C','U') )

        WHEN MATCHED THEN
            UPDATE
            SET  D.CODE_NAME = id.CODE_NAME
                ,D.LOCAL_UPDATE_DTM = NOW()
                ,D.UPDATE_USER_ID = id.UPDATE_USER_ID
                ,D.SYSTEM_UPDATE_DTM = NOW()
        WHEN NOT MATCHED THEN
            INSERT ( TENANT_ID
                    ,ACTIVITY_CODE
                    ,LANGUAGE_CD
                    ,CODE_NAME
                    ,LOCAL_CREATE_DTM
                    ,LOCAL_UPDATE_DTM
                    ,CREATE_USER_ID
                    ,UPDATE_USER_ID
                    ,SYSTEM_CREATE_DTM
                    ,SYSTEM_UPDATE_DTM
                )
            VALUES ( id.TENANT_ID
                    ,id.ACTIVITY_CODE
                    ,id.LANGUAGE_CD
                    ,id.CODE_NAME
                    ,NOW()
                    ,NOW()
                    ,id.UPDATE_USER_ID
                    ,id.UPDATE_USER_ID
                    ,NOW()
                    ,NOW()
                )
        ;

    END IF;
    
    COMMIT;
    O_MSG = SELECT 'OK' RETURN_CODE, 'Successfully Saved.' RETURN_MSG FROM DUMMY;
END;