PROCEDURE DP_PD_ACTIVITY_MAPPING_SAVE_PROC (		
    IN  I_TABLE DP_PD_ACTIVITY_MAPPING_TYPE,		
    OUT O_MSG PG_VP_VENDOR_POOL_PROC_OUT_TYPE		
)
LANGUAGE SQLSCRIPT		
SQL SECURITY INVOKER		
		
AS
BEGIN

    DECLARE  var_commit  NVARCHAR(100) := 'COMMIT';
	DECLARE var_rollback NVARCHAR(100) := 'ROLLBACK';
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		EXEC (:var_rollback);
		O_MSG = SELECT  'NG' RETURN_CODE, ::SQL_ERROR_CODE||'-'||::SQL_ERROR_MESSAGE RETURN_MSG FROM  DUMMY;
	END;
		
    MERGE INTO DP_PD_ACTIVITY_MAPPING AM
        USING :I_TABLE
        ON ( AM.TENANT_ID = :I_TABLE.TENANT_ID
             AND AM.COMPANY_CODE = :I_TABLE.COMPANY_CODE
             AND AM.ORG_TYPE_CODE = :I_TABLE.ORG_TYPE_CODE
             AND AM.ORG_CODE = :I_TABLE.ORG_CODE
             AND AM.ACTIVITY_CODE = :I_TABLE.ACTIVITY_CODE
             AND AM.PRODUCT_ACTIVITY_CODE = :I_TABLE.PRODUCT_ACTIVITY_CODE
             AND :I_TABLE.CRUD_TYPE_CODE <> 'D' )

    WHEN MATCHED THEN
        UPDATE
        SET  AM.ACTIVITY_CODE = IFNULL(:I_TABLE.UPDATE_ACTIVITY_CODE, AM.ACTIVITY_CODE)
            ,AM.PRODUCT_ACTIVITY_CODE = IFNULL(:I_TABLE.UPDATE_PRODUCT_ACTIVITY_CODE, AM.PRODUCT_ACTIVITY_CODE)
            ,AM.ACTIVITY_DEPENDENCY_CODE = :I_TABLE.ACTIVITY_DEPENDENCY_CODE
            ,AM.ACTIVE_FLAG = :I_TABLE.ACTIVE_FLAG
            ,AM.LOCAL_UPDATE_DTM = NOW()
            ,AM.UPDATE_USER_ID = :I_TABLE.UPDATE_USER_ID
            ,AM.SYSTEM_UPDATE_DTM = NOW()

    WHEN NOT MATCHED THEN
        INSERT ( TENANT_ID
                ,COMPANY_CODE
                ,ORG_TYPE_CODE
                ,ORG_CODE
                ,ACTIVITY_CODE
                ,PRODUCT_ACTIVITY_CODE
                ,ACTIVITY_DEPENDENCY_CODE
                ,ACTIVE_FLAG
                ,LOCAL_CREATE_DTM
                ,LOCAL_UPDATE_DTM
                ,CREATE_USER_ID
                ,UPDATE_USER_ID
                ,SYSTEM_CREATE_DTM
                ,SYSTEM_UPDATE_DTM
               )
        VALUES ( :I_TABLE.TENANT_ID
                ,:I_TABLE.COMPANY_CODE
                ,:I_TABLE.ORG_TYPE_CODE
                ,:I_TABLE.ORG_CODE
                ,:I_TABLE.ACTIVITY_CODE
                ,:I_TABLE.PRODUCT_ACTIVITY_CODE
                ,:I_TABLE.ACTIVITY_DEPENDENCY_CODE
                ,:I_TABLE.ACTIVE_FLAG
                ,NOW()
                ,NOW()
                ,:I_TABLE.UPDATE_USER_ID
                ,:I_TABLE.UPDATE_USER_ID		
                ,NOW()
                ,NOW()
               )
    ;

    MERGE INTO DP_PD_ACTIVITY_MAPPING AM
        USING :I_TABLE
        ON ( AM.TENANT_ID = :I_TABLE.TENANT_ID
             AND AM.COMPANY_CODE = :I_TABLE.COMPANY_CODE
             AND AM.ORG_TYPE_CODE = :I_TABLE.ORG_TYPE_CODE
             AND AM.ORG_CODE = :I_TABLE.ORG_CODE
             AND AM.ACTIVITY_CODE = :I_TABLE.ACTIVITY_CODE
             AND AM.PRODUCT_ACTIVITY_CODE = :I_TABLE.PRODUCT_ACTIVITY_CODE
             AND :I_TABLE.CRUD_TYPE_CODE = 'D' )		
		
    WHEN MATCHED THEN
        DELETE
    ;
		
    EXEC (:var_commit);
    O_MSG = SELECT 'OK' RETURN_CODE, 'Successfully Saved.' RETURN_MSG FROM DUMMY;
END;