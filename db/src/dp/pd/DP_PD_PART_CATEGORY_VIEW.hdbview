VIEW DP_PD_PART_CATEGORY_VIEW
/* ( i_tenant_id NVARCHAR(5), i_category_group_code NVARCHAR(30), i_active_flag BOOLEAN)  */
 AS
SELECT X.NODE_ID
      ,X.PARENT_ID
      ,X.TENANT_ID
      ,X.CATEGORY_GROUP_CODE
      ,X.CATEGORY_CODE
      ,X.CATEGORY_GROUP_NAME
      ,X.CATEGORY_NAME
      ,X.PARENT_CATEGORY_CODE
      ,X.SEQUENCE
      ,X.active_flag
      ,X.update_user_id
      ,X.local_update_dtm
--      ,SUBSTR(IFNULL(X.PATH,'-- '), 3) AS PATH
      ,X.PATH
      ,X.PATH_NAME
      ,X.HIERARCHY_RANK
      ,X.HIERARCHY_TREE_SIZE
      ,X.HIERARCHY_PARENT_RANK
      ,X.HIERARCHY_ROOT_RANK 
      ,X.HIERARCHY_LEVEL - 1 AS HIERARCHY_LEVEL
      ,CASE X.HIERARCHY_TREE_SIZE WHEN 1 THEN 'leaf' ELSE 'expanded' END AS DRILL_STATE

 FROM HIERARCHY_ANCESTORS_AGGREGATE (
  SOURCE HIERARCHY (
    SOURCE (
      SELECT M.category_code AS NODE_ID
            ,M.parent_category_code AS PARENT_ID
            ,M.*
            ,L.CODE_NAME AS CATEGORY_NAME
            ,L.LANGUAGE_CD
            ,CG.code_name AS CATEGORY_GROUP_NAME
            ,(SELECT CODE_NAME 
                FROM DP_PD_PART_CATEGORY_LNG 
               WHERE TENANT_ID = M.TENANT_ID 
            	 AND CATEGORY_CODE = M.PARENT_CATEGORY_CODE 
            	 AND CATEGORY_GROUP_CODE = M.CATEGORY_GROUP_CODE
            	 AND LANGUAGE_CD = 'KO') AS PARENT_CATEGORY_NAME
        FROM DP_PD_PART_CATEGORY M
			LEFT join ( select * from DP_PD_PART_CATEGORY_LNG where TENANT_ID = 'L2101' ) L
			on M.TENANT_ID = L.TENANT_ID AND M.CATEGORY_GROUP_CODE = L.CATEGORY_GROUP_CODE AND M.CATEGORY_CODE = L.CATEGORY_CODE AND L.LANGUAGE_CD='KO'
		    left join (select code, code_name
			        from CM_CODE_LNG 
			        where TENANT_ID = 'L2101' AND group_code='DP_PD_CATEGORY_GROUP' and LANGUAGE_CD='KO' ) CG
			on M.CATEGORY_GROUP_CODE = CG.CODE 
       WHERE m.tenant_id = 'L2101'
	     AND m.category_group_code = 'CO'
    )
    START WHERE PARENT_CATEGORY_CODE = '@TOP'
    SIBLING ORDER BY PARENT_ID, SEQUENCE
  )
  MEASURES (
	STRING_AGG(NODE_ID, '/') AS PATH, 
	STRING_AGG(CATEGORY_NAME, ' > ') AS PATH_NAME
  )
 ) X
--  where X.active_flag = false