/************************************************
  1. namespace
  - 모듈코드 소문자로 작성
  - 소모듈 존재시 대모듈.소모듈 로 작성
  2. entity
  - 대문자로 작성
  - 테이블명 생성을 고려하여 '_' 추가
  3. 컬럼(속성)
  - 소문자로 작성
  4. .hdbview, .hdbfunction 등으로 이미 생성된 DB Object 사용시
  entity 위에 @cds.persistence.exists 명시  
  
  5. namespace : dp
  6. Procedure  : DP_IM_SAVE_IDEA_PROC
  7. Procedure description : Idea CU 저장

  8. history
  -. 2021.01.22 :
  -.  
*************************************************/
PROCEDURE DP_IM_SAVE_IDEA_PROC (
    IN I_SAVE_TAB TABLE (TENANT_ID NVARCHAR(5), 
                           COMPANY_CODE NVARCHAR(10),
                           IDEA_NUMBER NVARCHAR(10),
                           IDEA_TITLE NVARCHAR(100),
                           IDEA_PROGRESS_STATUS_CODE NVARCHAR(30),

                           SUPPLIER_CODE NVARCHAR(10),
                           USER_ID NVARCHAR(255),
                           BIZUNIT_CODE NVARCHAR(10),
                           IDEA_PRODUCT_GROUP_CODE NVARCHAR(30),
                           IDEA_TYPE_CODE NVARCHAR(30),
                           
                           IDEA_PERIOD_CODE NVARCHAR(30),
                           IDEA_MANAGER_EMPNO NVARCHAR(30),
                           IDEA_PART_DESC NVARCHAR(100),
                           CURRENT_PROPOSAL_CONTENTS NVARCHAR(500),
                           CHANGE_PROPOSAL_CONTENTS NVARCHAR(500),

                           IDEA_CONTENTS NCLOB,
                           ATTCH_GROUP_NUMBER NVARCHAR(100),
                           MATERIAL_CODE NVARCHAR(40),
                           PURCHASING_UOM_CODE NVARCHAR(3),
                           CURRENCY_CODE NVARCHAR(3),
                           
                           VI_AMOUNT DECIMAL,
                           MONTHLY_MTLMOB_QUANTITY DECIMAL,
                           MONTHLY_PURCHASING_AMOUNT DECIMAL,
                           ANNUAL_PURCHASING_AMOUNT DECIMAL,
                           PERFORM_CONTENTS NVARCHAR(500),

                           CUD_TYPE_CODE NVARCHAR(1)
                           ),
    OUT O_RETURN_TAB TABLE (RETURN_CODE NVARCHAR(1), RETURN_MSG_CODE NVARCHAR(30), RETURN_MSG NVARCHAR(1000))
)
    LANGUAGE SQLSCRIPT
    SQL SECURITY INVOKER
AS
BEGIN

    /* Declare Variables */
    DECLARE V_IDX INTEGER;
    DECLARE V_COMMIT  NVARCHAR(100) := 'COMMIT';
	DECLARE V_ROLLBACK NVARCHAR(100) := 'ROLLBACK';
    DECLARE V_IDEA_SEQUENCE NVARCHAR(10);
    DECLARE v_cnt BIGINT;

    DECLARE v_LOCAL_TEMP_STATUS TABLE(
                        TENANT_ID NVARCHAR(5), 
                        COMPANY_CODE NVARCHAR(10),
                        IDEA_NUMBER NVARCHAR(10),
                        IDEA_PROGRESS_STATUS_CODE NVARCHAR(30),
                        STATUS_CHANGE_COMMENT NVARCHAR(100),
                        USER_ID NVARCHAR(255) 
                );


    /*저장데이터 커서*/
    DECLARE CURSOR CUR_DATA FOR
    SELECT A.TENANT_ID,
		   A.COMPANY_CODE,
		   A.IDEA_NUMBER,
		   A.IDEA_TITLE,
		   A.IDEA_PROGRESS_STATUS_CODE,
		   
		   A.SUPPLIER_CODE,
		   A.USER_ID,
		   A.BIZUNIT_CODE,
		   A.IDEA_PRODUCT_GROUP_CODE,
		   A.IDEA_TYPE_CODE,
		   
		   A.IDEA_PERIOD_CODE,
		   A.IDEA_MANAGER_EMPNO,
		   A.IDEA_PART_DESC,
		   A.CURRENT_PROPOSAL_CONTENTS,
		   A.CHANGE_PROPOSAL_CONTENTS,
		   
		   A.IDEA_CONTENTS,
		   A.ATTCH_GROUP_NUMBER,
		   A.MATERIAL_CODE,
		   A.PURCHASING_UOM_CODE,
		   A.CURRENCY_CODE,
		   
		   A.VI_AMOUNT,
		   A.MONTHLY_MTLMOB_QUANTITY,
		   A.MONTHLY_PURCHASING_AMOUNT,
		   A.ANNUAL_PURCHASING_AMOUNT,
           A.PERFORM_CONTENTS,
           
		   A.CUD_TYPE_CODE
    FROM   :I_SAVE_TAB A;

    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
        EXEC (:V_ROLLBACK);
       :O_RETURN_TAB.INSERT(('E', 'STT',::SQL_ERROR_CODE||'-'||::SQL_ERROR_MESSAGE),1);
    END;
    
    
    FOR REC_DATA AS CUR_DATA DO
        
        DECLARE EXIT HANDLER FOR SQLEXCEPTION
        BEGIN
            EXEC (:V_ROLLBACK);
        :O_RETURN_TAB.INSERT(('E', 'VLD',::SQL_ERROR_CODE||'-'||::SQL_ERROR_MESSAGE),1);
        END;
		
        /* validation 체크 */
        IF ((:I_SAVE_TAB.TENANT_ID[1] IS NULL) OR (:I_SAVE_TAB.TENANT_ID[1] = '') ) THEN
           :O_RETURN_TAB.INSERT(('E', 'EDP','This is no value(TENANT_ID)'),1);
           RETURN;
        END IF;
        IF ((:I_SAVE_TAB.COMPANY_CODE[1] IS NULL) OR (:I_SAVE_TAB.COMPANY_CODE[1] = '') ) THEN
           :O_RETURN_TAB.INSERT(('E', 'EDP','This is no value(COMPANY_CODE)'),1);
           RETURN;
        END IF;
        IF ((:I_SAVE_TAB.IDEA_NUMBER[1] IS NULL) OR (:I_SAVE_TAB.IDEA_NUMBER[1] = '') ) THEN
            :O_RETURN_TAB.INSERT(('E', 'EDP','This is no value(IDEA_NUMBER)'),1);
            RETURN;
        END IF;
        IF ((:I_SAVE_TAB.IDEA_TITLE[1] IS NULL) OR (:I_SAVE_TAB.IDEA_TITLE[1] = '') ) THEN
            :O_RETURN_TAB.INSERT(('E', 'EDP','This is no value(IDEA_TITLE)'),1);
            RETURN;
        END IF;
        IF ((:I_SAVE_TAB.IDEA_PROGRESS_STATUS_CODE[1] IS NULL) OR (:I_SAVE_TAB.IDEA_PROGRESS_STATUS_CODE[1] = '') ) THEN
           :O_RETURN_TAB.INSERT(('E', 'EDP','This is no value(IDEA_PROGRESS_STATUS_CODE)'),1);
           RETURN;
        END IF;



        IF ((:I_SAVE_TAB.SUPPLIER_CODE[1] IS NULL) OR (:I_SAVE_TAB.SUPPLIER_CODE[1] = '') ) THEN
           :O_RETURN_TAB.INSERT(('E', 'EDP','This is no value(SUPPLIER_CODE)'),1);
           RETURN;
        END IF;
        IF ((:I_SAVE_TAB.USER_ID[1] IS NULL) OR (:I_SAVE_TAB.USER_ID[1] = '') ) THEN
           :O_RETURN_TAB.INSERT(('E', 'EDP','This is no value(USER_ID)'),1);
           RETURN;
        END IF;
        IF ((:I_SAVE_TAB.IDEA_PRODUCT_GROUP_CODE[1] IS NULL) OR (:I_SAVE_TAB.IDEA_PRODUCT_GROUP_CODE[1] = '') ) THEN
           :O_RETURN_TAB.INSERT(('E', 'EDP','This is no value(IDEA_PRODUCT_GROUP_CODE)'),1);
           RETURN;
        END IF;
        IF ((:I_SAVE_TAB.IDEA_TYPE_CODE[1] IS NULL) OR (:I_SAVE_TAB.IDEA_TYPE_CODE[1] = '') ) THEN
           :O_RETURN_TAB.INSERT(('E', 'EDP','This is no value(IDEA_TYPE_CODE)'),1);
           RETURN;
        END IF;
        IF ((:I_SAVE_TAB.IDEA_PERIOD_CODE[1] IS NULL) OR (:I_SAVE_TAB.IDEA_PERIOD_CODE[1] = '') ) THEN
           :O_RETURN_TAB.INSERT(('E', 'EDP','This is no value(IDEA_PERIOD_CODE)'),1);
           RETURN;
        END IF;
        IF ((:I_SAVE_TAB.CUD_TYPE_CODE[1] IS NULL) OR (:I_SAVE_TAB.CUD_TYPE_CODE[1] = '') ) THEN
           :O_RETURN_TAB.INSERT(('E', 'EDP','This is no value(CUD_TYPE_CODE)'),1);
           RETURN;
        END IF;

        



        
        /*생성*/
        IF ( :I_SAVE_TAB.CUD_TYPE_CODE[1] = 'C' ) THEN
            BEGIN
                DECLARE EXIT HANDLER FOR SQLEXCEPTION
                BEGIN
                    EXEC (:V_ROLLBACK);
                :O_RETURN_TAB.INSERT(('E', 'INS',::SQL_ERROR_CODE||'-'||::SQL_ERROR_MESSAGE),1);
                END;
                
                /************************************************
                신규 채번
                ************************************************/
                SELECT TO_NCHAR(NOW(), 'YYMM') || LPAD(DP_IM_IDEA_NUMBER_SEQ.NEXTVAL, 6, '0')
                INTO V_IDEA_SEQUENCE
                FROM DUMMY;
                
                
                /* Insert DP_IM_SUPPLIER_IDEA */
                INSERT INTO DP_IM_SUPPLIER_IDEA
                (
                    TENANT_ID,
                    COMPANY_CODE,
                    IDEA_NUMBER,
                    IDEA_TITLE,
                    IDEA_PROGRESS_STATUS_CODE,

                    IDEA_DATE,
                    SUPPLIER_CODE,
                    IDEA_CREATE_USER_ID,
                    BIZUNIT_CODE,
                    IDEA_PRODUCT_GROUP_CODE,

                    IDEA_TYPE_CODE,
                    IDEA_PERIOD_CODE,
                    IDEA_MANAGER_EMPNO,
                    IDEA_PART_DESC,
                    CURRENT_PROPOSAL_CONTENTS,

                    CHANGE_PROPOSAL_CONTENTS,
                    IDEA_CONTENTS,
                    ATTCH_GROUP_NUMBER,
                    MATERIAL_CODE,
                    PURCHASING_UOM_CODE,

                    CURRENCY_CODE,
                    VI_AMOUNT,
                    MONTHLY_MTLMOB_QUANTITY,
                    MONTHLY_PURCHASING_AMOUNT,
                    ANNUAL_PURCHASING_AMOUNT,

                    PERFORM_CONTENTS,
                    LOCAL_CREATE_DTM,
                    LOCAL_UPDATE_DTM,
                    CREATE_USER_ID,
                    UPDATE_USER_ID,

                    SYSTEM_CREATE_DTM,
                    SYSTEM_UPDATE_DTM
                )
                VALUES 
                (
                    REC_DATA.TENANT_ID,
                    REC_DATA.COMPANY_CODE,
                    :V_IDEA_SEQUENCE,
                    REC_DATA.IDEA_TITLE,
                    REC_DATA.IDEA_PROGRESS_STATUS_CODE,
                    
                    current_date,
                    REC_DATA.SUPPLIER_CODE,
                    REC_DATA.USER_ID,
                    REC_DATA.BIZUNIT_CODE,
                    REC_DATA.IDEA_PRODUCT_GROUP_CODE,
                    
                    REC_DATA.IDEA_TYPE_CODE,
                    REC_DATA.IDEA_PERIOD_CODE,
                    REC_DATA.IDEA_MANAGER_EMPNO,
                    REC_DATA.IDEA_PART_DESC,
                    REC_DATA.CURRENT_PROPOSAL_CONTENTS,
                    
                    REC_DATA.CHANGE_PROPOSAL_CONTENTS,
                    REC_DATA.IDEA_CONTENTS,
                    REC_DATA.ATTCH_GROUP_NUMBER,
                    REC_DATA.MATERIAL_CODE,
                    REC_DATA.PURCHASING_UOM_CODE,

                    REC_DATA.CURRENCY_CODE,
                    REC_DATA.VI_AMOUNT,
                    REC_DATA.MONTHLY_MTLMOB_QUANTITY,
                    REC_DATA.MONTHLY_PURCHASING_AMOUNT,
                    REC_DATA.ANNUAL_PURCHASING_AMOUNT,

                    REC_DATA.PERFORM_CONTENTS,                    
                    current_date,
                    current_date,                    
                    REC_DATA.USER_ID,
                    REC_DATA.USER_ID,

                    current_date,
                    current_date
                );
                EXEC (:V_COMMIT);
                :O_RETURN_TAB.INSERT(('S', 'SUC',:V_IDEA_SEQUENCE),1);
                RETURN;

            END;
            
        
        
        /*SUBMIT*/
        ELSEIF ( :I_SAVE_TAB.CUD_TYPE_CODE[1] = 'R' ) THEN
            BEGIN
                DECLARE EXIT HANDLER FOR SQLEXCEPTION
                BEGIN
                    EXEC (:V_ROLLBACK);
                :O_RETURN_TAB.INSERT(('E', 'SUB',::SQL_ERROR_CODE||'-'||::SQL_ERROR_MESSAGE),1);
                END;

                /************************************************
                기존데이터 체크
                ************************************************/
                SELECT COUNT(*)
                INTO   v_cnt
                FROM   DP_IM_SUPPLIER_IDEA DI
                WHERE  DI.TENANT_ID = REC_DATA.TENANT_ID
                AND    DI.COMPANY_CODE = REC_DATA.COMPANY_CODE
                AND    DI.IDEA_NUMBER = REC_DATA.IDEA_NUMBER;

                IF ( v_cnt > 0  ) THEN
                    /* 기존 저장을 제출 경우  */
                    UPDATE DP_IM_SUPPLIER_IDEA
                    SET 
                        IDEA_TITLE                    =     REC_DATA.IDEA_TITLE,
                        IDEA_PROGRESS_STATUS_CODE     =     REC_DATA.IDEA_PROGRESS_STATUS_CODE,
                        SUPPLIER_CODE                 =     REC_DATA.SUPPLIER_CODE,
                        IDEA_CREATE_USER_ID           =     REC_DATA.USER_ID,					
                        BIZUNIT_CODE                  =     REC_DATA.BIZUNIT_CODE,
                        
                        IDEA_PRODUCT_GROUP_CODE       =     REC_DATA.IDEA_PRODUCT_GROUP_CODE,	
                        IDEA_TYPE_CODE                =     REC_DATA.IDEA_TYPE_CODE,
                        IDEA_PERIOD_CODE              =     REC_DATA.IDEA_PERIOD_CODE,
                        IDEA_MANAGER_EMPNO            =     REC_DATA.IDEA_MANAGER_EMPNO,			
                        IDEA_PART_DESC                =     REC_DATA.IDEA_PART_DESC,
                        
                        CURRENT_PROPOSAL_CONTENTS     =     REC_DATA.CURRENT_PROPOSAL_CONTENTS,
                        CHANGE_PROPOSAL_CONTENTS      =     REC_DATA.CHANGE_PROPOSAL_CONTENTS,
                        IDEA_CONTENTS                 =     REC_DATA.IDEA_CONTENTS,
                        ATTCH_GROUP_NUMBER            =     REC_DATA.ATTCH_GROUP_NUMBER,
                        MATERIAL_CODE				  =     REC_DATA.MATERIAL_CODE,
                        
                        PURCHASING_UOM_CODE           =     REC_DATA.PURCHASING_UOM_CODE,
                        CURRENCY_CODE                 =     REC_DATA.CURRENCY_CODE,
                        VI_AMOUNT                     =     REC_DATA.VI_AMOUNT,
                        MONTHLY_MTLMOB_QUANTITY       =     REC_DATA.MONTHLY_MTLMOB_QUANTITY,
                        MONTHLY_PURCHASING_AMOUNT     =     REC_DATA.MONTHLY_PURCHASING_AMOUNT,
                        
                        ANNUAL_PURCHASING_AMOUNT      =     REC_DATA.ANNUAL_PURCHASING_AMOUNT,
                        PERFORM_CONTENTS              =     REC_DATA.PERFORM_CONTENTS,     					
                        LOCAL_UPDATE_DTM              =     current_date,												  
                        UPDATE_USER_ID                =     REC_DATA.USER_ID,
                        SYSTEM_UPDATE_DTM             =     current_date
                    WHERE TENANT_ID = REC_DATA.TENANT_ID
                    AND COMPANY_CODE = REC_DATA.COMPANY_CODE
                    AND IDEA_NUMBER = REC_DATA.IDEA_NUMBER;

                    V_IDEA_SEQUENCE :=  REC_DATA.IDEA_NUMBER;
                ELSE
                    /************************************************
                    신규 채번
                    ************************************************/
                    SELECT TO_NCHAR(NOW(), 'YYMM') || LPAD(DP_IM_IDEA_NUMBER_SEQ.NEXTVAL, 6, '0')
                    INTO V_IDEA_SEQUENCE
                    FROM DUMMY;
                    
                    
                    /* 신규 저장 및 제출 동시일 경우  */
                    INSERT INTO DP_IM_SUPPLIER_IDEA
                    (
                        TENANT_ID,
                        COMPANY_CODE,
                        IDEA_NUMBER,
                        IDEA_TITLE,
                        IDEA_PROGRESS_STATUS_CODE,

                        IDEA_DATE,
                        SUPPLIER_CODE,
                        IDEA_CREATE_USER_ID,
                        BIZUNIT_CODE,
                        IDEA_PRODUCT_GROUP_CODE,

                        IDEA_TYPE_CODE,
                        IDEA_PERIOD_CODE,
                        IDEA_MANAGER_EMPNO,
                        IDEA_PART_DESC,
                        CURRENT_PROPOSAL_CONTENTS,

                        CHANGE_PROPOSAL_CONTENTS,
                        IDEA_CONTENTS,
                        ATTCH_GROUP_NUMBER,
                        MATERIAL_CODE,
                        PURCHASING_UOM_CODE,

                        CURRENCY_CODE,
                        VI_AMOUNT,
                        MONTHLY_MTLMOB_QUANTITY,
                        MONTHLY_PURCHASING_AMOUNT,
                        ANNUAL_PURCHASING_AMOUNT,

                        PERFORM_CONTENTS,
                        LOCAL_CREATE_DTM,
                        LOCAL_UPDATE_DTM,
                        CREATE_USER_ID,
                        UPDATE_USER_ID,

                        SYSTEM_CREATE_DTM,
                        SYSTEM_UPDATE_DTM
                    )
                    VALUES 
                    (
                        REC_DATA.TENANT_ID,
                        REC_DATA.COMPANY_CODE,
                        :V_IDEA_SEQUENCE,
                        REC_DATA.IDEA_TITLE,
                        REC_DATA.IDEA_PROGRESS_STATUS_CODE,
                        
                        current_date,
                        REC_DATA.SUPPLIER_CODE,
                        REC_DATA.USER_ID,
                        REC_DATA.BIZUNIT_CODE,
                        REC_DATA.IDEA_PRODUCT_GROUP_CODE,
                        
                        REC_DATA.IDEA_TYPE_CODE,
                        REC_DATA.IDEA_PERIOD_CODE,
                        REC_DATA.IDEA_MANAGER_EMPNO,
                        REC_DATA.IDEA_PART_DESC,
                        REC_DATA.CURRENT_PROPOSAL_CONTENTS,
                        
                        REC_DATA.CHANGE_PROPOSAL_CONTENTS,
                        REC_DATA.IDEA_CONTENTS,
                        REC_DATA.ATTCH_GROUP_NUMBER,
                        REC_DATA.MATERIAL_CODE,
                        REC_DATA.PURCHASING_UOM_CODE,

                        REC_DATA.CURRENCY_CODE,
                        REC_DATA.VI_AMOUNT,
                        REC_DATA.MONTHLY_MTLMOB_QUANTITY,
                        REC_DATA.MONTHLY_PURCHASING_AMOUNT,
                        REC_DATA.ANNUAL_PURCHASING_AMOUNT,

                        REC_DATA.PERFORM_CONTENTS,                    
                        current_date,
                        current_date,                    
                        REC_DATA.USER_ID,
                        REC_DATA.USER_ID,

                        current_date,
                        current_date
                    );
                END IF;


                /*
                * SUBMIT 프로시저 호출
                */
                INSERT INTO :v_LOCAL_TEMP_STATUS (TENANT_ID, COMPANY_CODE, IDEA_NUMBER, IDEA_PROGRESS_STATUS_CODE, STATUS_CHANGE_COMMENT, USER_ID)
                SELECT REC_DATA.TENANT_ID, REC_DATA.COMPANY_CODE, :V_IDEA_SEQUENCE, REC_DATA.IDEA_PROGRESS_STATUS_CODE, 'SUBMIT',   REC_DATA.USER_ID
                FROM DUMMY;
                
                CALL DP_IM_CREATE_IDEA_STATUS_PROC(I_STATUS_TAB => :v_LOCAL_TEMP_STATUS , O_RETURN_TAB => :O_RETURN_TAB);

                EXEC (:V_COMMIT);
                :O_RETURN_TAB.INSERT(('S', 'SUU',REC_DATA.IDEA_NUMBER),2);
                RETURN;

            END;
            
        
        /*삭제*/
        ELSEIF ( :I_SAVE_TAB.CUD_TYPE_CODE[1] = 'D' ) THEN
        
            BEGIN
                DELETE FROM DP_IM_SUPPLIER_IDEA
                WHERE TENANT_ID = REC_DATA.TENANT_ID
                AND COMPANY_CODE = REC_DATA.COMPANY_CODE
                AND IDEA_NUMBER = REC_DATA.IDEA_NUMBER;

                EXEC (:V_COMMIT);
                :O_RETURN_TAB.INSERT(('S', 'SUD',REC_DATA.IDEA_NUMBER),1);
                RETURN;

            END;

        
        /*기타 ( 수정 ) */
        ELSE
            BEGIN
                UPDATE DP_IM_SUPPLIER_IDEA
                SET 
                    IDEA_TITLE                    =     REC_DATA.IDEA_TITLE,
                    IDEA_PROGRESS_STATUS_CODE     =     REC_DATA.IDEA_PROGRESS_STATUS_CODE,
                    SUPPLIER_CODE                 =     REC_DATA.SUPPLIER_CODE,
                    IDEA_CREATE_USER_ID           =     REC_DATA.USER_ID,					
                    BIZUNIT_CODE                  =     REC_DATA.BIZUNIT_CODE,
					
                    IDEA_PRODUCT_GROUP_CODE       =     REC_DATA.IDEA_PRODUCT_GROUP_CODE,	
                    IDEA_TYPE_CODE                =     REC_DATA.IDEA_TYPE_CODE,
                    IDEA_PERIOD_CODE              =     REC_DATA.IDEA_PERIOD_CODE,
                    IDEA_MANAGER_EMPNO            =     REC_DATA.IDEA_MANAGER_EMPNO,			
                    IDEA_PART_DESC                =     REC_DATA.IDEA_PART_DESC,
					
                    CURRENT_PROPOSAL_CONTENTS     =     REC_DATA.CURRENT_PROPOSAL_CONTENTS,
                    CHANGE_PROPOSAL_CONTENTS      =     REC_DATA.CHANGE_PROPOSAL_CONTENTS,
                    IDEA_CONTENTS                 =     REC_DATA.IDEA_CONTENTS,
                    ATTCH_GROUP_NUMBER            =     REC_DATA.ATTCH_GROUP_NUMBER,
                    MATERIAL_CODE				  =     REC_DATA.MATERIAL_CODE,
					
                    PURCHASING_UOM_CODE           =     REC_DATA.PURCHASING_UOM_CODE,
                    CURRENCY_CODE                 =     REC_DATA.CURRENCY_CODE,
                    VI_AMOUNT                     =     REC_DATA.VI_AMOUNT,
                    MONTHLY_MTLMOB_QUANTITY       =     REC_DATA.MONTHLY_MTLMOB_QUANTITY,
                    MONTHLY_PURCHASING_AMOUNT     =     REC_DATA.MONTHLY_PURCHASING_AMOUNT,
					
                    ANNUAL_PURCHASING_AMOUNT      =     REC_DATA.ANNUAL_PURCHASING_AMOUNT,
                    PERFORM_CONTENTS              =     REC_DATA.PERFORM_CONTENTS,     					
                    LOCAL_UPDATE_DTM              =     current_date,												  
                    UPDATE_USER_ID                =     REC_DATA.USER_ID,
                    SYSTEM_UPDATE_DTM             =     current_date
                WHERE TENANT_ID = REC_DATA.TENANT_ID
                AND COMPANY_CODE = REC_DATA.COMPANY_CODE
                AND IDEA_NUMBER = REC_DATA.IDEA_NUMBER;

                EXEC (:V_COMMIT);
                :O_RETURN_TAB.INSERT(('S', 'SUU',REC_DATA.IDEA_NUMBER),1);
                RETURN;

            END;
        END IF;
    
    END FOR;
  /*  
    EXEC (:V_COMMIT);
    :O_RETURN_TAB.INSERT(('S', 'SUC','SUCCESS'),1);
    */
END