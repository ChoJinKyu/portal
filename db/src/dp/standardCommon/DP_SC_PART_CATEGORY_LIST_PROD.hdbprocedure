PROCEDURE DP_SC_PART_CATEGORY_LIST_PROC (
    IN I_TENANT_ID NVARCHAR(5),
    IN I_ORG_TYPE_CODE NVARCHAR(30),
    IN I_ORG_CODE NVARCHAR(10),
    IN I_STATUS_CODE NVARCHAR(10),
    OUT O_CATEGORY_TABLE TABLE(
        HIERARCHY_RANK BIGINT,
        HIERARCHY_LEVEL INTEGER,
        CATEGORY_CODE NVARCHAR(200),
        PARENT_CATEGORY_CODE NVARCHAR(200),
        SEQ DECIMAL,
        CATEGORY_NAME NVARCHAR(2000),
        STATUS_CODE NVARCHAR(10),
        AUTH_CODE NVARCHAR )
)
LANGUAGE SQLSCRIPT
SQL SECURITY INVOKER 

AS
BEGIN

    SELECT IFNULL(:I_TENANT_ID, 'L1100') INTO I_TENANT_ID FROM DUMMY;
    SELECT IFNULL(:I_ORG_TYPE_CODE, 'AU') INTO I_ORG_TYPE_CODE FROM DUMMY;
    SELECT IFNULL(:I_ORG_CODE, 'WWZ') INTO I_ORG_CODE FROM DUMMY;
    SELECT IFNULL(:I_STATUS_CODE, 'Active') INTO I_STATUS_CODE FROM DUMMY;

    O_CATEGORY_TABLE = 
        SELECT  ca.hierarchy_rank,			
                ca.hierarchy_level,			
                ca.category_code,			
                ca.parent_category_code,			
                ca.seq,			
                ca.category_name,			
                ca.status_code,			
                STRING_AGG( au.auth_code, ',')			
                FROM HIERARCHY (			
                        SOURCE (
                            SELECT  tenant_id,
                                        org_type_code,			
                                        org_code,			
                                        category_code,			
                                        parent_category_code,			
                                        seq,			
                                        category_name,			
                                        status_code,                        			
                                        HIERARCHY_COMPOSITE_ID(tenant_id,org_type_code,org_code,parent_category_code) as parent_id, 			
                                        HIERARCHY_COMPOSITE_ID(tenant_id,org_type_code,org_code,category_code) as node_id			
                                FROM dp_sc_part_category
                                WHERE tenant_id = :I_TENANT_ID AND org_type_code = :I_ORG_TYPE_CODE AND org_code = :I_ORG_CODE AND status_code = :I_STATUS_CODE			
                        )
                        START WHERE parent_category_code = ''
                    ) ca			
                    LEFT JOIN DP_SC_PART_CATEGORY_AUTH au ON ( ca.tenant_id = au.tenant_id AND ca.org_type_code = au.org_type_code AND ca.org_code = au.org_code AND ca.category_code = au.category_code )			
        GROUP BY ca.hierarchy_rank, ca.hierarchy_level,ca.category_code,ca.parent_category_code,ca.seq,ca.category_name,ca.status_code			
        ORDER BY ca.HIERARCHY_RANK			
        ;			
				
END