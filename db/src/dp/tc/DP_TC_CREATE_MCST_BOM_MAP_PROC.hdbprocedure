PROCEDURE DP_TC_CREATE_MCST_BOM_MAP_PROC (IN I_TENANT_ID NVARCHAR(5)
                                         ,IN I_PROJECT_CODE NVARCHAR(30)
                                         ,IN I_MODEL_CODE NVARCHAR(40) 
                                         ,IN I_VERSION_NUMBER NVARCHAR(30)
                                         ,IN I_USER_ID NVARCHAR(255)                                                
                                         ,IN I_OLD_TBL TABLE(MATERIAL_CODE NVARCHAR(40)
                                                            )
                                         ,IN I_NEW_TBL TABLE(MATERIAL_CODE NVARCHAR(40)
                                                            ,CHANGE_REASON NVARCHAR(1000)
                                                            )
                                         ,IN I_DEPARTMENT_TYPE_CODE NVARCHAR(30)
                                         ,IN I_CREATOR_EMPNO NVARCHAR(30)
                                         ,IN I_ENG_CHANGE_NUMBER NVARCHAR(30)
                                         ,IN I_CHANGE_REASON NVARCHAR(1000)
                                         ,OUT O_MSG DP_TC_PROC_OUT_TYPE
)
LANGUAGE SQLSCRIPT
SQL SECURITY INVOKER 
/**************************************************************************
Scrum          : VI/재료비관리
Program Name   : DP_TC_CREATE_MCST_BOM_MAP_PROC
Creator        : Jeong Jeong Ho
Description    : 재료비 프로젝트 BOM Mapping 생성
History        : 2021-01-05 initial creation
***************************************************************************/
AS
BEGIN
    DECLARE v_mapping_id INT :=0;
          
    --AsIs(Old)자재코드
    DECLARE CURSOR old_mtl_cursor FOR
        SELECT *
          FROM :I_OLD_TBL;
          
    --ToBe(New)자재코드
    DECLARE CURSOR new_mtl_cursor FOR
        SELECT *
          FROM :I_NEW_TBL;          
    
    DECLARE param_error CONDITION FOR SQL_ERROR_CODE 10000;
    DECLARE txn_error CONDITION FOR SQL_ERROR_CODE 10001;
    DECLARE var_rollback NVARCHAR(100) := 'ROLLBACK';
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
        BEGIN
            EXEC (:var_rollback);
            --O_RETURN_CODE := ::SQL_ERROR_CODE;
            --O_RETURN_MSG := ::SQL_ERROR_MESSAGE;            
            O_MSG = SELECT 'NG' RETURN_CODE, ::SQL_ERROR_CODE || '-' || ::SQL_ERROR_MESSAGE RETURN_MSG FROM DUMMY;
        END;
  
    IF IFNULL(:I_USER_ID, '-1') = '-1' OR TRIM(:I_USER_ID ) = '' THEN
        SIGNAL param_error SET MESSAGE_TEXT = 'Param Error.(Please Check User Info)';
    END IF;
    
    --Mapping ID 채번
    BEGIN
        SELECT DP_TC_BOM_MAP_ID_SEQ.NEXTVAL
          INTO v_mapping_id
          FROM DUMMY;
    END;
    
    --Mapping Master 생성
    BEGIN
	    DECLARE EXIT HANDLER FOR SQLEXCEPTION
        BEGIN
        	SIGNAL txn_error SET MESSAGE_TEXT = 'Insert Mcst Project Part Map Mst Error.';
        END;
        
        INSERT
          INTO DP_TC_MCST_PROJECT_PART_MAP_MST(
          	   TENANT_ID
          	 , MAPPING_ID
          	 , DEPARTMENT_TYPE_CODE
          	 , CREATOR_EMPNO
          	 , ENG_CHANGE_NUMBER
          	 , CHANGE_REASON
          	 , LOCAL_CREATE_DTM
          	 , LOCAL_UPDATE_DTM
          	 , CREATE_USER_ID
          	 , UPDATE_USER_ID
          	 , SYSTEM_CREATE_DTM
          	 , SYSTEM_UPDATE_DTM
             ) VALUES (
               I_TENANT_ID
             , v_mapping_id
             , I_DEPARTMENT_TYPE_CODE
             , I_CREATOR_EMPNO
             , I_ENG_CHANGE_NUMBER
             , I_CHANGE_REASON
             , CURRENT_TIMESTAMP
             , CURRENT_TIMESTAMP
             , I_USER_ID
             , I_USER_ID
             , CURRENT_TIMESTAMP
             , CURRENT_TIMESTAMP
             );             	
    END;
    
    --Old Material Mapping Info Creation
    FOR loop_old_mtl AS old_mtl_cursor DO
        BEGIN
		    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	        BEGIN
	        	SIGNAL txn_error SET MESSAGE_TEXT = 'Insert Mcst Project Part Map Dtl(Old) Error.';
	        END;      
	        
            INSERT
              INTO DP_TC_MCST_PROJECT_PART_MAP_DTL(
              	   TENANT_ID
              	 , MAPPING_ID
              	 , CHANGE_INFO_CODE
              	 , MATERIAL_CODE
              	 , LOCAL_CREATE_DTM
              	 , LOCAL_UPDATE_DTM
              	 , CREATE_USER_ID
              	 , UPDATE_USER_ID
              	 , SYSTEM_CREATE_DTM
              	 , SYSTEM_UPDATE_DTM
                 ) VALUES (
                   I_TENANT_ID
                 , v_mapping_id
                 , 'Old'
                 , loop_old_mtl.MATERIAL_CODE
                 , CURRENT_TIMESTAMP
                 , CURRENT_TIMESTAMP
                 , I_USER_ID
                 , I_USER_ID
                 , CURRENT_TIMESTAMP
                 , CURRENT_TIMESTAMP
                 );
        END;
        
        --Update Mapping Id
        BEGIN
		    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	        BEGIN
	        	SIGNAL txn_error SET MESSAGE_TEXT = 'Update Mcst Project Part List(Old) Error.';
	        END;      
	        
            UPDATE DP_TC_MCST_PROJECT_PART_LIST
               SET MAPPING_ID = v_mapping_id
              	 , LOCAL_UPDATE_DTM = CURRENT_TIMESTAMP
              	 , UPDATE_USER_ID = I_USER_ID
              	 , SYSTEM_UPDATE_DTM = CURRENT_TIMESTAMP
             WHERE TENANT_ID = I_TENANT_ID
               AND PROJECT_CODE = I_PROJECT_CODE
               AND MODEL_CODE = I_MODEL_CODE
               AND VERSION_NUMBER = I_VERSION_NUMBER
               AND MATERIAL_CODE = loop_old_mtl.MATERIAL_CODE;
        END;
        
    END FOR;
    
    --New Material Mapping Info Creation
    FOR loop_new_mtl AS new_mtl_cursor DO
        BEGIN
		    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	        BEGIN
	        	SIGNAL txn_error SET MESSAGE_TEXT = 'Insert Mcst Project Part Map Dtl(New) Error.';
	        END;      
	        
            INSERT
              INTO DP_TC_MCST_PROJECT_PART_MAP_DTL(
              	   TENANT_ID
              	 , MAPPING_ID
              	 , CHANGE_INFO_CODE
              	 , MATERIAL_CODE
              	 , CHANGE_REASON
              	 , LOCAL_CREATE_DTM
              	 , LOCAL_UPDATE_DTM
              	 , CREATE_USER_ID
              	 , UPDATE_USER_ID
              	 , SYSTEM_CREATE_DTM
              	 , SYSTEM_UPDATE_DTM
                 ) VALUES (
                   I_TENANT_ID
                 , v_mapping_id
                 , 'New'
                 , loop_new_mtl.MATERIAL_CODE
                 , loop_new_mtl.CHANGE_REASON
                 , CURRENT_TIMESTAMP
                 , CURRENT_TIMESTAMP
                 , I_USER_ID
                 , I_USER_ID
                 , CURRENT_TIMESTAMP
                 , CURRENT_TIMESTAMP
                 );
        END;
        
        --Update Mapping Id
        BEGIN
		    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	        BEGIN
	        	SIGNAL txn_error SET MESSAGE_TEXT = 'Update Mcst Project Part List(New) Error.';
	        END;      
	        
            UPDATE DP_TC_MCST_PROJECT_PART_LIST
               SET MAPPING_ID = v_mapping_id
              	 , LOCAL_UPDATE_DTM = CURRENT_TIMESTAMP
              	 , UPDATE_USER_ID = I_USER_ID
              	 , SYSTEM_UPDATE_DTM = CURRENT_TIMESTAMP
             WHERE TENANT_ID = I_TENANT_ID
               AND PROJECT_CODE = I_PROJECT_CODE
               AND MODEL_CODE = I_MODEL_CODE
               AND VERSION_NUMBER = I_VERSION_NUMBER
               AND MATERIAL_CODE = loop_new_mtl.MATERIAL_CODE;
        END;
        
    END FOR;    
    
    --O_RETURN_CODE := 'OK';
    --O_RETURN_MSG := 'Success';
    O_MSG = SELECT 'OK' RETURN_CODE, 'Success' RETURN_MSG FROM DUMMY;
    
END;