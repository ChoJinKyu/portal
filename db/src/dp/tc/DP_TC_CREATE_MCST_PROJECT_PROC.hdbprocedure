PROCEDURE DP_TC_CREATE_MCST_PROJECT_PROC (IN I_TENANT_ID NVARCHAR(5)
                                         ,IN I_PROJECT_CODE NVARCHAR(30)
                                         ,IN I_MODEL_CODE NVARCHAR(40)
                                         ,IN I_MCST_CODE NVARCHAR(30)
                                         ,IN I_USER_ID NVARCHAR(255)
                                         ,OUT O_VERSION_NUMBER NVARCHAR(30)
                                         ,OUT O_RETURN_CODE NVARCHAR(10)
                                         ,OUT O_RETURN_MSG NVARCHAR(3000)
)                                        
LANGUAGE SQLSCRIPT
SQL SECURITY INVOKER 
/**************************************************************************
Scrum          : VI/재료비관리
Program Name   : DP_TC_CREATE_MCST_PROJECT_PROC
Creator        : Jeong Jeong Ho
Description    : 재료비 프로젝트 정보 생성
History        : 2021-01-05 initial creation
***************************************************************************/
AS
BEGIN
    DECLARE v_project_cnt INT := 0;
    DECLARE v_sql_rowcnt INT := 0;
    DECLARE v_draft_status_cnt INT := 0;
    DECLARE v_draft_ver_seq INT := 0;
    DECLARE V_DRAFT_CODE NVARCHAR(10) := 'DRAFT';
    DECLARE v_new_ver_num NVARCHAR(20);
    DECLARE v_new_ver_seq INT := 0;
    DECLARE v_full_sequence INT := 0;
           
    --유사 모델
    DECLARE CURSOR similar_model_cursor FOR
        SELECT *
          FROM dp_tc_project_similar_model psm
         WHERE psm.tenant_id = I_TENANT_ID
           AND psm.project_code = I_PROJECT_CODE
           AND psm.model_code = I_MODEL_CODE;
           
    --개발 일정
    DECLARE CURSOR event_cursor FOR
        SELECT *
          FROM dp_tc_project_event pe
         WHERE pe.tenant_id = I_TENANT_ID
           AND pe.project_code = I_PROJECT_CODE
           AND pe.model_code = I_MODEL_CODE
      ORDER BY pe.sequence;
          
    --물동(MTLMOB)/판가(SALE_PRICE)/가공비(PROCESSING_COST)/판관비(SGNA)    
    DECLARE CURSOR add_info_cursor FOR
        SELECT *
          FROM dp_tc_project_addition_info pai
         WHERE pai.tenant_id = I_TENANT_ID
           AND pai.project_code = I_PROJECT_CODE
           AND pai.model_code = I_MODEL_CODE
      ORDER BY pai.addition_type_code, pai.period_code;
    
    --환율
    DECLARE CURSOR base_exrate_cursor FOR
        SELECT *
          FROM dp_tc_project_base_exrate pbe
         WHERE pbe.tenant_id = I_TENANT_ID
           AND pbe.project_code = I_PROJECT_CODE
           AND pbe.model_code = I_MODEL_CODE
      ORDER BY pbe.currency_code, pbe.period_code;
    
    DECLARE param_error CONDITION FOR SQL_ERROR_CODE 10000;
    DECLARE txn_error CONDITION FOR SQL_ERROR_CODE 10001;
    DECLARE var_rollback NVARCHAR(100) := 'ROLLBACK';
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
        BEGIN
            EXEC (:var_rollback);
            O_VERSION_NUMBER := 'X';
            O_RETURN_CODE := ::SQL_ERROR_CODE;
            O_RETURN_MSG := ::SQL_ERROR_MESSAGE;
            --SELECT 'NG' RETURN_CODE, ::SQL_ERROR_CODE || '-' || ::SQL_ERROR_MESSAGE RETURN_MSG FROM DUMMY;
        END;
    
    --프로젝트 정보 있는지 체크   
    SELECT COUNT(*)
      INTO v_project_cnt
      FROM dp_tc_project
     WHERE tenant_id = I_TENANT_ID
       AND project_code = I_PROJECT_CODE
       AND model_code = I_MODEL_CODE;
  
    IF v_project_cnt != 1 THEN
        SIGNAL param_error SET MESSAGE_TEXT = 'Param Error.(There is no project information)';
    END IF;
    
    --기 작성중인(Draft) 재료비가 있는지 체크   
    SELECT COUNT(*)
      INTO v_draft_status_cnt
      FROM dp_tc_mcst_project
     WHERE tenant_id = I_TENANT_ID
       AND project_code = I_PROJECT_CODE
       AND model_code = I_MODEL_CODE
       AND mcst_code = I_MCST_CODE
       AND mcst_status_code = V_DRAFT_CODE;
       
    IF v_draft_status_cnt > 0 THEN
        --Draft 버전 차수 구함.
	    SELECT version_sequence
	      INTO v_draft_ver_seq
	      FROM (
	      	    SELECT ROW_NUMBER() OVER () AS rownum
	      	         , version_sequence
	      	      FROM dp_tc_mcst_project
	             WHERE tenant_id = I_TENANT_ID
	               AND project_code = I_PROJECT_CODE
	               AND model_code = I_MODEL_CODE
	               AND mcst_code = I_MCST_CODE
	               AND mcst_status_code = V_DRAFT_CODE
	           ) st
	     WHERE st.rownum = 1;
        SIGNAL param_error SET MESSAGE_TEXT = 'Param Error.(There is a draft version.(' || v_draft_ver_seq || '''st)';
    END IF;
  
    IF IFNULL(:I_USER_ID, '-1') = '-1' OR TRIM(:I_USER_ID ) = '' THEN
        SIGNAL param_error SET MESSAGE_TEXT = 'Param Error.(Please Check User Info)';
    END IF;
        
    --재료비 차수 관련 정보 구함
    BEGIN
        --재료비 버전 차수 구함
        SELECT ifnull(max(mp.version_sequence), 0)+1
          INTO v_new_ver_seq
          FROM dp_tc_mcst_project mp
         WHERE mp.tenant_id = I_TENANT_ID
           AND mp.project_code = I_PROJECT_CODE
           AND mp.model_code = I_MODEL_CODE
           AND mp.mcst_code = I_MCST_CODE;
           
        --재료비 버전상관 없는 전체 차수 구함.(견적/목표/예상 상관없는 전체 생성순서 임)
        SELECT ifnull(max(mp.full_sequence), 0)+1
          INTO v_full_sequence
          FROM dp_tc_mcst_project mp
         WHERE mp.tenant_id = I_TENANT_ID
           AND mp.project_code = I_PROJECT_CODE
           AND mp.model_code = I_MODEL_CODE;
           
        --재료비 version_number
        SELECT to_varchar(CURRENT_TIMESTAMP, 'YYYYMMDD') || '-' || LPAD (v_full_sequence, 3, '0')
          INTO v_new_ver_num
          FROM dummy;
    END;
    
    --재료비 프로젝트 생성
    BEGIN
    	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	    BEGIN
	        SIGNAL txn_error SET MESSAGE_TEXT = 'Insert Mcst Project Error.';
	    END;

        INSERT
          INTO dp_tc_mcst_project(
          	   tenant_id
          	 , project_code
          	 , model_code
          	 , version_number
          	 , project_name
          	 , model_name
          	 , mcst_code
          	 , version_sequence
          	 , company_code
          	 , org_type_code
          	 , org_code
          	 , bizdivision_code
          	 , product_group_code
          	 , source_type_code
          	 , quotation_project_code
          	 , project_status_code
          	 , project_grade_code
          	 , develope_event_code
          	 , production_company_code
          	 , project_leader_empno
          	 , buyer_empno
          	 , marketing_person_empno
          	 , planning_person_empno
          	 , customer_local_name
          	 , last_customer_name
          	 , customer_model_desc
          	 , mcst_yield_rate
          	 , bom_type_code
          	 , sales_currency_code
          	 , project_creator_empno
          	 , project_create_date
          	 , massprod_start_date
          	 , massprod_end_date
          	 , direct_register_flag
          	 , mcst_status_code
          	 , full_sequence
          	 , local_create_dtm
          	 , local_update_dtm
          	 , create_user_id
          	 , update_user_id
          	 , system_create_dtm
          	 , system_update_dtm)
        SELECT tenant_id
             , project_code
             , model_code
             , v_new_ver_num
             , project_name
             , model_name
             , I_MCST_CODE
             , v_new_ver_seq
             , company_code
             , org_type_code
             , org_code
             , bizdivision_code
             , product_group_code
             , source_type_code
             , quotation_project_code
             , project_status_code
             , project_grade_code
             , develope_event_code
             , production_company_code
             , project_leader_empno
             , buyer_empno
             , marketing_person_empno
             , planning_person_empno
             , customer_local_name
             , last_customer_name
             , customer_model_desc
             , mcst_yield_rate
             , bom_type_code
             , sales_currency_code
             , project_creator_empno
             , project_create_date
             , massprod_start_date
             , massprod_end_date
             , direct_register_flag
             , V_DRAFT_CODE
             , v_full_sequence
             , CURRENT_TIMESTAMP
             , CURRENT_TIMESTAMP
             , I_USER_ID
             , I_USER_ID
             , CURRENT_TIMESTAMP
             , CURRENT_TIMESTAMP
          FROM dp_tc_project 
         WHERE tenant_id = I_TENANT_ID
           AND project_code = I_PROJECT_CODE
           AND model_code = I_MODEL_CODE;
                  
        SELECT ::ROWCOUNT into v_sql_rowcnt FROM DUMMY;
        IF v_sql_rowcnt != 1 THEN
            SIGNAL txn_error SET MESSAGE_TEXT ='Project Creation Error.';
        END IF;
        
    END;
    
    --개발일정
    FOR loop_event AS event_cursor DO
        BEGIN
    	    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	        BEGIN
	        	SIGNAL txn_error SET MESSAGE_TEXT = 'Insert Mcst Project Event Error.';
	        END;

    	    INSERT
    	      INTO DP_TC_MCST_PROJECT_EVENT(
    	      	   TENANT_ID, PROJECT_CODE
    	      	 , MODEL_CODE
    	      	 , VERSION_NUMBER
    	      	 , DEVELOPE_EVENT_CODE
    	      	 , START_DATE
    	      	 , END_DATE
    	      	 , SEQUENCE
    	      	 , LOCAL_CREATE_DTM
    	      	 , LOCAL_UPDATE_DTM
    	      	 , CREATE_USER_ID
    	      	 , UPDATE_USER_ID
    	      	 , SYSTEM_CREATE_DTM
    	      	 , SYSTEM_UPDATE_DTM
    	      	 ) VALUES (
                   loop_event.TENANT_ID
                 , loop_event.PROJECT_CODE
                 , loop_event.MODEL_CODE
                 , v_new_ver_num
                 , loop_event.DEVELOPE_EVENT_CODE
                 , loop_event.START_DATE
                 , loop_event.END_DATE
                 , loop_event.SEQUENCE
                 , CURRENT_TIMESTAMP
                 , CURRENT_TIMESTAMP
                 , I_USER_ID
                 , I_USER_ID
                 , CURRENT_TIMESTAMP
                 , CURRENT_TIMESTAMP
                 );
        END;
    END FOR;
        
    --유사모델
    FOR loop_similar_model AS similar_model_cursor DO
        BEGIN
    	    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	        BEGIN
	        	SIGNAL txn_error SET MESSAGE_TEXT = 'Insert Mcst Project Similar Model Error.';
	        END;

            INSERT
              INTO DP_TC_MCST_PROJECT_SIMILAR_MODEL(
              	   TENANT_ID
              	 , PROJECT_CODE
              	 , MODEL_CODE
              	 , VERSION_NUMBER
              	 , SIMILAR_MODEL_CODE
              	 , DIRECT_REGISTER_FLAG
              	 , LOCAL_CREATE_DTM
              	 , LOCAL_UPDATE_DTM
              	 , CREATE_USER_ID
              	 , UPDATE_USER_ID
              	 , SYSTEM_CREATE_DTM
              	 , SYSTEM_UPDATE_DTM
                 ) VALUES (
                   loop_similar_model.TENANT_ID
                 , loop_similar_model.PROJECT_CODE
                 , loop_similar_model.MODEL_CODE
                 , v_new_ver_num
                 , loop_similar_model.SIMILAR_MODEL_CODE
                 , loop_similar_model.DIRECT_REGISTER_FLAG
                 , CURRENT_TIMESTAMP
                 , CURRENT_TIMESTAMP
                 , I_USER_ID
                 , I_USER_ID
                 , CURRENT_TIMESTAMP
                 , CURRENT_TIMESTAMP
                 );
        END;
    END FOR;
        
    /*물동(MTLMOB)/판가(SALE_PRICE)/가공비(PROCESSING_COST)/판관비(SGNA)*/
    FOR loop_add_info AS add_info_cursor DO
        BEGIN
    	    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	        BEGIN
	        	SIGNAL txn_error SET MESSAGE_TEXT = 'Insert Mcst Project Add Info Error.';
	        END;

            INSERT
              INTO DP_TC_MCST_PROJECT_ADDITION_INFO(
              	   TENANT_ID
              	 , PROJECT_CODE
              	 , MODEL_CODE
              	 , VERSION_NUMBER
              	 , ADDITION_TYPE_CODE
              	 , PERIOD_CODE
                 , UOM_CODE
              	 , ADDITION_TYPE_VALUE
              	 , LOCAL_CREATE_DTM
              	 , LOCAL_UPDATE_DTM
              	 , CREATE_USER_ID
              	 , UPDATE_USER_ID
              	 , SYSTEM_CREATE_DTM
              	 , SYSTEM_UPDATE_DTM
                 ) VALUES (
                   loop_add_info.TENANT_ID
                 , loop_add_info.PROJECT_CODE
                 , loop_add_info.MODEL_CODE
                 , v_new_ver_num
                 , loop_add_info.ADDITION_TYPE_CODE
                 , loop_add_info.PERIOD_CODE
                 , ifnull(loop_add_info.UOM_CODE, '-')
                 , loop_add_info.ADDITION_TYPE_VALUE
                 , CURRENT_TIMESTAMP
                 , CURRENT_TIMESTAMP
                 , I_USER_ID
                 , I_USER_ID
                 , CURRENT_TIMESTAMP
                 , CURRENT_TIMESTAMP
                 );
        END;
    END FOR;
    
    /*환율*/
    FOR loop_base_exrate AS base_exrate_cursor DO
        BEGIN
    	    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	        BEGIN
	        	SIGNAL txn_error SET MESSAGE_TEXT = 'Insert Mcst Project Base Exrate Error.';
	        END;
            
            INSERT
              INTO DP_TC_MCST_PROJECT_BASE_EXRATE(
              	   TENANT_ID
              	 , PROJECT_CODE
              	 , MODEL_CODE
              	 , VERSION_NUMBER
              	 , CURRENCY_CODE
              	 , PERIOD_CODE
              	 , EXRATE
              	 , LOCAL_CREATE_DTM
              	 , LOCAL_UPDATE_DTM
              	 , CREATE_USER_ID
              	 , UPDATE_USER_ID
              	 , SYSTEM_CREATE_DTM
              	 , SYSTEM_UPDATE_DTM
                 ) VALUES (
                   loop_base_exrate.TENANT_ID
                 , loop_base_exrate.PROJECT_CODE
                 , loop_base_exrate.MODEL_CODE
                 , v_new_ver_num
                 , loop_base_exrate.CURRENCY_CODE
                 , loop_base_exrate.PERIOD_CODE
                 , loop_base_exrate.EXRATE
                 , CURRENT_TIMESTAMP
                 , CURRENT_TIMESTAMP
                 , I_USER_ID
                 , I_USER_ID
                 , CURRENT_TIMESTAMP
                 , CURRENT_TIMESTAMP
                 );
        END;
    END FOR;
    O_VERSION_NUMBER := v_new_ver_num;
    O_RETURN_CODE := 'OK';
    O_RETURN_MSG := 'Success';
    --SELECT 'OK' RETURN_CODE, 'Success' RETURN_MSG FROM DUMMY;
    
END;