/************************************************
  1. namespace
  - 모듈코드 소문자로 작성
  - 소모듈 존재시 대모듈.소모듈 로 작성
  2. entity
  - 대문자로 작성
  - 테이블명 생성을 고려하여 '_' 추가
  3. 컬럼(속성)
  - 소문자로 작성
  4. .hdbview, .hdbfunction 등으로 이미 생성된 DB Object 사용시
  entity 위에 @cds.persistence.exists 명시  
  
  5. namespace : dp
  6. Procedure  : DP_MM_MTL_CLASS_CONV_PROC
  7. Procedure description : 자재 클래스 컨버젼
  8. history
  -. 2021.01.22 : 최미희 최초작성
  -.  
*************************************************/
PROCEDURE DP_MM_MTL_CLASS_CONV_PROC (IN I_TENANT_ID NVARCHAR(5),
                                     IN I_GROUP_ID BIGINT,
                                     OUT O_RETURN_CODE NVARCHAR(1),
                                     OUT O_RETURN_MSG_CODE NVARCHAR(30),
                                     OUT O_RETURN_MSG NVARCHAR(100)
                                    )
LANGUAGE SQLSCRIPT
SQL SECURITY INVOKER
AS
BEGIN
/*
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN​
        SELECT 'The Error Code is ' || ::SQL_ERROR_CODE || '-' || ::SQL_ERROR_MESSAGE FROM DUMMY;
    END;
*/
    DECLARE N_CNT  INTEGER;
    DECLARE V_USER_ID NVARCHAR(240);

    DECLARE V_RETURN_CODE NVARCHAR(1);

    DECLARE V_RETURN_MSG_CODE NVARCHAR(30);
    DECLARE V_RETURN_MSG NVARCHAR(100);


    DECLARE V_CONV_PROG_STATUS_CODE NVARCHAR(30);
    DECLARE V_CONV_ERROR_DESC NVARCHAR(500);

    /* Read Conversion */
    DECLARE CURSOR C1 FOR
    SELECT TENANT_ID, INTERFACE_ID, GROUP_ID, CONV_PROG_STATUS_CODE,
           MATERIAL_CLASS_CODE, LANGUAGE_CODE, MATERIAL_CLASS_NAME,
           MATERIAL_CLASS_DESC, USE_FLAG
    FROM DP_MM_MATERIAL_CLASS_CON
    WHERE  TENANT_ID = I_TENANT_ID
    AND GROUP_ID = I_GROUP_ID
    AND CONV_PROG_STATUS_CODE = 'RUNNING'
    ;

    V_USER_ID = 'Admin';

    /* Step 1 : Conversion 대상 체크 */
    SELECT COUNT(*)
    INTO N_CNT 
    FROM DP_MM_MATERIAL_CLASS_CON 
    WHERE TENANT_ID = I_TENANT_ID
    AND GROUP_ID = I_GROUP_ID
    AND CONV_PROG_STATUS_CODE = 'PENDING'
    ;

    IF N_CNT = 0 THEN
        O_RETURN_CODE = 'E';
        O_RETURN_MSG_CODE = 'CONMSG1';
        O_RETURN_MSG = 'No Data found for conversion';
        RETURN;
    END IF;

    /* Step 2 : Update Status PENDING to RUNNING */
    UPDATE DP_MM_MATERIAL_CLASS_CON
    SET CONV_PROG_STATUS_CODE = 'RUNNING'
    WHERE TENANT_ID = I_TENANT_ID
    AND GROUP_ID = I_GROUP_ID
    AND CONV_PROG_STATUS_CODE = 'PENDING'
    ;

    COMMIT;

    /* Step 3 : Read Conversion Record */
  

    FOR REC AS C1 DO
    -- ELECT 'UPDATE ' || rec.table_name || ' SET ' || rec.COLUMN_NAME || ' = ?;' FROM DUMMY;

        /* Step 4 : Check DP_MM_MATERIAL_CLASS */

        SELECT COUNT(*)
        INTO N_CNT
        FROM DP_MM_MATERIAL_CLASS 
        WHERE TENANT_ID = REC.TENANT_ID
        AND MATERIAL_CLASS_CODE = REC.MATERIAL_CLASS_CODE
        ;

        IF N_CNT = 0 THEN
            INSERT INTO DP_MM_MATERIAL_CLASS (
                TENANT_ID,
                MATERIAL_CLASS_CODE,
                MATERIAL_CLASS_NAME,
                MATERIAL_CLASS_DESC,
                USE_FLAG,
                LOCAL_CREATE_DTM,
                LOCAL_UPDATE_DTM,
                CREATE_USER_ID,
                UPDATE_USER_ID,
                SYSTEM_CREATE_DTM,
                SYSTEM_UPDATE_DTM        
            )
            VALUES (
                REC.TENANT_ID,            -- TENANT_ID
                REC.MATERIAL_CLASS_CODE,  -- MATERIAL_CLASS_CODE
                REC.MATERIAL_CLASS_NAME,  -- MATERIAL_CLASS_NAME
                REC.MATERIAL_CLASS_DESC,  -- MATERIAL_CLASS_DESC
                REC.USE_FLAG,             -- USE_FLAG
                NOW(),                    -- LOCAL_CREATE_DTM
                NOW(),                    -- LOCAL_UPDATE_DTM
                V_USER_ID,                -- CREATE_USER_ID
                V_USER_ID,                -- UPDATE_USER_ID
                NOW(),                    -- SYSTEM_CREATE_DTM
                NOW()                     -- SYSTEM_UPDATE_DTM
            );

            V_CONV_PROG_STATUS_CODE = 'SUSSCESS';
            V_CONV_ERROR_DESC = NULL;

        ELSE 
           V_CONV_PROG_STATUS_CODE = 'ERROR';
           V_CONV_ERROR_DESC = 'This Data is already exists.(DP_MM_MATERIAL_CLASS)';

        END IF;
        
        /* Step 5 : Check DP_MM_MATERIAL_CLASS_LNG */
        SELECT COUNT(*)
        INTO N_CNT
        FROM DP_MM_MATERIAL_CLASS_LNG
        WHERE TENANT_ID = REC.TENANT_ID
        AND MATERIAL_CLASS_CODE = REC.MATERIAL_CLASS_CODE
        AND LANGUAGE_CODE = REC.LANGUAGE_CODE
        ;

        IF N_CNT = 0 THEN
        
            INSERT INTO DP_MM_MATERIAL_CLASS_LNG(
                TENANT_ID,
                MATERIAL_CLASS_CODE,
                LANGUAGE_CODE,
                MATERIAL_CLASS_NAME,
                MATERIAL_CLASS_DESC,
                LOCAL_CREATE_DTM,
                LOCAL_UPDATE_DTM,
                CREATE_USER_ID,
                UPDATE_USER_ID,
                SYSTEM_CREATE_DTM,
                SYSTEM_UPDATE_DTM  
            )
            VALUES (
                REC.TENANT_ID,                -- TENANT_ID
                REC.MATERIAL_CLASS_CODE,      -- MATERIAL_CLASS_CODE
                REC.LANGUAGE_CODE,            -- LANGUAGE_CODE
                REC.MATERIAL_CLASS_NAME,      -- MATERIAL_CLASS_NAME
                REC.MATERIAL_CLASS_DESC,      -- MATERIAL_CLASS_DESC
                NOW(),                        -- LOCAL_CREATE_DTM
                NOW(),                        -- LOCAL_UPDATE_DTM
                V_USER_ID,                    -- CREATE_USER_ID
                V_USER_ID,                    -- UPDATE_USER_ID
                NOW(),                        -- SYSTEM_CREATE_DTM
                NOW()                         -- SYSTEM_UPDATE_DTM
            );

            V_CONV_PROG_STATUS_CODE = 'SUSSCESS';
            V_CONV_ERROR_DESC = NULL;

        ELSE 

           V_CONV_PROG_STATUS_CODE = 'ERROR';
           V_CONV_ERROR_DESC = 'This Data is already exists.(DP_MM_MATERIAL_CLASS_LNG)';


        END IF;

        

        /* Step 5 : Update Conversion Result */
        UPDATE DP_MM_MATERIAL_CLASS_CON 
        SET CONV_PROG_STATUS_CODE = V_CONV_PROG_STATUS_CODE,
            CONV_ERROR_DESC = V_CONV_ERROR_DESC
        WHERE TENANT_ID = REC.TENANT_ID
        AND INTERFACE_ID = REC.INTERFACE_ID
        AND GROUP_ID = REC.GROUP_ID 
        AND CONV_PROG_STATUS_CODE = 'RUNNING'
        ;
        

    END FOR;

    COMMIT;


END;