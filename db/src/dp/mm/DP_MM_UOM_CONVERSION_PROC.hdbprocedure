
/*
* UOM 환산 
*
* 1) 같은 UOM Class를 가진 단위
* 2) 기본단위가 존재하는 UOM Class
* 3) 환산순서 : 단위 A에서 단위B로 환산
*  1. 단위 A-> 기본단위
*  2. 기본단위 -> 단위B
*/
PROCEDURE DP_MM_UOM_CONVERSION_PROC (IN I_TENANT_ID NVARCHAR(5),
                                     IN I_FROM_UOM_CODE NVARCHAR(3),
                                     IN I_TO_UOM_CODE NVARCHAR(3),
                                     IN I_QUANTITY DECIMAL,
                                     OUT O_RETURN_CODE NVARCHAR(1),
                                     OUT O_RETURN_ERROR_CODE NVARCHAR(30),
                                     OUT O_RETURN_ERROR_MSG NVARCHAR(100),
                                     OUT O_CONV_QUANTITY DECIMAL
                                    )
    LANGUAGE SQLSCRIPT
    SQL SECURITY INVOKER
    --DEFAULT SCHEMA <default_schema_name>
    READS SQL DATA AS
BEGIN

    DECLARE V_FR_CONV_RATE DECIMAL;
    DECLARE V_TO_CONV_RATE DECIMAL;

    DECLARE V_FR_UOM_CLASS_CODE NVARCHAR(10);
    DECLARE V_FR_BASE_UOM_CODE  NVARCHAR(3);
    DECLARE V_FR_BASE_UNIT_FLAG BOOLEAN;
    DECLARE V_FR_CONVERSION_NUMERATOR DECIMAL(10,0);
    DECLARE V_FR_CONVERSION_DENOMINATOR DECIMAL(10,0);
    DECLARE V_FR_CONVERSION_INDEX  DECIMAL(10,0);

    DECLARE V_TO_UOM_CLASS_CODE NVARCHAR(10);
    DECLARE V_TO_BASE_UOM_CODE  NVARCHAR(3);
    DECLARE V_TO_BASE_UNIT_FLAG BOOLEAN;
    DECLARE V_TO_CONVERSION_NUMERATOR DECIMAL(10,0);
    DECLARE V_TO_CONVERSION_DENOMINATOR DECIMAL(10,0);
    DECLARE V_TO_CONVERSION_INDEX  DECIMAL(10,0);   


    DECLARE VT_FR_UOM TABLE( UOM_CLASS_CODE NVARCHAR(10),
                              BASE_UOM_CODE NVARCHAR(3),
                              BASE_UNIT_FLAG BOOLEAN,
                              CONVERSION_NUMERATOR DECIMAL(10,0),
                              CONVERSION_DENOMINATOR DECIMAL(10,0),
                              CONVERSION_INDEX  DECIMAL(10,0)
                            );

    DECLARE VT_TO_UOM TABLE ( UOM_CLASS_CODE NVARCHAR(10),
                              BASE_UOM_CODE NVARCHAR(3),
                              BASE_UNIT_FLAG BOOLEAN,
                              CONVERSION_NUMERATOR DECIMAL(10,0),
                              CONVERSION_DENOMINATOR DECIMAL(10,0),
                              CONVERSION_INDEX  DECIMAL(10,0)
                            );

    O_RETURN_CODE := 'S';
    O_CONV_QUANTITY := I_QUANTITY;

    SELECT  UOM.UOM_CLASS_CODE,
            CLS.BASE_UOM_CODE,
            UOM.BASE_UNIT_FLAG,
            UOM.CONVERSION_NUMERATOR,
            UOM.CONVERSION_DENOMINATOR,
            UOM.CONVERSION_INDEX   
    INTO  V_FR_UOM_CLASS_CODE,
          V_FR_BASE_UOM_CODE,
          V_FR_BASE_UNIT_FLAG,
          V_FR_CONVERSION_NUMERATOR,
          V_FR_CONVERSION_DENOMINATOR,
          V_FR_CONVERSION_INDEX
    FROM  DP_MM_UNIT_OF_MEASURE UOM
    INNER JOIN DP_MM_UOM_CLASS  CLS 
    ON CLS.TENANT_ID = UOM.TENANT_ID
    AND CLS.UOM_CLASS_CODE = UOM.UOM_CLASS_CODE
    WHERE UOM.TENANT_ID = :I_TENANT_ID
    AND   UOM.UOM_CODE = :I_FROM_UOM_CODE        
    ;

        SELECT  UOM.UOM_CLASS_CODE,
            CLS.BASE_UOM_CODE,
            UOM.BASE_UNIT_FLAG,
            UOM.CONVERSION_NUMERATOR,
            UOM.CONVERSION_DENOMINATOR,
            UOM.CONVERSION_INDEX   
    INTO  V_TO_UOM_CLASS_CODE,
          V_TO_BASE_UOM_CODE,
          V_TO_BASE_UNIT_FLAG,
          V_TO_CONVERSION_NUMERATOR,
          V_TO_CONVERSION_DENOMINATOR,
          V_TO_CONVERSION_INDEX
    FROM  DP_MM_UNIT_OF_MEASURE UOM
    INNER JOIN DP_MM_UOM_CLASS  CLS 
    ON CLS.TENANT_ID = UOM.TENANT_ID
    AND CLS.UOM_CLASS_CODE = UOM.UOM_CLASS_CODE
    WHERE UOM.TENANT_ID = :I_TENANT_ID
    AND   UOM.UOM_CODE = :I_TO_UOM_CODE        
    ;

    IF (V_FR_UOM_CLASS_CODE = V_TO_UOM_CLASS_CODE) THEN

        IF (V_FR_BASE_UOM_CODE IS NOT NULL) THEN
            V_FR_CONV_RATE := (V_FR_CONVERSION_NUMERATOR/V_FR_CONVERSION_DENOMINATOR) * V_FR_CONVERSION_INDEX;

            IF (V_FR_BASE_UNIT_FLAG = FALSE) THEN
                V_TO_CONV_RATE := (V_TO_CONVERSION_NUMERATOR/V_TO_CONVERSION_DENOMINATOR) * V_TO_CONVERSION_INDEX;
            ELSE 
                V_TO_CONV_RATE := 1;
            END IF;

            O_CONV_QUANTITY := :I_QUANTITY * V_FR_CONV_RATE * V_TO_CONV_RATE;

        ELSE
            O_RETURN_CODE = 'S';
            O_CONV_QUANTITY = 1;

        END IF; 

    ELSE
        O_RETURN_CODE = 'E';
        O_RETURN_ERROR_CODE = 'DPMM';
        
    END IF;

/*
    VT_FR_UOM = SELECT UOM.UOM_CLASS_CODE,
                    CLS.BASE_UOM_CODE,
                    UOM.BASE_UNIT_FLAG,
                    UOM.CONVERSION_NUMERATOR,
                    UOM.CONVERSION_DENOMINATOR,
                    UOM.CONVERSION_INDEX   
            FROM  DP_MM_UNIT_OF_MEASURE UOM
            INNER JOIN DP_MM_UOM_CLASS  CLS 
            ON CLS.TENANT_ID = UOM.TENANT_ID
            AND CLS.UOM_CLASS_CODE = UOM.UOM_CLASS_CODE
            WHERE UOM.TENANT_ID = :I_TENANT_ID
            AND   UOM.UOM_CODE = :I_FROM_UOM_CODE        
            ;

    VT_TO_UOM = SELECT UOM.UOM_CLASS_CODE,
                    CLS.BASE_UOM_CODE,
                    UOM.BASE_UNIT_FLAG,
                    UOM.CONVERSION_NUMERATOR,
                    UOM.CONVERSION_DENOMINATOR,
                    UOM.CONVERSION_INDEX      
            FROM  DP_MM_UNIT_OF_MEASURE UOM
            INNER JOIN DP_MM_UOM_CLASS  CLS 
            ON CLS.TENANT_ID = UOM.TENANT_ID
            AND CLS.UOM_CLASS_CODE = UOM.UOM_CLASS_CODE
            WHERE UOM.TENANT_ID = :I_TENANT_ID
            AND   UOM.UOM_CODE = :I_TO_UOM_CODE
            ;

    SELECT  UOM.UOM_CLASS_CODE,
            CLS.BASE_UOM_CODE,
            UOM.BASE_UNIT_FLAG,
            UOM.CONVERSION_NUMERATOR,
            UOM.CONVERSION_DENOMINATOR,
            UOM.CONVERSION_INDEX   
    INTO  V_FR_UOM_CLASS_CODE,
          V_FR_BASE_UOM_CODE,
          V_FR_BASE_UNIT_FLAG,
          V_FR_CONVERSION_NUMERATOR,
          V_FR_CONVERSION_DENOMINATOR,
          V_FR_CONVERSION_INDEX
    FROM  DP_MM_UNIT_OF_MEASURE UOM
    INNER JOIN DP_MM_UOM_CLASS  CLS 
    ON CLS.TENANT_ID = UOM.TENANT_ID
    AND CLS.UOM_CLASS_CODE = UOM.UOM_CLASS_CODE
    WHERE UOM.TENANT_ID = :I_TENANT_ID
    AND   UOM.UOM_CODE = :I_FROM_UOM_CODE        
    ;

    IF (VT_FR_UOM.UOM_CLASS_CODE = VT_TO_UOM.UOM_CLASS_CODE) THEN

        IF (VT_FR_UOM.BASE_UOM_CODE IS NOT NULL) THEN
            V_FR_CONV_RATE := (VT_FR_UOM.CONVERSION_NUMERATOR/VT_FR_UOM.CONVERSION_DENOMINATOR) * VT_FR_UOM.CONVERSION_INDEX;

            IF (VT_FR_UOM.BASE_UNIT_FLAG = FLASE) THEN
                V_TO_CONV_RATE := (VT_TO_UOM.CONVERSION_NUMERATOR/VT_TO_UOM.CONVERSION_DENOMINATOR) * VT_TO_UOM.CONVERSION_INDEX;
            ELSE 
                V_TO_CONV_RATE := 1;
            END IF;

            O_CONV_QUANTITY := :I_QUANTITY * V_FR_CONV_RATE * V_TO_CONV_RATE;

        ELSE
            O_RETURN_CODE = 'S';
            O_CONV_QUANTITY = 1;

        END IF; 

    ELSE
        O_RETURN_CODE = 'E';
        O_RETURN_ERROR_CODE = 'DPMM';
        
    END IF;
*/
END;