PROCEDURE EP_PO_LOI_REQUEST_HD_SAVE_PROC (
    IN I_H_TABLE TABLE(   TENANT_ID NVARCHAR(5)
                            , COMPANY_CODE NVARCHAR(10)
                            , LOI_WRITE_NUMBER NVARCHAR(50)
                            , LOI_NUMBER NVARCHAR(50)
                            , LOI_REQUEST_TITLE NVARCHAR(100)
                            , LOI_PUBLISH_PURPOSE_DESC NVARCHAR(1000)
                            , SPECIAL_NOTE NCLOB
                            , REQUESTOR_EMPNO NVARCHAR(30)
                            , REQUEST_DEPARTMENT_CODE NVARCHAR(50)
                            , LOI_REQUEST_STATUS_CODE NVARCHAR(30)
    ),
    IN I_D_TABLE TABLE(   TENANT_ID NVARCHAR(5)
                            , COMPANY_CODE NVARCHAR(10)
                            , LOI_WRITE_NUMBER NVARCHAR(50)
                            , LOI_ITEM_NUMBER NVARCHAR(50)
                            , ITEM_SEQUENCE DECIMAL
                            , PLANT_CODE NVARCHAR(10)
                            , EP_ITEM_CODE NVARCHAR(50)
                            , ITEM_DESC NVARCHAR(200) 
                            , UNIT NVARCHAR(3)
                            , REQUEST_NET_PRICE DECIMAL
                            , REQUEST_QUANTITY DECIMAL
                            , CURRENCY_CODE NVARCHAR(15)
                            , SPEC_DESC NVARCHAR(1000)
                            , DELIVERY_REQUEST_DATE NVARCHAR(50)
                            , REQUEST_AMOUNT DECIMAL
                            , SUPPLIER_CODE NVARCHAR(100)
                            , BUYER_EMPNO NVARCHAR(30)
                            , PURCHASING_DEPARTMENT_CODE NVARCHAR(50) 
                            , REMARK NVARCHAR(3000)
                            , ROW_STATE NVARCHAR(5)
    ),
    OUT O_H_TABLE TABLE(   TENANT_ID NVARCHAR(5)
                            , COMPANY_CODE NVARCHAR(10)
                            , LOI_WRITE_NUMBER NVARCHAR(50)
                            , LOI_NUMBER NVARCHAR(50)
                            , LOI_REQUEST_TITLE NVARCHAR(100)
                            , LOI_PUBLISH_PURPOSE_DESC NVARCHAR(1000)
                            , SPECIAL_NOTE NCLOB
                            , REQUESTOR_EMPNO NVARCHAR(30)
                            , REQUEST_DEPARTMENT_CODE NVARCHAR(50)
                            , LOI_REQUEST_STATUS_CODE NVARCHAR(30)
    ),
    OUT O_D_TABLE TABLE(   TENANT_ID NVARCHAR(5)
                            , COMPANY_CODE NVARCHAR(10)
                            , LOI_WRITE_NUMBER NVARCHAR(50)
                            , LOI_ITEM_NUMBER NVARCHAR(50)
                            , ITEM_SEQUENCE DECIMAL
                            , PLANT_CODE NVARCHAR(10)
                            , EP_ITEM_CODE NVARCHAR(50)
                            , ITEM_DESC NVARCHAR(200) 
                            , UNIT NVARCHAR(3)
                            , REQUEST_NET_PRICE DECIMAL
                            , REQUEST_QUANTITY DECIMAL
                            , CURRENCY_CODE NVARCHAR(15)
                            , SPEC_DESC NVARCHAR(1000)
                            , DELIVERY_REQUEST_DATE NVARCHAR(50)
                            , REQUEST_AMOUNT DECIMAL
                            , SUPPLIER_CODE NVARCHAR(100)
                            , BUYER_EMPNO NVARCHAR(30)
                            , PURCHASING_DEPARTMENT_CODE NVARCHAR(50) 
                            , REMARK NVARCHAR(3000)
                            , ROW_STATE NVARCHAR(5)
    )
)
LANGUAGE SQLSCRIPT
SQL SECURITY INVOKER 

AS
BEGIN

    DECLARE V_TENANT_ID NVARCHAR(5);
    DECLARE V_COMPANY_CODE NVARCHAR(10);
    DECLARE V_LOI_WRITE_NUMBER NVARCHAR(50);
    DECLARE V_LOI_NUMBER NVARCHAR(50);
    DECLARE V_LOI_REQUEST_TITLE NVARCHAR(100);
    DECLARE V_LOI_PUBLISH_PURPOSE_DESC NVARCHAR(1000);
    DECLARE V_SPECIAL_NOTE NCLOB;
    DECLARE V_REQUESTOR_EMPNO NVARCHAR(30);
    DECLARE V_REQUEST_DEPARTMENT_CODE NVARCHAR(50);
    DECLARE V_LOI_REQUEST_STATUS_CODE NVARCHAR(30);


    SELECT  A.TENANT_ID
            ,A.COMPANY_CODE
            ,MAP(A.LOI_WRITE_NUMBER, 'new' , LPAD (EP_LOI_WRITE_NUMBER_SEQ.NEXTVAL, 12, '121000000001') ,A.LOI_WRITE_NUMBER ) AS LOI_WRITE_NUMBER
            ,MAP(A.LOI_NUMBER, 'new' , (SELECT EP_GET_DOCUMENT_NO_FUNC(A.TENANT_ID,A.COMPANY_CODE,'121') FROM DUMMY) ,A.LOI_NUMBER ) AS LOI_NUMBER
            ,A.LOI_REQUEST_TITLE
            ,A.LOI_PUBLISH_PURPOSE_DESC
            ,A.SPECIAL_NOTE
            ,A.REQUESTOR_EMPNO
            ,A.REQUEST_DEPARTMENT_CODE
            ,A.LOI_REQUEST_STATUS_CODE
    INTO V_TENANT_ID,V_COMPANY_CODE, V_LOI_WRITE_NUMBER,V_LOI_NUMBER,V_LOI_REQUEST_TITLE,V_LOI_PUBLISH_PURPOSE_DESC,V_SPECIAL_NOTE,V_REQUESTOR_EMPNO,V_REQUEST_DEPARTMENT_CODE,V_LOI_REQUEST_STATUS_CODE
    FROM    :I_H_TABLE A;


    O_H_TABLE =     SELECT  ITEM.TENANT_ID
                    ,ITEM.COMPANY_CODE
                    ,:V_LOI_WRITE_NUMBER AS LOI_WRITE_NUMBER
                    ,:V_LOI_NUMBER AS LOI_NUMBER
                    ,ITEM.LOI_REQUEST_TITLE
                    ,ITEM.LOI_PUBLISH_PURPOSE_DESC
                    ,ITEM.SPECIAL_NOTE
                    ,ITEM.REQUESTOR_EMPNO
                    ,ITEM.REQUEST_DEPARTMENT_CODE
                    ,ITEM.LOI_REQUEST_STATUS_CODE
            FROM    :I_H_TABLE ITEM;
    

    MERGE INTO EP_LI_MST AS MST
        USING DUMMY
        ON	MST.TENANT_ID = :V_TENANT_ID
        AND MST.COMPANY_CODE = :V_COMPANY_CODE
        AND MST.LOI_WRITE_NUMBER = :V_LOI_WRITE_NUMBER

    WHEN MATCHED THEN
        UPDATE 
        SET LOI_REQUEST_TITLE           = :V_LOI_REQUEST_TITLE
           ,LOI_PUBLISH_PURPOSE_DESC    = :V_LOI_PUBLISH_PURPOSE_DESC
           ,SPECIAL_NOTE                = :V_SPECIAL_NOTE
           ,REQUESTOR_EMPNO             = :V_REQUESTOR_EMPNO
           ,REQUEST_DEPARTMENT_CODE     = :V_REQUEST_DEPARTMENT_CODE
           ,REQUEST_DATE                = CURRENT_TIMESTAMP
           ,LOI_REQUEST_STATUS_CODE     = :V_LOI_REQUEST_STATUS_CODE
           ,LOCAL_UPDATE_DTM            = CURRENT_TIMESTAMP
           ,UPDATE_USER_ID              = 'ADMIN'
           ,SYSTEM_UPDATE_DTM           = CURRENT_TIMESTAMP
    WHEN NOT MATCHED THEN
        INSERT 
            (TENANT_ID
            , COMPANY_CODE
            , LOI_WRITE_NUMBER
            , LOI_NUMBER
            , LOI_REQUEST_TITLE
            , LOI_PUBLISH_PURPOSE_DESC
            , SPECIAL_NOTE
            , REQUESTOR_EMPNO
            , REQUEST_DEPARTMENT_CODE
            , REQUEST_DATE
            , LOI_REQUEST_STATUS_CODE
            , LOCAL_CREATE_DTM
            , LOCAL_UPDATE_DTM
            , CREATE_USER_ID
            , UPDATE_USER_ID
            , SYSTEM_CREATE_DTM
            , SYSTEM_UPDATE_DTM)
        VALUES
            ( :V_TENANT_ID
            , :V_COMPANY_CODE
            , :V_LOI_WRITE_NUMBER
            , :V_LOI_NUMBER
            , :V_LOI_REQUEST_TITLE
            , :V_LOI_PUBLISH_PURPOSE_DESC
            , :V_SPECIAL_NOTE
            , :V_REQUESTOR_EMPNO
            , :V_REQUEST_DEPARTMENT_CODE
            , CURRENT_TIMESTAMP
            , :V_LOI_REQUEST_STATUS_CODE
            , CURRENT_TIMESTAMP
            , CURRENT_TIMESTAMP
            , 'ADMIN'
            , 'ADMIN'
            , CURRENT_TIMESTAMP
            , CURRENT_TIMESTAMP)
    ;


    O_D_TABLE = SELECT  ITEM.TENANT_ID
                        ,ITEM.COMPANY_CODE
                        ,:V_LOI_WRITE_NUMBER AS LOI_WRITE_NUMBER
                        ,MAP(ITEM.LOI_ITEM_NUMBER, 'new' , EP_LOI_ITEM_NUMBER_SEQ.NEXTVAL, ITEM.LOI_ITEM_NUMBER) AS LOI_ITEM_NUMBER
                        ,ITEM.ITEM_SEQUENCE
                        ,ITEM.PLANT_CODE
                        ,ITEM.EP_ITEM_CODE
                        ,ITEM.ITEM_DESC
                        ,ITEM.UNIT
                        ,ITEM.REQUEST_NET_PRICE
                        ,ITEM.REQUEST_QUANTITY
                        ,ITEM.CURRENCY_CODE
                        ,ITEM.SPEC_DESC
                        ,ITEM.DELIVERY_REQUEST_DATE
                        ,ITEM.REQUEST_AMOUNT
                        ,ITEM.SUPPLIER_CODE
                        ,ITEM.BUYER_EMPNO
                        ,ITEM.PURCHASING_DEPARTMENT_CODE
                        ,ITEM.REMARK
                        ,ITEM.ROW_STATE
                FROM    :I_D_TABLE ITEM;

    MERGE INTO EP_LI_DTL AS DTL
        USING :O_D_TABLE
        ON  DTL.TENANT_ID           = :O_D_TABLE.TENANT_ID
        AND DTL.COMPANY_CODE        = :O_D_TABLE.COMPANY_CODE
        AND DTL.LOI_WRITE_NUMBER    = :O_D_TABLE.LOI_WRITE_NUMBER
        AND DTL.LOI_ITEM_NUMBER     = :O_D_TABLE.LOI_ITEM_NUMBER
    
    WHEN MATCHED THEN
        UPDATE 
        SET ITEM_SEQUENCE                   = :O_D_TABLE.ITEM_SEQUENCE
           ,PLANT_CODE                      = :O_D_TABLE.PLANT_CODE
           ,EP_ITEM_CODE                    = :O_D_TABLE.EP_ITEM_CODE
           ,ITEM_DESC                       = :O_D_TABLE.ITEM_DESC
           ,UNIT                            = :O_D_TABLE.UNIT
           ,REQUEST_NET_PRICE               = :O_D_TABLE.REQUEST_NET_PRICE
           ,REQUEST_QUANTITY                = :O_D_TABLE.REQUEST_QUANTITY
           ,CURRENCY_CODE                   = :O_D_TABLE.CURRENCY_CODE
           ,SPEC_DESC                       = :O_D_TABLE.SPEC_DESC
           ,DELIVERY_REQUEST_DATE           = TO_DATE(:O_D_TABLE.DELIVERY_REQUEST_DATE)
           ,REQUEST_AMOUNT                  = :O_D_TABLE.REQUEST_AMOUNT
           ,BUYER_EMPNO                     = :O_D_TABLE.BUYER_EMPNO
           ,PURCHASING_DEPARTMENT_CODE      = :O_D_TABLE.PURCHASING_DEPARTMENT_CODE
           ,REMARK                          = :O_D_TABLE.REMARK
           ,LOCAL_UPDATE_DTM                = CURRENT_TIMESTAMP
           ,UPDATE_USER_ID                  = 'ADMIN'
           ,SYSTEM_UPDATE_DTM               = CURRENT_TIMESTAMP
    WHEN NOT MATCHED THEN
        INSERT 
            (TENANT_ID
            , COMPANY_CODE
            , LOI_WRITE_NUMBER
            , LOI_ITEM_NUMBER
            , ITEM_SEQUENCE
            , PLANT_CODE
            , EP_ITEM_CODE
            , ITEM_DESC
            , UNIT
            , REQUEST_NET_PRICE
            , REQUEST_QUANTITY
            , CURRENCY_CODE
            , SPEC_DESC
            , DELIVERY_REQUEST_DATE
            , REQUEST_AMOUNT
            , BUYER_EMPNO
            , PURCHASING_DEPARTMENT_CODE
            , REMARK
            , LOCAL_CREATE_DTM
            , LOCAL_UPDATE_DTM
            , CREATE_USER_ID
            , UPDATE_USER_ID
            , SYSTEM_CREATE_DTM
            , SYSTEM_UPDATE_DTM)
        VALUES
            ( :O_D_TABLE.TENANT_ID
            , :O_D_TABLE.COMPANY_CODE
            , :V_LOI_WRITE_NUMBER
            , :O_D_TABLE.LOI_ITEM_NUMBER
            , :O_D_TABLE.ITEM_SEQUENCE 
            , :O_D_TABLE.PLANT_CODE
            , :O_D_TABLE.EP_ITEM_CODE
            , :O_D_TABLE.ITEM_DESC
            , :O_D_TABLE.UNIT
            , :O_D_TABLE.REQUEST_NET_PRICE
            , :O_D_TABLE.REQUEST_QUANTITY
            , :O_D_TABLE.CURRENCY_CODE
            , :O_D_TABLE.SPEC_DESC
            , TO_DATE(:O_D_TABLE.DELIVERY_REQUEST_DATE)
            , :O_D_TABLE.REQUEST_AMOUNT
            , :O_D_TABLE.BUYER_EMPNO
            , :O_D_TABLE.PURCHASING_DEPARTMENT_CODE
            , :O_D_TABLE.REMARK
            , CURRENT_TIMESTAMP
            , CURRENT_TIMESTAMP
            , 'ADMIN'
            , 'ADMIN'
            , CURRENT_TIMESTAMP
            , CURRENT_TIMESTAMP)
    ;

    MERGE INTO EP_LI_DTL AS DTL
        USING :O_D_TABLE
        ON  DTL.TENANT_ID           = :O_D_TABLE.TENANT_ID
        AND DTL.COMPANY_CODE        = :O_D_TABLE.COMPANY_CODE
        AND DTL.LOI_WRITE_NUMBER    = :O_D_TABLE.LOI_WRITE_NUMBER
        AND DTL.LOI_ITEM_NUMBER     = :O_D_TABLE.LOI_ITEM_NUMBER
        AND 'D'                     = :O_D_TABLE.ROW_STATE

    WHEN MATCHED THEN DELETE;


END