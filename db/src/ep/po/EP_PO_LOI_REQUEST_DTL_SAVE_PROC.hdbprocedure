PROCEDURE EP_PO_LOI_REQUEST_DTL_SAVE_PROC (
    IN I_D_TABLE TABLE(   TENANT_ID NVARCHAR(5)
                            , COMPANY_CODE NVARCHAR(10)
                            , LOI_WRITE_NUMBER NVARCHAR(50)
                            , LOI_ITEM_NUMBER NVARCHAR(50)
                            , ITEM_SEQUENCE DECIMAL
                            , EP_ITEM_CODE NVARCHAR(50)
                            , ITEM_DESC NVARCHAR(200) 
                            , UNIT NVARCHAR(3)
                            , REQUEST_QUANTITY DECIMAL
                            , CURRENCY_CODE NVARCHAR(15)
                            , REQUEST_AMOUNT DECIMAL
                            , SUPPLIER_CODE NVARCHAR(100)
                            , BUYER_EMPNO NVARCHAR(30)
                            , REMARK NVARCHAR(3000)
                            , ROW_STATE NVARCHAR(5)
    ),
    OUT O_D_TABLE TABLE(   TENANT_ID NVARCHAR(5)
                            , COMPANY_CODE NVARCHAR(10)
                            , LOI_WRITE_NUMBER NVARCHAR(50)
                            , LOI_ITEM_NUMBER NVARCHAR(50)
                            , ITEM_SEQUENCE DECIMAL
                            , EP_ITEM_CODE NVARCHAR(50)
                            , ITEM_DESC NVARCHAR(200) 
                            , UNIT NVARCHAR(3)
                            , REQUEST_QUANTITY DECIMAL
                            , CURRENCY_CODE NVARCHAR(15)
                            , REQUEST_AMOUNT DECIMAL
                            , SUPPLIER_CODE NVARCHAR(100)
                            , BUYER_EMPNO NVARCHAR(30)
                            , REMARK NVARCHAR(3000)
                            , ROW_STATE NVARCHAR(5)
    ),
    OUT O_RTN_MSG NVARCHAR(3000)
)
LANGUAGE SQLSCRIPT
SQL SECURITY INVOKER 

AS
BEGIN

    /* SQL Error 처리 */
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		ROLLBACK;
        O_RTN_MSG := ::SQL_ERROR_CODE||'-'||::SQL_ERROR_MESSAGE;
	END; 
    
    O_D_TABLE = SELECT  ITEM.TENANT_ID
                        ,ITEM.COMPANY_CODE
                        ,ITEM.LOI_WRITE_NUMBER
                        ,MAP(ITEM.LOI_ITEM_NUMBER, 'new' , EP_LOI_ITEM_NUMBER_SEQ.NEXTVAL, ITEM.LOI_ITEM_NUMBER) AS LOI_ITEM_NUMBER
                        ,ITEM.ITEM_SEQUENCE
                        ,ITEM.EP_ITEM_CODE
                        ,ITEM.ITEM_DESC
                        ,ITEM.UNIT
                        ,ITEM.REQUEST_QUANTITY
                        ,ITEM.CURRENCY_CODE
                        ,ITEM.REQUEST_AMOUNT
                        ,ITEM.SUPPLIER_CODE
                        ,ITEM.BUYER_EMPNO
                        ,ITEM.REMARK
                        ,ITEM.ROW_STATE
                FROM    :I_D_TABLE ITEM;


    MERGE INTO EP_LI_DTL AS DTL
        USING :O_D_TABLE
        ON  DTL.TENANT_ID           = :O_D_TABLE.TENANT_ID
        AND DTL.COMPANY_CODE        = :O_D_TABLE.COMPANY_CODE
        AND DTL.LOI_WRITE_NUMBER    = :O_D_TABLE.LOI_WRITE_NUMBER
        AND DTL.LOI_ITEM_NUMBER     = :O_D_TABLE.LOI_ITEM_NUMBER
    
    WHEN MATCHED THEN
        UPDATE 
        SET ITEM_SEQUENCE       = :O_D_TABLE.ITEM_SEQUENCE
           ,EP_ITEM_CODE        = :O_D_TABLE.EP_ITEM_CODE
           ,ITEM_DESC           = :O_D_TABLE.ITEM_DESC
           ,UNIT                = :O_D_TABLE.UNIT
           ,REQUEST_QUANTITY    = :O_D_TABLE.REQUEST_QUANTITY
           ,CURRENCY_CODE       = :O_D_TABLE.CURRENCY_CODE
           ,REQUEST_AMOUNT      = :O_D_TABLE.REQUEST_AMOUNT
           ,REMARK              = :O_D_TABLE.REMARK
           ,LOCAL_CREATE_DTM    = CURRENT_TIMESTAMP
           ,LOCAL_UPDATE_DTM    = CURRENT_TIMESTAMP
           ,CREATE_USER_ID      = 'ADMIN'
           ,UPDATE_USER_ID      = 'ADMIN'
           ,SYSTEM_CREATE_DTM   = CURRENT_TIMESTAMP
           ,SYSTEM_UPDATE_DTM   = CURRENT_TIMESTAMP

    WHEN NOT MATCHED THEN
        INSERT 
            (TENANT_ID
            , COMPANY_CODE
            , LOI_WRITE_NUMBER
            , LOI_ITEM_NUMBER
            , ITEM_SEQUENCE
            , EP_ITEM_CODE
            , ITEM_DESC
            , UNIT
            , REQUEST_QUANTITY
            , CURRENCY_CODE
            , REQUEST_AMOUNT
            , REMARK
            , LOCAL_CREATE_DTM
            , LOCAL_UPDATE_DTM
            , CREATE_USER_ID
            , UPDATE_USER_ID
            , SYSTEM_CREATE_DTM
            , SYSTEM_UPDATE_DTM)
        VALUES
            ( :O_D_TABLE.TENANT_ID
            , :O_D_TABLE.COMPANY_CODE
            , :O_D_TABLE.LOI_WRITE_NUMBER
            , :O_D_TABLE.LOI_ITEM_NUMBER
            , :O_D_TABLE.ITEM_SEQUENCE 
            , :O_D_TABLE.EP_ITEM_CODE
            , :O_D_TABLE.ITEM_DESC
            , :O_D_TABLE.UNIT
            , :O_D_TABLE.REQUEST_QUANTITY
            , :O_D_TABLE.CURRENCY_CODE
            , :O_D_TABLE.REQUEST_AMOUNT
            , :O_D_TABLE.REMARK
            , CURRENT_TIMESTAMP
            , CURRENT_TIMESTAMP
            , 'ADMIN'
            , 'ADMIN'
            , CURRENT_TIMESTAMP
            , CURRENT_TIMESTAMP)
    ;


 
    COMMIT;
	O_RTN_MSG := 'SUCCESS';	

END