<mvc:View controllerName="xx.template3ColumnsLayout.controller.TemplateMidColumn" 
	xmlns:mvc="sap.ui.core.mvc" 
	xmlns="sap.m" 
	xmlns:uxap="sap.uxap" 
	xmlns:layout="sap.ui.layout" 
    xmlns:form="sap.ui.layout.form"
	xmlns:core="sap.ui.core"
    xmlns:lib-m="ext.lib.control.m"
	height="100%">

	<uxap:ObjectPageLayout id="page"
		toggleHeaderOnTitleClick="true"
		alwaysShowContentHeader = "true"
		preserveHeaderStateOnScroll="false"
		headerContentPinnable="true"
		isChildPage="true"
		upperCaseAnchorBar="false"
		showTitleInHeaderContent="true"
		showEditHeaderButton="true" 
		showFooter="false">
		<uxap:headerTitle>
			<uxap:ObjectPageDynamicHeaderTitle>
				<uxap:expandedHeading>
					<Title text="{company>/company_name}" wrapping="true" />
				</uxap:expandedHeading>
				<uxap:snappedHeading>
					<Title text="{company>/company_name}" wrapping="true" />
				</uxap:snappedHeading>
				<uxap:expandedContent>
				</uxap:expandedContent>
				<uxap:snappedContent>
				</uxap:snappedContent>
				<uxap:snappedTitleOnMobile>
					<Title text="{company>/company_name}" />
				</uxap:snappedTitleOnMobile>
                <uxap:navigationActions>
					<OverflowToolbarButton id="pageEnterFullScreenButton" type="Transparent" icon="sap-icon://full-screen" press="onPageEnterFullScreenButtonPress" tooltip="Enter Full Screen Mode" visible="{= ${/actionButtonsInfo/midColumn/fullScreen} !== null }"/>
					<OverflowToolbarButton id="pageExitFullScreenButton" type="Transparent" icon="sap-icon://exit-full-screen" press="onPageExitFullScreenButtonPress" tooltip="Exit Full Screen Mode" visible="{= ${/actionButtonsInfo/midColumn/exitFullScreen} !== null }"/>
					<OverflowToolbarButton id="pageNavBackButton" type="Transparent" icon="sap-icon://decline" text="back" tooltip="back to the list" press=".onPageNavBackButtonPress" visible="{= ${/actionButtonsInfo/midColumn/closeColumn} !== null }"/>
                </uxap:navigationActions>
			</uxap:ObjectPageDynamicHeaderTitle>
		</uxap:headerTitle>

		<uxap:headerContent>
            <FlexBox
                    alignItems="Start"
                    justifyContent="SpaceBetween">
                <items>
                    <Panel backgroundDesign="Transparent" class="sapUiNoContentPadding">
                        <content>
                            <layout:HorizontalLayout allowWrapping="true">
                                <layout:VerticalLayout class="sapUiLargeMarginEnd">
                                    <ObjectAttribute title="Location" text="{company>/country_code}"/>
                                    <ObjectAttribute title="Currency" text="{company>/currency_code}"/>
                                </layout:VerticalLayout>
                                <layout:VerticalLayout class="sapUiLargeMarginEnd">
                                    <ObjectAttribute title="Language" text="{company>/language_code}"/>
                                </layout:VerticalLayout>
                                <layout:VerticalLayout class="sapUiLargeMarginEnd">
                                    <ObjectAttribute title="Availability"/>
                                    <ObjectStatus text="In Stock" state="Success" />
                                </layout:VerticalLayout>
                            </layout:HorizontalLayout>
                        </content>
                    </Panel>
                </items>
            </FlexBox>
		</uxap:headerContent>

		<uxap:sections>
			<uxap:ObjectPageSection titleUppercase="false" title="Tenant">
				<uxap:subSections>
					<uxap:ObjectPageSubSection>
						<form:SimpleForm editable="false" >
						    <ObjectAttribute title="{company>/tenant_name}" text="{company>/tenant_id}"/>
                        </form:SimpleForm>
					</uxap:ObjectPageSubSection>
				</uxap:subSections>
			</uxap:ObjectPageSection>

			<uxap:ObjectPageSection id="pageSectionMain" titleUppercase="false" title="Company">
				<uxap:subSections>
					<uxap:ObjectPageSubSection id="pageSubSection1" >
					</uxap:ObjectPageSubSection>
				</uxap:subSections>
			</uxap:ObjectPageSection>

			<uxap:ObjectPageSection titleUppercase="false" title="History" visible="{= !${midObjectViewModel>/isAddedMode}}">
				<uxap:subSections>
					<uxap:ObjectPageSubSection>
						<form:SimpleForm editable="false" >
		                    <core:Title text="Created" />
							<Label text="By"/>
							<Text text="{company>/create_user_id}"/>
							<Label text="At"/>
							<Text text="{
									path: 'company>/system_create_dtm',
									formatter: '.dateFormatter.toUTCDateTimeString'
								}"/>
		                    <core:Title text="Updates" />
							<Label text="By"/>
							<Text text="{company>/update_user_id}"/>
							<Label text="At"/>
							<Text text="{
									path: 'company>/system_update_dtm',
									formatter: '.dateFormatter.toUTCDateTimeString'
                                }"/>
						</form:SimpleForm>
					</uxap:ObjectPageSubSection>
				</uxap:subSections>
			</uxap:ObjectPageSection>

			<uxap:ObjectPageSection titleUppercase="false" title="Departments">
				<uxap:subSections>
					<uxap:ObjectPageSubSection>
						<Table id="midTable" 
								sticky="HeaderToolbar,ColumnHeaders" 
								inset="false" 
                                growing="true"
                                growingThreshold="10"
								class="sapFDynamicPageAlignContent" 
								mode="SingleSelectLeft" 
								width="auto">
							<headerToolbar>
								<OverflowToolbar>
                                    <Title text="Most Important Departments ({= ${department>/}.length || 0})" level="H2"/>
									<ToolbarSpacer/>
									<!-- Add the Personalization button -->
									<Button id="midTableAddButton" text="Add" type="Transparent" press=".onMidTableAddButtonPress" />
									<!-- <Button id="midTableDeleteButton" text="Delete" type="Transparent" press=".onMidTableDeleteButtonPress" /> -->
								</OverflowToolbar>
							</headerToolbar>
							<columns>
								<Column minScreenWidth="Tablet" hAlign="Right" width="5rem">
									<Label text="{I18N>/CODE}" />
								</Column>
								<Column minScreenWidth="Tablet" hAlign="Left" demandPopin="true" importance="High" popinDisplay="WithoutHeader">
									<Label text="{I18N>/DEPARTMENT}" />
								</Column>
								<Column minScreenWidth="Tablet" hAlign="Left" demandPopin="true" popinDisplay="WithoutHeader" >
									<Label text="Parent Dept." />
								</Column>
								<Column minScreenWidth="Tablet" hAlign="Center" width="10rem">
									<Label text="Children Dept." />
								</Column>
							</columns>
						</Table>
					</uxap:ObjectPageSubSection>
				</uxap:subSections>
			</uxap:ObjectPageSection>

		</uxap:sections>
		
    </uxap:ObjectPageLayout>
    
    <Dialog id="dialogCreateDepartment" class="sapUiSizeCompact" title="Create a Department" contentWidth="35%">
        <content>
            <VBox>
                <form:SimpleForm 
                        maxContainerCols="2"
                        editable="true"
                        layout="ResponsiveGridLayout"
                        adjustLabelSpan="false"
                        labelSpanL="4"
                        labelSpanM="4"
                        emptySpanL="0"
                        emptySpanM="0"
                        columnsL="2"
                        columnsM="2">
                    <form:content>
                        <VBox>
                            <Label text="department_code" required="true"/>
                            <Input value="{dialogCreateModel>/department_code}" required="true" />
                        </VBox>
                        <VBox>
                            <Label text="department_name" required="true"/>
                            <Input value="{dialogCreateModel>/department_name}" required="true" />
                        </VBox>
                        <VBox>
                            <Label text="parent_department_code" required="true"/>
                            <Input value="{dialogCreateModel>/parent_department_code}" required="true" />
                        </VBox>
                        <VBox>
                            <Label text="use_flag" required="true"/>
                            <SegmentedButton 
                                selectedKey="{
                                    path: 'dialogCreateModel>/use_flag',
                                    type : 'sap.ui.model.type.Boolean'
                                }" >
                                <items>
                                    <SegmentedButtonItem text="Yes" width="3em" key="true"/>
                                    <SegmentedButtonItem text="No" width="3em" key="false"/>
                                </items>
                            </SegmentedButton>
                        </VBox>
                        <VBox>
                            <Label text="department_korean_name" />
                            <Input value="{dialogCreateModel>/department_korean_name}" required="true" />
                        </VBox>
                        <VBox>
                            <Label text="department_english_name" />
                            <Input value="{dialogCreateModel>/department_english_name}" required="true" />
                        </VBox>
                        <VBox>
                            <Label text="department_leader_empno" />
                            <Input value="{dialogCreateModel>/department_leader_empno}" required="true" />
                        </VBox>
                        <VBox>
                            <Label text="department_type_code" />
                            <Input value="{dialogCreateModel>/department_type_code}" required="true" />
                        </VBox>
                        <VBox>
                            <Label text="full_path_desc" />
                            <Input value="{dialogCreateModel>/full_path_desc}" required="true" />
                        </VBox>
                    </form:content>
                </form:SimpleForm>
            </VBox>
        </content>
        <beginButton>
            <Button text="Cancel" type="Transparent" press=".onDialogCreateDepartmentCancelButtonPress"/>
        </beginButton>
        <endButton>
            <Button text="Create" type="Emphasized" press=".onDialogCreateDepartmentCreateButtonPress"/>
        </endButton>
    </Dialog>

</mvc:View>