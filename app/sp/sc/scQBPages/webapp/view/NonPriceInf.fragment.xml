

<core:FragmentDefinition
    xmlns="sap.m"
    xmlns:v="sap.ui.comp.valuehelpdialog"
    xmlns:core="sap.ui.core"
    xmlns:fb="sap.ui.comp.filterbar"
    xmlns:u="sap.ui.unified"
    >
    <Dialog
        beforeOpen="NonPricePopupBeforeOpen" 
        beforeClose="NonPricePopupBeforeClose" 
        title="Non Price"  >
        <!-- contentWidth="80rem" contentHeight="40rem"  -->
        <VBox class="sapUiLargeMargin">
            <!-- Header 입력 start -->
            <VBox class="sapUiSmallMarginBegin" width="80%">
                <HBox class="sapUiTinyMarginBottom" width="100%">
                    <VBox width="15%" class="sapUiLargeMarginEnd" >
                        <Label  text="평가항목 유형" 
                                required="true"
                                class="sapMLabelNoText"/>
                        <Select width="100%" selectedKey="{NPHeaderModel>/h1}" 
                            
                            enabled="{= ${NPInfPopupUtil>/enabled} === false ? false : true}">
                            <core:Item key="COMMERCIAL" text="Commercial" />
                            <core:Item key="TECHNICAL" text="Technical" />
                        </Select >
                    </VBox>
                    
                    <VBox width="85%" class="marginLargeL">
                        <Label  text="요구사항" 
                                required="true"
                                class="sapMLabelNoText"/>
                        <Input  value="{NPHeaderModel>/h2}" class="sapMLabelNoText" placeholder="최대 1000 자까지 입력 할 수 있습니다."
                                editable="{=${propInfo>/isEditMode}}"/>
                    </VBox>
                </HBox>
                <HBox class="sapUiTinyMarginBottom" width="100%">
                    <VBox width="100%">
                        <Label  text="비고" 
                                class="sapMLabelNoText"/>
                        <TextArea value="{NPHeaderModel>/h3}" cols="300" editable="{=${propInfo>/isEditMode}}"/>
                    </VBox>
                </HBox>
                <HBox class="sapUiTinyMarginBottom" width="100%">
                    <VBox width="15%" class="sapUiLargeMarginEnd">
                        <Label  text="평가 속성" 
                                required="true"
                                class="sapMLabelNoText"/>
                        <Select width="100%" change="selectNPTypeChange" selectedKey="{NPHeaderModel>/h4}"
                            enabled="{= ${NPInfPopupUtil>/enabled} === false ? false : true}">
                            <core:Item key="DATE" text="Date" />
                            <core:Item key="NUMBER" text="Number" />
                            <core:Item key="TEXT" text="Text" />
                        </Select >
                    </VBox>
                    <VBox width="15%" class="sapUiLargeMarginBeginEnd">
                        <Label  text="점수 신청 방법" 
                                required="true"
                                class="sapMLabelNoText"/>
                        <Select width="100%" selectedKey="{NPHeaderModel>/h5}" editable="{=${propInfo>/isEditMode}}">
                            <core:Item key="AUTOMATIC" text="Automatic" />
                            <core:Item key="NONE" text="None" />
                        </Select >
                    </VBox>
                    <VBox width="15%" class="sapUiLargeMarginBeginEnd">
                        <Label  text="Target Score" 
                                required="true"
                                class="sapMLabelNoText"/>
                        <Input   value="{NPHeaderModel>/h6}" width="100%" type="Number" validateFieldGroup="vfgHeader"
                                editable="{=${propInfo>/isEditMode}}"/>
                    </VBox>
                </HBox>
            </VBox>
            <!-- Header 입력 end -->

            <!-- 파일 업로드 start -->
            <VBox class="sapUiSmallMarginBottom sapUiSmallMarginTop">
                <Table class="sapUiSmallMarginBottom">
                    <headerToolbar>
                        <OverflowToolbar class="NonPricePopHeader" visible="{=${propInfo>/isEditMode}}">
                            <content>
                                <Title text="첨부파일" level="H2"/>
                                <ToolbarSpacer />
                                <u:FileUploader uploadComplete="handleUploadComplete" change=".createConfirmBox" style="Transparent" buttonText="Add File"
                                                                    buttonOnly="true" iconOnly="false" />
                                <!-- <Button  text="Add File" type="Transparent" press="" /> -->
                                <!-- <Button  text="Delete" type="Transparent" press=".onNonPriceItemDelete" /> -->
                            </content>
                        </OverflowToolbar>
                    </headerToolbar>
                    <columns class="NonPricePopTab">
                        <Column 
                            width="50%"
                            hAlign="Center"
                            minScreenWidth="Tablet"
                            demandPopin="true">
                            <Text text="File Name" />
                        </Column>
                        <Column
                            width="50%"
                            hAlign="Center"
                            minScreenWidth="Tablet"
                            demandPopin="true">
                            <Label text="Description" required="true" />
                        </Column>
                    </columns>
                    <items class="NonPricePopTab">
                        <ColumnListItem class="NonPricePopTab">
                            <cells>
                                <!-- <Text text="" />
                                <Text text="" /> -->
                            </cells>
                        </ColumnListItem>
                    </items>
                </Table>
            </VBox>

            <!-- 파일 업로드 end -->

            <!-- Item 입력 start -->
            <VBox>
                <ScrollContainer vertical="false" focusable="true" >
                    <Table mode="{=${propInfo>/isEditMode} ? 'MultiSelect' : 'None' }"
                        items="{
                            path : 'NegoItemNonPrice>/ItemsNonPriceDtl'
                        }"
                        inset="false">
                        <headerToolbar>
                            <OverflowToolbar class="NonPricePopHeader" visible="{=${propInfo>/isEditMode}}">
                                <content>
                                    <!-- <Title text="Item Title Name" level="H2"/> -->
                                    <ToolbarSpacer />
                                    <Button  text="{I18N>/ROW_ADD}" type="Transparent" press=".onNonPriceItemAdd" />
                                    <Button  text="{I18N>/ROW_DELETE}" type="Transparent" press=".onNonPriceItemDelete" />
                                </content>
                            </OverflowToolbar>
                        </headerToolbar>
                        <columns>
                            <Column width="40px">
                                <Text text="" />
                            </Column>
                            <!-- <Column 
                                width="10%">
                                <Text text="" />
                            </Column> -->
                            <Column width="35%"
                                visible="{= ${NPInfPopupUtil>/type} === 'DATE' ? true : false}"
                                hAlign="Center"
                                minScreenWidth="Tablet"
                                demandPopin="true">
                                <Label text="Response Value From" required="true" />
                            </Column>
                            <Column width="35%"
                                visible="{= ${NPInfPopupUtil>/type} === 'DATE' ? true : false}"
                                minScreenWidth="Desktop"
                                demandPopin="true"
                                hAlign="Center">
                                <Label text="Response Value To" required="true" />
                            </Column>
                            <Column width="35%"
                                visible="{= ${NPInfPopupUtil>/type} === 'NUMBER' ? true : false}"
                                hAlign="Center"
                                minScreenWidth="Tablet"
                                demandPopin="true">
                                <Label text="Response Value From" required="true" />
                            </Column>
                            <Column width="35%"
                                visible="{= ${NPInfPopupUtil>/type} === 'NUMBER' ? true : false}"
                                minScreenWidth="Desktop"
                                demandPopin="true"
                                hAlign="Center">
                                <Label text="Response Value To" required="true" />
                            </Column>
                            <Column width="70%"
                                visible="{= ${NPInfPopupUtil>/type} === 'TEXT' ? true : false}"
                                hAlign="Center"
                                minScreenWidth="Tablet"
                                demandPopin="true">
                                <Label text="Response Value" required="true" />
                            </Column>

                            <Column width="30%"
                                
                                minScreenWidth="Desktop"
                                demandPopin="true"
                                hAlign="Center">
                                <Label text="점수 " required="true" />
                            </Column>
                        </columns>
                        <items>
                            <ColumnListItem>
                                <!-- <cells>
                                    <ObjectStatus icon="{
                                        path: 'NegoItemNonPrice>_row_state_',
                                        formatter: '.formatter.toModelStateColumnIcon'
                                    }" />



                                    <DatePicker editable="{=${propInfo>/isEditMode}}" 
                                        valueFormat="yyyy/MM/dd" displayFormat="yyyy/MM/dd" 
                                        value="{path: 'NegoItemNonPrice>supeval_from_date', type: 'sap.ui.model.odata.type.Date', 
                                                formatOptions: { pattern: 'yyyy/MM/dd' , UTC: true} }" />
                                    <DatePicker editable="{=${propInfo>/isEditMode}}" 
                                        valueFormat="yyyy/MM/dd" displayFormat="yyyy/MM/dd" 
                                        value="{path: 'NegoItemNonPrice>supeval_to_date', type: 'sap.ui.model.odata.type.Date', 
                                                formatOptions: { pattern: 'yyyy/MM/dd' , UTC: true} }" />

                                    <Input value="{NegoItemNonPrice>supeval_from_value}" editable="{=${propInfo>/isEditMode}}" />
                                    <Input value="{NegoItemNonPrice>supeval_to_value}" editable="{=${propInfo>/isEditMode}}" />

                                    <Input value="{NegoItemNonPrice>supeval_text_value}" editable="{=${propInfo>/isEditMode}}" />

                                    <Input value="{NegoItemNonPrice>supeval_score}" editable="{=${propInfo>/isEditMode}}"/> 
                                </cells> -->
                            </ColumnListItem>
                        </items>
                    </Table>
                </ScrollContainer>
            </VBox>
        </VBox>

        <beginButton>
			<Button text="{I18N>/CANCEL}" press=".onPressNonPriceDialogClose"/>
	    </beginButton>
        <endButton>
            <Button text="{I18N>/APPLY}" visible="{=${propInfo>/isEditMode}}" type="Emphasized" press=".onPressNonPriceDialogApply" />
        </endButton>
    </Dialog>
</core:FragmentDefinition>
